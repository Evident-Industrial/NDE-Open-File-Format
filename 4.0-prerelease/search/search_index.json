{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>Info</p> <p>We are excited to share with you this prerelease page that details the new functionalities and changes that will be introduced in the next version of the .NDE file format (version 4.0). This major update is scheduled for release around November this year.\u00a0</p> <p>Version 4.0 will pave the way for supporting Eddy Current modality and advanced ultrasonic functionalities such as FMC, HMC, and PWI. The new data structure is designed to seamlessly adapt and accommodate future requirements or needs. We developed this new version with versatility and simplicity in mind, catering to both the simplest and most complex use cases.\u00a0\u00a0\u00a0</p> <p>Please note that this new version will introduce breaking changes which you should consider for your future developments. </p> <p>This is a preliminar version of .NDE 4.0 documentation solely intended to inform the user on upcoming updates. Changes and updates can still be made, especially regarding semantics. Do not use the information contained on this page as an official release. If you are not yet using the .NDE format for custom applications, we recommend waiting for the official release to be published. </p> <p>This version of the documentation is a living document that was last updated on October 2, 2024. See the history page for more details.</p> <p>To communicate with the development team for support, to provide feedback or to be added to our mailing list for updates, please reach out to nde_support@evidentscientific.com.</p> <p>The .NDE file format is designed for storage of nondestructive testing (NDT) data. It is platform-independent and modality-agnostic.  It provides a relatively simple file structure for mainstream NDT applications while enabling support for future complex solutions and technologies. Data is stored using the HDF5 file format combined with a JSON text format describing the associated metadata. </p> <p>This documentation details the requirements that a .NDE file must fulfill through two main standardized aspects: </p> <ul> <li>The HDF5 structure containing the raw data</li> <li>The JSON formatted Setup and Properties datasets describing the associated metadata that can be validated against a JSON schema. </li> </ul> <p>The .NDE file format is one of the primary interfaces of the Unified NDT Inspection Software (UNIS) platform currently being developed by Evident. The .NDE file format will be supported by all future NDT software applications developed by Evident.</p> <p>UNIS is an open platform that can be used by all stakeholders in the NDE world to enable NDE 4.0 and accelerate software development.</p>"},{"location":"#about","title":"About","text":""},{"location":"#license","title":"License","text":"<p>The .NDE format is distributed under an MIT license.</p>"},{"location":"#support","title":"Support","text":"<p>To communicate with the development team for support or to provide feedback, please contact nde_support@evidentscientific.com.</p>"},{"location":"examples/","title":"Examples","text":"<p>Examples of the same files in .NDE version 3.3 and 4.0 are provide below for 3 common use cases. </p>"},{"location":"examples/#manual-weld-scanning-using-conventional-ultrasound","title":"Manual Weld Scanning using Conventional Ultrasound","text":"<p>In this example, a weld bead on a 26 mm thick stainless steel plate is manually scanned using a C550 3.5 MHz single-element angle beam transducer mounted on a SPE2-60S-IHC 39\u00b0 wedge. The probe's position is recorded using an encoder.  </p> File name 3.3 4.0 ManualWeldUT.nde Download - View Download - View"},{"location":"examples/#manual-weld-scanning-using-phased-array-ultrasound","title":"Manual Weld Scanning using Phased-Array Ultrasound","text":"<p>In this example, a weld bead on a 26 mm thick stainless steel plate is manually scanned using a 2.25L16-A10 2.25 MHz 16 elements transducer mounted on a SA10-N55S 2.25L16 36\u00b0 wedge. The probe's position is recorded using an encoder.  </p> File name 3.3 4.0 ManualWeldPA.nde Download - View Download - View"},{"location":"examples/#wheel-probe-scanning-using-phased-array-ultrasound","title":"Wheel Probe Scanning using Phased-Array Ultrasound","text":"<p>In this example, a 12 mm thick plexiglass plate comprising engraved letters is scanned using the RollerFORM scanner and a 3.5L64-IWP1 3.5 MHz 64 elements transducer. The probe's position is recorded using the scanner encoder. </p> File name 3.3 4.0 RollerFORM.nde Download - View Download - View"},{"location":"faq/","title":"FAQ","text":"Regarding .nde files produced by Evident's instruments, will I still be able to use OpenViewSDK? <p>Evident won't support OpenViewSDK after the release of the .NDE file format version 4.0. Hence, OpenViewSDK won't be compatible with .NDE 4.0 files. </p> Will Evident's software still support previous versions of .NDE files? <p>Evident's software will ensure backward compatibility with previous versions of .NDE files saved with their corresponding instruments. Please note that Evident's software applications listed below do not currently support .NDE files produced by third parties. </p> Software .NDE files compatibility OmniPC 2.X, 3.X &amp; 4.X saved with the Omniscan (MXU) WeldSight 2.X, 3.X &amp; 4.X saved with the Omniscan (MXU) PipeWIZARD 2.X, 3.X &amp; 4.X saved with the PipeWizard Why Evident's software applications are only compatible with .NDE files saved with their corresponding instruments? <p>The .NDE open file format was designed to provide access to the data and as such the public section of the .NDE files contain all the necessary information for post-processing your data. New UNIS-based software applications from Evident will natively support the .NDE file format. However, for Evident software applications that existed prior to introducing the .NDE open file format, the support is currently limited.</p> Will Evident charge its customers to access their data and read .NDE files in the future? <p>No. The .NDE file format is built on an open-source mindset and technical foundations (such as HDF5 and JSON). Therefore, access to the data stored in .NDE files will always be free and open (with the exception of the private section of the file under \"/Applications\" which is not documented nor standardized). Our users own their data and should be free to use it as they want.</p>"},{"location":"history/","title":"History","text":""},{"location":"history/#06102024-initial-publication-of-nde-40-pre-release-page","title":"06/10/2024 Initial publication of .NDE 4.0 pre-release page.","text":""},{"location":"history/#06112024-update-of-the-info-message-on-overview-page","title":"06/11/2024 Update of the Info message on Overview page.","text":""},{"location":"history/#10022024-updates-previous-to-nde-40-release","title":"10/02/2024 Updates previous to .NDE 4.0 release.","text":"<ul> <li>Applications and Domain sections renaming (Private and Public respectively)</li> <li>New metadata Properties dataset</li> <li>Addition of the totalFocusingMethod and ultrasonicMatrixCapture processes</li> <li>Update of the example files </li> <li>Other general updates</li> </ul>"},{"location":"whats-new-4.0/","title":"What's new in 4.0","text":""},{"location":"whats-new-4.0/#motivations","title":"Motivations","text":"<p>The existing version of the .NDE file format has limited support for Eddy current modality, advanced ultrasonic features, and future developments. Therefore, an update introducing breaking changes was necessary to establish a more flexible structure capable of seamlessly adapting to and accommodating new requirements or needs, while still maintaining a high level of standardization. This new structure will, for example, enables intergroup relationships within the JSON Setup dataset while preserving the simplicity of straightforward use cases.</p>"},{"location":"whats-new-4.0/#new-concepts","title":"New concepts","text":"<p>NDE 4.0 introduces a new way of structuring the .NDE File Format but also some new concepts.</p> <p>Within the JSON formatted Setup dataset:</p> <ul> <li> <p>DataClass \u2013 Allows to quickly identify the type of data associated with a Dataset. This attribute is standardized, documented, and included to the description of a datasets array item in the JSON Setup dataset structure. This was not standardized in previous versions and only had similar functionalities through the naming of previous dataset object sub-objects. </p> </li> <li> <p>Processes \u2013 A better way to describe how parameters are applied during acquisition or analysis and their impact on the resulting datasets. This object is standardized, documented, and added to the JSON Setup dataset structure. This was not standardized in previous versions and only had similar component in the description of the acquisition parameters found in the dataset object of the JSON Setup dataset structure.</p> </li> </ul> <p>The JSON formatted Properties dataset:  the approach for handling file-wide metadata was changed to adopt the same as the rest of the acquisition metadata with the Setup dataset. Hence, all metadata previously stored as HDF5 attributes at the root of the file are now stored within the Properties dataset, still located at the root of the file, and can be validated against a dedicated JSON Schema. See below for more information.</p> <p>Note</p> <p>To avoid confusion between HDF5 Groups and Groups defined within the .NDE standard, the term \"path\" will be preferred to designate an HDF5 Group. </p>"},{"location":"whats-new-4.0/#modifications-to-the-hdf-structure","title":"Modifications to the HDF Structure","text":"<p>The overall HDF structure spirit remains unchanged with a container for nonstandardized application usage (/Private) and a standardized container for the data and setup or any contextual information that describes the data (/Public). </p> <ul> <li>The name of those root containers was slightly revisited to be more meaningful, hence the previous /Applications section is renamed /Private    and the previous /Domain section is renamed /Public.</li> </ul> <ul> <li> <p>Groups, that may contain inspection data but also other context information, were previously found under the /Domain/DataGroups path. They are now stored under the /Public/Groups path to reflect the JSON Setup dataset structure as illustrated below. </p> <pre><code>flowchart TD\n    subgraph tre[\"Version 4.0\"]\n    direction LR\n    .nde4[.nde]:::root --&gt; Private[\"/Private\"]:::group\n    .nde4[.nde] --&gt; Public[\"/Public*\"]:::group\n    .nde4[.nde] --&gt; Properties[\"/Properties*\"]:::dataset\n    Public[\"/Public*\"] --&gt; Setup4[\"/Setup*\"]:::dataset\n    Public[\"/Public*\"] --&gt; Groups4[\"/Groups\"]:::group\n    style tre color:#000000\n    classDef root fill:#005cb9,stroke:#000000,color:#000000\n    classDef group fill:#ffc72c,stroke:#000000,color:#000000\n    classDef dataset fill:#fff,stroke:#000000,color:#000000\n    end\n    subgraph \"Version 3.3\"\n    direction LR\n    .nde3[.nde]:::root --&gt; Applications[\"/Applications\"]:::group\n    .nde3[.nde] --&gt; Domain[\"/Domain*\"]:::group\n    Domain[\"/Domain*\"] --&gt; Setup3[\"/Setup*\"]:::dataset\n    Domain[\"/Domain*\"] --&gt; Groups3[\"/Groups\"]:::group\n    classDef root fill:#005cb9,stroke:#000000,color:#000000\n    classDef group fill:#ffc72c,stroke:#000000,color:#000000\n    classDef dataset fill:#fff,stroke:#000000,color:#000000\n    end</code></pre> </li> <li> <p>Datasets, that contain inspection data, were previously stored following a ../[DataGroupId] + /Dataset + /[DatasetId] + /[DatasetType] path chain. They are now stored using the ../[GroupId] + /Datasets + /[DatasetId-DataClass] path chain, to simplify the access to data and reflect the JSON Setup dataset structure as illustrated in the example below.</p> <pre><code>flowchart TD\n    subgraph \"Version 4.0\"\n        direction LR\n        Groups4[Groups]:::gen --&gt; 04[0]:::gen\n        04 --&gt; Datasets4[Datasets]:::gen\n        Datasets4[Datasets] --&gt; 0-AScanAmplitude:::gen\n        Datasets4[Datasets] --&gt; 1-AScanStatus:::gen\n        Datasets4[Datasets] --&gt; 2-FiringSource:::gen\n        classDef gen fill:#fff,stroke:#000000,color:#000000\n    end\n    subgraph \"Version 3.3\"\n        direction LR\n        DataGroups3[DataGroups]:::gen --&gt; 03_1[0]:::gen\n        03_1 --&gt; Dataset3[Dataset]:::gen\n        Dataset3[Dataset] --&gt; 03_2[0]:::gen\n        03_2 --&gt; Amplitude:::gen\n        03_2 --&gt; Status:::gen\n        Dataset3[Dataset] --&gt; 13_2[1]:::gen\n        13_2 --&gt; FiringSource:::gen\n        classDef gen fill:#fff,stroke:#000000,color:#000000\n    end</code></pre> </li> </ul>"},{"location":"whats-new-4.0/#modifications-to-the-json-setup-dataset","title":"Modifications to the JSON Setup dataset","text":"<p>Info</p> <p>A pre-release version of the new JSON Schema used to validate the Setup dataset can be downloaded here. </p>"},{"location":"whats-new-4.0/#updated-groups-structure-with-datasets-and-processes","title":"Updated groups structure with datasets and processes","text":"<p>The concept of process is introduced and added to the description of groups, making the groups structure more standardized and enabling distinction between the information relative to the data contained in datasets and the parameters used to create or modify these datasets. </p> <p>Processes are described by their id, their inputs and outputs and a specific object listing all its parameters. Previous acquisition parameters objects - such as paut - and nested softwareProcess objects - such as thickness - are now converted to processes array items. By adopting this more general structure, possibilities are endless and notably enables intergroup relationships. Hence, processes can be chained and may have other processes as input as illustrated in the example below.</p> <pre><code>    flowchart TD\n    subgraph \"Group 1\"\n    Process1Gr1[\u2699\ufe0f Process 1]:::gen --&gt; Process2Gr1[\u2699\ufe0f Process 2]:::gen\n    Process1Gr1[\u2699\ufe0f Process 1] ----&gt; Dataset1Gr1[\ud83d\udcca Dataset 1]:::gen\n    Process2Gr1[\u2699\ufe0f Process 2] --&gt; Process3Gr1[\u2699\ufe0f Process 3]:::gen\n    Process3Gr1[\u2699\ufe0f Process 3] --&gt; Dataset2Gr1[\ud83d\udcca Dataset 2]:::gen\n    classDef gen fill:#fff,stroke:#000000,color:#000000\n    end\n    subgraph \"Group 2\"\n    Process1Gr1:::gen --&gt; Process1Gr2[\u2699\ufe0f Process 1]:::gen\n    Process1Gr2[\u2699\ufe0f Process 1] ----&gt; Dataset1Gr2[\ud83d\udcca Dataset 1]:::gen\n    Process1Gr2[\u2699\ufe0f Process 1] ----&gt; Dataset2Gr2[\ud83d\udcca Dataset 2]:::gen\n    Process1Gr2[\u2699\ufe0f Process 1] ----&gt; Dataset3Gr2[\ud83d\udcca Dataset 3]:::gen\n    classDef gen fill:#fff,stroke:#000000,color:#000000\n    end\n</code></pre> <p>Here is an example showing the difference between a typical JSON Setup dataset structure in version 3.3 and version 4.0 with new groups structure:</p> 4.03.3 <pre><code>{\n\"$schema\": \"./NDE-FileFormat-Schema-4.0.0.json\",\n\"version\": \"4.0.0\",\n\"scenario\": \"General Mapping\",\n\"groups\": [\n    {\n    \"id\": 0,\n    \"name\": \"GR-1\",\n    \"datasets\": [],\n    \"processes\": [\n        {\n        \"id\":0,\n        \"inputs\": [],\n        \"outputs\": [],\n        \"dataMappingId\": 0,\n        \"ultrasonicPhasedArray\": {}, // (1)!\n        }\n    ]\n    }\n],\n\"acquisitionUnits\": [],\n\"motionDevices\": [],\n\"dataMappings\": [], // (2)!\n\"specimens\": [],\n\"probes\": [],\n\"wedges\": []\n}\n</code></pre> <ol> <li>The same paut object as defined in version 3.3, renamed ultrasonicPhasedArray, is now nested inside a process object. </li> <li>dataEncodings is renamed dataMappings in version 4.0 to avoid misinterpretation with other encoding types.</li> </ol> <pre><code>{\n\"$schema\": \"./NDE-FileFormat-Schema-3.3.0.json\",\n\"version\": \"3.3.0\",\n\"scenario\": \"General Mapping\",\n\"groups\": [\n    {\n    \"id\": 0,\n    \"name\": \"GR-1\",\n    \"paut\": {},\n    \"dataset\": [],\n    }\n],\n\"acquisitionUnits\": [],\n\"motionDevices\": [],\n\"dataEncodings\": [],\n\"specimens\": [],\n\"probes\": [],\n\"wedges\": []\n}\n</code></pre> <p>Additionnaly, the role of each group structure layer is clearly defined: </p> <ul> <li> <p>Group: A group comprises datasets and processes that are inherently interconnected. Group identity is defined by its first process (processes[{\"id\": 0}]). A dataset invariably originates from a process.</p> </li> <li> <p>Dataset: A dataset is the minimum description of the content of a container for data of homogeneous nature, characterized by standardized data classes, with its volume potentially necessitating storage within the HDF5 structure. Through the process it originates, it establishes a connection between the data and physical reality (time and space).</p> </li> <li> <p>Process: A process describes an operation aimed at creating, modifying, or formatting data, which are ultimately stored or referenced within a dataset. Processes have inputs and outputs and can be directly linked to a dataset or to another process. </p> </li> </ul>"},{"location":"whats-new-4.0/#new-processes-structure","title":"New processes structure","text":"<p>The new concept of processes is introduced as an array comprising as many items as required to describe the processes chain leading to a dataset. Previous acquisition parameters objects - such as paut - and nested softwareProcess objects - such as thickness - are now converted to processes array items.</p> <p>The processes array</p> Property Description id* [number] The unique id of the process inside its parent group inputs [object] An object listing the group, process and output id used as inputs of the process. outputs [object] An object listing the dataset id and, if needed, the specific parameters of this output. implementation [string] Type of implementation for this process, typically <code>Hardware</code> or <code>Sotfware</code> dataMappingId [integer] The unique id of the dataMapping object related to the process <code>process specific object</code> [object] A specific object to describe process parameters, such as <code>ultrasonicPhasedArray</code> or <code>ultrasonicThickness</code> <p>Here is an example showing the difference between a specific paut acquisition object in version 3.3 and the new processes array in version 4.0 with the corresponding ultrasonicPhasedArray and ultrasonicThickness objects:</p> 4.03.3 <pre><code>\"processes\": [\n    {\n      \"inputs\": [],\n      \"outputs\": [],\n      \"id\": 0, \n      \"implementation\": \"Hardware\", \n      \"dataMappingId\": 0,\n      \"ultrasonicPhasedArray\": {\n        \"pulseEcho\": {},\n        \"waveMode\": \"Longitudinal\",\n        \"...\"}\n    },\n    {\n      \"inputs\": [],\n      \"outputs\": [],\n      \"id\": 1,\n      \"implementation\": \"Software\",\n      \"thickness\": {\n        \"min\": 0.00275,\n        \"...\"\n      }\n    }\n]\n</code></pre> <pre><code>\"paut\": {\n    \"pulseEcho\": {},\n    \"waveMode\": \"Longitudinal\",\n    \"...\"\n    \"softwareProcess\": {\n      \"thickness\": {\n        \"min\": 0.00275\n      }\n    }\n  }\n</code></pre>"},{"location":"whats-new-4.0/#updated-datasets-structure","title":"Updated datasets structure","text":"<p>The structure of datasets was also affected to be more general and versatile. Note that the dataset object is now plural - datasets - and is an array with standardize structure comprising an id, a dataTransformations array, a dataClass and - inherited from version 3.3 - a path and a dimensions object. </p> <p>Datasets array - replacing the previous dataset object</p> Property Description id* [number] The unique id of the dataset inside its parent group dataTransformations [array] A dataTransformations array references the last process of each process chain in charge of transforming the data to be displayed. dataClass* [string] The dataClass of the dataset, such as <code>AScanAmplitude</code>, <code>AScanStatus</code> or <code>FiringSource</code> storageMode [string] The type of storage of mode, such as <code>Paintbrush</code> or <code>Independent</code> dataValue [object] The values the dataset can take, both raw values and values converted to the corresponding unit path* [string] The path to the dataset in the HDF structure dimensions* [object] A dimension object describing the dimensions of the HDF5 dataset and information ralative to the specimen surface grid through the referenced axis <p>Here is an example showing the difference between a typical dataset object in version 3.3 and the new datasets array in version 4.0:</p> 4.03.3 <pre><code>\"datasets\": [\n    {\n    \"id\": 0,\n    \"dataTransformations\":[\n      {\n        \"processId\": 0\n      }\n    ],\n    \"dataClass\": \"AScanAmplitude\",\n    \"storageMode\": \"Paintbrush\",\n    \"dataValue\": {\n        \"min\": 0, \n        \"max\": 32767, \n        \"unitMin\": 0.0, \n        \"unitMax\": 200.0, \n        \"unit\": \"Percent\"\n    },\n    \"path\": \"/Public/Groups/0/Datasets/0-AScanAmplitude\",\n    \"dimensions\": [...],\n    }\n]\n</code></pre> <pre><code>\"dataset\": {\n    \"ascan\": {\n      \"velocity\": 2700.0,\n      \"skewAngle\": 0.0,\n      \"refractedAngle\": 0.0,\n      \"amplitude\": {\n        \"dataSampling\": {\n          \"min\": 0,\n          \"max\": 32767\n        },\n        \"dataValue\": {\n          \"min\": 0,\n          \"max\": 200,\n          \"unit\": \"Percent\"\n        },\n        \"path\": \"/Domain/DataGroups/0/Datasets/0/Amplitude\",\n        \"dimensions\": [...]\n      }\n    },\n    \"overwriteCriteria\": \"Last\",\n    \"storageMode\": \"Paintbrush\"\n}\n</code></pre>"},{"location":"whats-new-4.0/#dataencodings-is-renamed-and-updated","title":"dataEncodings is renamed and updated","text":"<p>The dataEncodings object is renamed dataMappings to avoid confusion with other types of encoding. Its structure is slightly modified with specimenId and surfaceId properties moved up one level in the JSON structure.</p> 4.03.3 <pre><code>\"dataMappings\": [\n{\n  \"id\": 0,\n  \"specimenId\": 0,\n  \"surfaceId\": 0,\n  \"discreteGrid\": {\n    \"scanPattern\": \"OneLineScan\",\n    \"uCoordinateOrientation\": \"Length\",\n    \"dimensions\": [\n        {\n        \"axis\": \"UCoordinate\",\n        \"name\": \"Scan\",\n        \"offset\": 0.0,\n        \"quantity\": 301,\n        \"resolution\": 0.001\n        }\n    ]}\n}]\n</code></pre> <pre><code>\"dataEncodings\": [\n{\n  \"id\": 0,\n  \"discreteGrid\": {\n    \"specimenId\": 0,\n    \"surfaceId\": 0,\n    \"scanPattern\": \"OneLineScan\",\n    \"uCoordinateOrientation\": \"Length\",\n    \"dimensions\": [\n        {\n        \"axis\": \"UCoordinate\",\n        \"name\": \"Scan\",\n        \"offset\": 0.0,\n        \"quantity\": 301,\n        \"resolution\": 0.001\n        }\n    ]}\n}]\n</code></pre>"},{"location":"whats-new-4.0/#addition-of-the-json-properties-dataset","title":"Addition of the JSON Properties dataset","text":"<p>Previously, file-wide metadata were stored as HDF5 attributes at the root of the file. </p> 3.34.0 <p> </p> <p> </p> <p>To allow more flexibility and scalibility in the future, those file-wide metadata are transfered to a new JSON-formatted dataset named Properties and located at the root of the HDF5 hierarchy. Currently, this JSON-formatted dataset contains the same information as previous attributes in a file object as well as a new methods array to specify the NDT methods covered in the file (as described by ASNT). More objects will be added to the Properties dataset in the near future. </p> <p>Info</p> <p>A pre-release version of the new JSON Schema used to validate the Properties dataset can be downloaded here.</p> <pre><code>{\n   \"file\":{\n      \"createdByAppName\": \"MXU\",\n      \"createdByAppVersion\": \"5.18.1.0\",   \n      \"createdByAppCompany\": \"Evident\",   \n      \"creationDate\": \"2024-03-12T20:28:30+01:00\",\n      \"creationFormatVersion\": \"4.0.0-Dev\",    \n      \"modifiedByAppName\": \"MXU\",\n      \"modifiedByAppVersion\": \"5.18.1.0\",   \n      \"modifiedByAppCompany\": \"Evident\",   \n      \"modificationDate\": \"2024-03-12T20:32:30+01:00\",\n      \"formatVersion\": \"4.0.0-Dev\",    \n      \"notice\": \"Pre-release Version\",\n   },\n   \"methods\":[\"UT\"]\n}\n</code></pre>"},{"location":"whats-new-4.0/#support-of-advanced-ultrasonic-acquisitions","title":"Support of advanced ultrasonic acquisitions","text":"<p>Advanced ultrasonic acquisitions such as FMC, HMC, PWI and Sparse Array will be officially supported through a dedicated ultrasonicMatrixCapture process object in the JSON Setup dataset. The acquired elementary AScans will be stacked and stored in a AScanAmplitude dataset. </p>"},{"location":"whats-new-4.0/#enriched-documentation","title":"Enriched documentation","text":"<p>The overall documentation will be enriched with more detailed explanations, additionnal examples and code snippets, new and standardized illustrations and step-by-step guides for simple cases. </p>"},{"location":"whats-new-4.0/#coming-soon","title":"Coming soon","text":"<ul> <li>Support of C-Scans data</li> <li>Support of Eddy-current modality</li> <li>... and many more !</li> </ul>"},{"location":"transitioning-3.3-4.0/overview/","title":"Overview","text":"<p>With the introduction of .NDE 4.0, modifications were made to the HDF structure  and to the JSON Setup dataset.  </p> <p>You may want to upgrade your application such as it is still compatible with new .NDE files. </p>"},{"location":"transitioning-3.3-4.0/overview/#upgrading-your-application-to-readwrite-nde-files-from-version-33-to-version-40","title":"Upgrading your application to read/write .NDE files from version 3.3 to version 4.0","text":"<p>We recommend the following procedure to upgrade your application reading and/or writing .NDE version 3.3 files to be able to read and/or write .NDE version 4.0 files:</p> <ul> <li> Update the routine in charge of reading/writing the HDF root attributes for the new metadata JSON Properties dataset located under the new /Properties path following the upgrade guide.</li> <li> Update the routine in charge of reading/writing the HDF datasets currently located under /Domain/DataGroups  to the new /Public/Groups path following the upgrade guide.</li> <li> Update the routine in charge of reading/writing the JSON Setup dataset currently located under /Domain/Setup  to the new /Public/Setup path following the upgrade guide. </li> <li> Update any routine in charge of reading/writing data located under /Applications  to the new /Private path. </li> </ul>"},{"location":"transitioning-3.3-4.0/upgrade-hdf-structure/","title":"HDF structure upgrade guide","text":""},{"location":"transitioning-3.3-4.0/upgrade-hdf-structure/#terminology","title":"Terminology","text":"<p>Note the correspondance between terms used in version 3.3 and in new terms used in version 4.0. </p> Version 3.3 Version 4.0 DataGroupId GroupId DatasetId DatasetId DatasetType DataClass"},{"location":"transitioning-3.3-4.0/upgrade-hdf-structure/#convert-datasettypes-to-dataclasses","title":"Convert DatasetTypes to DataClasses","text":"<p>The following correspondance needs to be made between previous DatasetTypes and new DataClasses:</p> nde  DatasetType nde  DataClass Amplitude AScanAmplitude Status AScanStatus FiringSource FiringSource Value (for TFM Images) TfmValue"},{"location":"transitioning-3.3-4.0/upgrade-hdf-structure/#update-datasets-paths","title":"Update datasets paths","text":"<p>It results in the following correspondance table for each dataset path. Note that TFM datasets were previously stored under a dedicated sub-path which is now removed for standardization. </p> Type nde  Previous datasets path nde  New datasets path PA /DataGroups + /[DataGroupId] + /Datasets + /[DatasetId] + /[DatasetType] /Groups + /[GroupId] + /Datasets + /[DatasetId-DataClass] TFM /DataGroups + /[DataGroupId] + /Datasets + /[DatasetId] + /TFM + /[DatasetType] /Groups + /[GroupId] + /Datasets + /[DatasetId-DataClass] <p>The following examples are provided for each supported DatasetType/DataClass for better understanding: </p> nde  Previous dataset path nde  New dataset path /DataGroups/0/Datasets/0/Amplitude /Groups/0/Datasets/0-AScanAmplitude /DataGroups/0/Datasets/0/Status /Groups/0/Datasets/1-AScanStatus /DataGroups/0/Datasets/1/FiringSource /Groups/0/Datasets/2-FiringSource /DataGroups/1/Datasets/0/TFM/Value /Groups/1/Datasets/0-TfmValue /DataGroups/1/Datasets/0/TFM/Status /Groups/1/Datasets/1-TfmStatus /DataGroups/1/Datasets/0/TFM/FiringSource /Groups/1/Datasets/2-FiringSource"},{"location":"transitioning-3.3-4.0/upgrade-json-setup/","title":"JSON Setup upgrade guide","text":"<p>Info</p> <p>A pre-release version of the new JSON Schema used to validate the Setup dataset can be downloaded here. </p> <p>A greater number of changes have been made to the JSON Setup dataset, especially within the groups object. Hence, we will go through modifications impacting each one of the higher level objects in the JSON file hierarchy which are represented below. Note that only the name of the dataEncodings object was updated to dataMappings at this level:</p> 4.03.3 <pre><code>{\n\"$schema\": \"...\",\n\"version\": \"...\",\n\"scenario\": \"...\",\n\"groups\": [],\n\"acquisitionUnits\": [],\n\"motionDevices\": [],\n\"dataMappings\": [],\n\"specimens\": [],\n\"probes\": [],\n\"wedges\": [],\n}\n</code></pre> <pre><code>{\n\"$schema\": \"...\",\n\"version\": \"...\",\n\"scenario\": \"...\",\n\"groups\": [],\n\"acquisitionUnits\": [],\n\"motionDevices\": [],\n\"dataEncodings\": [],\n\"specimens\": [],\n\"probes\": [],\n\"wedges\": [],\n}\n</code></pre>"},{"location":"transitioning-3.3-4.0/upgrade-json-setup/#schema","title":"$schema","text":"<p>This key needs to be updated to the last version of the JSON schema which is version 4.0.0</p> 4.03.3 <pre><code>{\n\"$schema\": \"./NDE-FileFormat-Schema-4.0.0.json\",\n}\n</code></pre> <pre><code>{\n\"$schema\": \"./NDE-FileFormat-Schema-3.3.0.json\",\n}\n</code></pre>"},{"location":"transitioning-3.3-4.0/upgrade-json-setup/#version","title":"version","text":"<p>This key needs to be updated to the last version of the .NDE standard which is 4.0.0</p> 4.03.3 <pre><code>{\n\"version\": \"4.0.0\",\n}\n</code></pre> <pre><code>{\n\"version\": \"3.3.0\",\n}\n</code></pre>"},{"location":"transitioning-3.3-4.0/upgrade-json-setup/#scenario","title":"scenario","text":"<p>No modifications were made to this object so far. The official release of .NDE 4.0 will confirm whether this object can be duplicated safely from 3.3. to 4.0. </p>"},{"location":"transitioning-3.3-4.0/upgrade-json-setup/#groups","title":"groups","text":"<p>The overal groups structure needs to be upgraded with the following modifications that will be detailed below:</p> Property Version 4.0 Version 3.3 Comment id [number] Unchanged name [string] Unchanged usage [string] Unchanged dataset [object] Now defined in the datasets array ut [object] Replaced by the ultrasonicConventional  processes array item paut [object] Replaced by the ultrasonicPhasedArray  processes array item fmc [object] Replaced by the ultrasonicMatrixCapture and totaFocusingMethod  processes array items datasets [array] - New datasets array array processes [array] - New processes array array <p> = property conserved |   = new property |   = property removed and replaced</p>"},{"location":"transitioning-3.3-4.0/upgrade-json-setup/#converting-dataset-object-properties-to-datasets-array","title":"Converting dataset object properties to datasets array","text":"<p>Converting previous dataset objects to new datasets array items require some important modifications. Please refer to the following tables for correlations between previous properties and new ones. </p> <p>Previous dataset object in version 3.3:</p> Property JSON Depth Comment ascan [object] 0  Divided into a AScanAmplitude and AScanStatus dataset ascan{velocity} [number] 1  Moved to the ultrasonicPhasedArray process ascan{skewAngle} [number] 1  Removed as already found in the paut object ascan{refractedAngle} [number] 1  Removed as already found in the paut object ascan{amplitude} [object] 1  Replaced by a AScanAmplitude dataset ascan{status} [object] 1  Replaced by a AScanStatus dataset firingSource [object] 0  Replaced by a FiringSource dataset storageMode [string] 0  Moved inside each datasets item definition dataSampling [object] 2  Merged with the dataValue object dataValue [object] 2  Moved with its childs inside each datasets item definition path [string] 2  Moved with its childs inside each datasets item definition dimensions  [object] 2  Moved with its childs inside each datasets item definition overwriteCriteria [string] 0  Removed as not necessary <p>New datasets array in version 4.0: </p> Property JSON Depth Comment id [number] 0  Needs to be unique within a group dataTransformations [array] 0  References the process chains in charge of processing the dataset dataTransformations[{processId}] [number] 1  The processId of the last process in the chain dataTransformations[{groupId}] [number] 1  The groupId of the last process in the chain (not required if in the same group) dataClass [string] 0 storageMode [string] 0 Same as storageMode in version 3.3 dataValue [object] 0 Same as dataValue in version 3.3 path [string] 0 Same as path in version 3.3 dimensions [object] 0 Same as dimensions object in version 3.3"},{"location":"transitioning-3.3-4.0/upgrade-json-setup/#ascanamplitude-datasets","title":"AScanAmplitude datasets","text":"<p>Let's see how a version 3.3 ascan{amplitude}(1) dataset can be converted to a AScanAmplitude datasets item in version 4.0:</p> <ol> <li>This notation is used to define and object{and one of its child} inside within the JSON hierarchy. </li> </ol> 4.03.3 <pre><code>\"datasets\": [\n    {\n    \"id\": 0,\n    \"dataTransformations\":[\n      {\n        \"processId\": 0\n      }\n    ],\n    \"dataClass\": \"AScanAmplitude\",\n    \"storageMode\": \"Paintbrush\",\n    \"dataValue\": {\n        \"min\": 0, // (1)!\n        \"max\": 32767, // (2)!\n        \"unitMin\": 0.0, // (3)!\n        \"unitMax\": 200.0, // (4)!\n        \"unit\": \"Percent\"\n    },\n    \"path\": \"/Public/Groups/0/Datasets/0-AScanAmplitude\",\n    \"dimensions\": [\n        {\n        \"axis\": \"UCoordinate\",\n        \"offset\": 0.0,\n        \"quantity\": 351,\n        \"resolution\": 0.001\n        },\n        {\n        \"axis\": \"VCoordinate\",\n        \"offset\": -0.07455,\n        \"quantity\": 114,\n        \"resolution\": 0.001\n        },\n        {\n        \"axis\": \"Ultrasound\",\n        \"offset\": 0.0,\n        \"quantity\": 568,\n        \"resolution\": 2E-08\n        }\n    ],\n    }\n]\n</code></pre> <ol> <li>Corresponds to the min value previously stored in the dataSampling objects</li> <li>Corresponds to the max value previously stored in the dataSampling objects</li> <li>Corresponds to the previous min value of the dataValue object</li> <li>Corresponds to the previous max value of the dataValue object</li> </ol> <pre><code>\"dataset\": {\n    \"ascan\": {\n      \"velocity\": 2700.0,\n      \"skewAngle\": 0.0,\n      \"refractedAngle\": 0.0,\n      \"amplitude\": {\n        \"dataSampling\": {\n          \"min\": 0,\n          \"max\": 32767\n        },\n        \"dataValue\": {\n          \"min\": 0,\n          \"max\": 200,\n          \"unit\": \"Percent\"\n        },\n        \"path\": \"/Domain/DataGroups/0/Datasets/0/Amplitude\",\n        \"dimensions\": [\n            {\n            \"axis\": \"UCoordinate\",\n            \"offset\": 0.0,\n            \"quantity\": 351,\n            \"resolution\": 0.001\n            },\n            {\n            \"axis\": \"VCoordinate\",\n            \"offset\": -0.07455,\n            \"quantity\": 114,\n            \"resolution\": 0.001\n            },\n            {\n            \"axis\": \"Ultrasound\",\n            \"offset\": 0.0,\n            \"quantity\": 568,\n            \"resolution\": 2E-08\n            }\n        ]\n      }\n    },\n    \"overwriteCriteria\": \"Last\",\n    \"storageMode\": \"Paintbrush\"\n}\n</code></pre>"},{"location":"transitioning-3.3-4.0/upgrade-json-setup/#ascanstatus-datasets","title":"AScanStatus datasets","text":"<p>Note</p> <p>This type of dataset is specific to the files saved with an Evident instrument and may be different with other vendors.</p> <p>Let's see how a version 3.3 ascan{status} dataset can be converted to a AScanStatus datasets item in version 4.0:</p> 4.03.3 <pre><code>\"datasets\": [\n    {\n    \"id\": 1,\n    \"dataTransformations\":[\n      {\n        \"processId\": 0\n      }\n    ],\n    \"dataClass\": \"AScanStatus\",\n    \"storageMode\": \"Paintbrush\",\n    \"dataValue\": {\n        \"hasData\": 1,\n        \"saturated\": 2,\n        \"noSynchro\": 4,\n        \"unit\": \"Bitfield\"\n    },\n    \"path\": \"/Public/Groups/0/Datasets/1-AScanStatus\",\n    \"dimensions\": [\n        {\n        \"axis\": \"UCoordinate\",\n        \"offset\": 0.2,\n        \"quantity\": 301,\n        \"resolution\": 0.001\n        },\n        {\n        \"axis\": \"VCoordinate\",\n        \"offset\": 0.0,\n        \"quantity\": 155,\n        \"resolution\": 0.001\n        }\n    ],\n    }\n]\n</code></pre> <pre><code>\"dataset\": {\n    \"ascan\": {\n        \"velocity\": 2700.0,\n        \"skewAngle\": 0.0,\n        \"refractedAngle\": 0.0,\n        \"status\": {\n        \"dataValue\": {\n            \"hasData\": 1,\n            \"saturated\": 2,\n            \"noSynchro\": 4,\n            \"unit\": \"Bitfield\"\n        },\n        \"path\": \"/Domain/DataGroups/0/Datasets/0/Status\",\n        \"dimensions\": [\n            {\n            \"axis\": \"UCoordinate\",\n            \"offset\": 0.2,\n            \"quantity\": 301,\n            \"resolution\": 0.001\n            },\n            {\n            \"axis\": \"VCoordinate\",\n            \"offset\": 0.0,\n            \"quantity\": 155,\n            \"resolution\": 0.001\n            }\n        ]\n        }\n    },\n    \"overwriteCriteria\": \"Last\",\n    \"storageMode\": \"Paintbrush\"\n}\n</code></pre>"},{"location":"transitioning-3.3-4.0/upgrade-json-setup/#firingsource-datasets","title":"FiringSource datasets","text":"<p>Note</p> <p>This type of dataset is specific to the files saved with an Evident instrument and may be different with other vendors. </p> <p>Let's see how a version 3.3 firingSource dataset can be converted to a FiringSource datasets item in version 4.0:</p> 4.03.3 <pre><code>\"datasets\": [\n    {\n    \"id\": 2,\n    \"dataTransformations\":[\n      {\n        \"processId\": 0\n      }\n    ],\n    \"dataClass\": \"FiringSource\",\n    \"storageMode\": \"Paintbrush\",\n    \"dataValue\": {\n        \"min\": 0,\n        \"max\": 64,\n        \"unit\": \"BeamId\"\n    },\n    \"path\": \"/Public/Groups/0/Datasets/2-FiringSource\",\n    \"dimensions\": [\n        {\n        \"axis\": \"UCoordinate\",\n        \"offset\": 0.2,\n        \"quantity\": 301,\n        \"resolution\": 0.001\n        },\n        {\n        \"axis\": \"VCoordinate\",\n        \"offset\": 0.0,\n        \"quantity\": 155,\n        \"resolution\": 0.001\n        }\n    ],\n    }\n]\n</code></pre> <pre><code>\"dataset\": {\n    \"firingSource\": {\n        \"path\": \"/Domain/DataGroups/0/Datasets/1/FiringSource\",\n        \"dataValue\": {\n            \"min\": 0,\n            \"max\": 64,\n            \"unit\": \"BeamId\"\n        },\n        \"dimensions\": [\n            {\n            \"axis\": \"UCoordinate\",\n            \"offset\": 0.2,\n            \"quantity\": 301,\n            \"resolution\": 0.001\n            },\n            {\n            \"axis\": \"VCoordinate\",\n            \"offset\": 0.0,\n            \"quantity\": 155,\n            \"resolution\": 0.001\n            }\n        ]\n    },\n    \"overwriteCriteria\": \"Last\",\n    \"storageMode\": \"Paintbrush\"\n}\n</code></pre>"},{"location":"transitioning-3.3-4.0/upgrade-json-setup/#converting-ut-paut-fmc-objects-to-processes-array-items","title":"Converting ut, paut, fmc objects to processes array items","text":"<p>Each new processes array item has the same basic structure: </p> Property Comment id* [integer] The unique process id in the JSON structure implementation [string] The process implementation type, can be <code>Software</code> or <code>Hardware</code> inputs [object] An inputs array describing the different inputs of the process outputs [object] An outputs array describing the different outputs of the process dataMappingId [number] Previously found inside paut, ut or tfmDescription object, refers to the corresponding dataMapping object Id One of the following sub-object: <ul><li>ultrasonicConventional</li><li>ultrasonicPhasedArray</li><li>ultrasonicMatrixCapture</li><li>totalFocusingMethod</li><li>tfmBoxGates</li><li>thickness</li><li>gain</li></ul> <p>Converting previous ut, paut, fmc and tfmDescriptions objects to new processes array items require some slight modifications. Please refer to the following tables for correspondance between previous properties and new ones. </p>"},{"location":"transitioning-3.3-4.0/upgrade-json-setup/#ultrasonicphasedarray-process","title":"ultrasonicPhasedArray process","text":"<p>Most of the previous paut object properties remain unchanged in the new ultrasonicPhasedArray object now found inside the processes array. </p> Property nde  ultrasonicPhasedArray{} nde  paut{} Comment dataEncodingId [number] Moved to datasets array item as dataMappingId pulseEcho [object] waveMode [string] velocity [number] focusing [object] beams [array] pulse [object] gates [array] rectification [string] digitizingFrequency [number] ascanSynchroMode [string] ascanCompressionFactor [number] gain [number] wedgeDelay [number] ultrasoundMode [string] highAmplitude [number] Removed as it was a redundant with the dataset dataValue object content referenceAmplitude [number] referenceGain [number] digitalBandPassFilter [object] smoothingFilter [number] averagingFactor [number] softwareProcess [object] Moved to a dedicated ultrasonicThickness processes array item <p>Additionnaly, please note that some irrelevant parameters associated with the instrument configuration were removed: </p> <ul> <li>from the gates array: produceCscanData, peakDetection and timeSelection</li> <li>from the tcg object (inside the beams array): enabled</li> </ul> <p>Let's see how a version 3.3 paut object can be converted to a ultrasonicPhasedArray processes array item in version 4.0:</p> 4.03.3 <pre><code>\"processes\": [\n  {\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"id\": 0,\n        \"datasetId\": 0,\n        \"dataClass\": \"AScanAmplitude\"\n      },\n      {\n        \"id\": 1,\n        \"datasetId\": 1,\n        \"dataClass\": \"AScanStatus\"\n      }\n    ],\n    \"id\": 0, // (1)!\n    \"dataMappingId\": 0,\n    \"implementation\": \"Hardware\",\n    \"ultrasonicPhasedArray\": { // (2)!\n      \"pulseEcho\": {},\n      \"waveMode\": \"TransversalVertical\",\n      \"velocity\": 3100.0,\n      \"focusing\": {},\n      \"beams\": [],\n      \"pulse\": {},\n      \"gates\": [],\n      \"rectification\": \"Full\",\n      \"digitizingFrequency\": 100000000.0,\n      \"ascanSynchroMode\": \"Pulse\",\n      \"ascanCompressionFactor\": 6,\n      \"gain\": 33.1,\n      \"wedgeDelay\": 0.0,\n      \"ultrasoundMode\": \"TrueDepth\",\n      \"referenceAmplitude\": 80.0,\n      \"referenceGain\": 33.1,\n      \"digitalBandPassFilter\": {},\n      \"averagingFactor\": 1,\n      \"calibrationStates\": []\n    }\n  },\n  {\n    \"inputs\": [\n      {\n        \"processId\": 0\n      }\n    ],\n    \"outputs\": [],\n    \"id\": 1,\n    \"dataMappingId\": 0,\n    \"implementation\": \"Software\",\n    \"thickness\": { // (3)!\n      \"min\": 0.0065000000000000006,\n      \"max\": 0.0273,\n      \"gates\": [\n        {\n          \"id\": 1,\n          \"gateDetection\": \"MaximumPeak\"\n        }\n      ]\n    }\n  }\n]\n</code></pre> <ol> <li>As per convention, a process with an Id = 0 defines the group. This group is hence a \"Phased Array\" group.  </li> <li>This object is almost identical to the previous paut object</li> <li>This process replaces the previous softwareProcess inside the paut object</li> </ol> <pre><code>\"paut\": {\n    \"dataEncodingId\": 0,\n    \"pulseEcho\": {},\n    \"waveMode\": \"TransversalVertical\",\n    \"velocity\": 3100.0,\n    \"focusing\": {},\n    \"beams\": [],\n    \"pulse\": {},\n    \"gates\": [],\n    \"rectification\": \"Full\",\n    \"digitizingFrequency\": 100000000.0,\n    \"ascanSynchroMode\": \"Pulse\",\n    \"ascanCompressionFactor\": 6,\n    \"gain\": 33.1,\n    \"wedgeDelay\": 0.0,\n    \"ultrasoundMode\": \"TrueDepth\",\n    \"highAmplitude\": 200.0,\n    \"referenceAmplitude\": 80.0,\n    \"referenceGain\": 33.1,\n    \"digitalBandPassFilter\": {},\n    \"averagingFactor\": 1,\n    \"calibrationStates\": [],\n    \"softwareProcess\": {\n      \"thickness\": {\n        \"min\": 0.0065000000000000006,\n        \"max\": 0.0273,\n        \"gates\": [\n          {\n            \"id\": 1,\n            \"timeSelection\": \"Peak\"\n          }\n        ]\n      }\n    }\n}\n</code></pre>"},{"location":"transitioning-3.3-4.0/upgrade-json-setup/#ultrasonicconventional-process","title":"ultrasonicConventional process","text":"<p>Most of the previous ut object properties remain unchanged in the new ultrasonicConventional object now found inside the processes array.</p> Property nde  ultrasonicConventional{} nde  ut{} Comment dataEncodingId [number] Moved to datasets array item as dataMappingId pulseEcho [object] or pitchCatch [object] or tofd [object] waveMode [string] velocity [number] refractedAngle [number] Moved inside the beams array wedgeDelay [number] ascanStart [number] Moved inside the beams array ascanLength [number] Moved inside the beams array pulse [object] gates [array] rectification [string] digitizingFrequency [number] ascanSynchroMode [string] ascanCompressionFactor [number] gain [number] ultrasoundMode [string] referenceAmplitude [number] referenceGain [number] digitalBandPassFilter [object] smoothingFilter [number] averagingFactor [number] softwareProcess [object] Moved to a dedicated thickness processes array item recurrence [number] Moved inside the beams array tcg [object] Moved inside the beams array calibrationStates [array] beams [array] New array for uniformity with the ultrasonicPhasedArray process <p>Additionnaly, please note that some irrelevant parameters associated with the instrument configuration were removed: </p> <ul> <li>from the gates array: produceCscanData, peakDetection and timeSelection</li> <li>from the tcg object: enabled</li> </ul> <p>Let's see how a version 3.3 ut object can be converted to a ultrasonicConventional processes array item in version 4.0:</p> 4.03.3 <pre><code>\"processes\": [\n  {\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"id\": 0,\n        \"datasetId\": 0,\n        \"dataClass\": \"AScanAmplitude\"\n      },\n      {\n        \"id\": 1,\n        \"datasetId\": 1,\n        \"dataClass\": \"AScanStatus\"\n      }\n    ],\n    \"id\": 0, // (1)!\n    \"dataMappingId\": 0,\n    \"implementation\": \"Hardware\",\n    \"ultrasonicConventional\": { // (2)!\n      \"pulseEcho\": {\n        \"probeId\": 0\n      },\n      \"waveMode\": \"TransversalVertical\",\n      \"velocity\": 3100.0,\n      \"wedgeDelay\": 6.4799999999999989E-06,\n      \"digitizingFrequency\": 100000000.0,\n      \"pulse\": {},\n      \"gates\": [],\n      \"rectification\": \"Full\",\n      \"ascanCompressionFactor\": 6,\n      \"gain\": 50.0,\n      \"ultrasoundMode\": \"TrueDepth\",\n      \"referenceAmplitude\": 80.0,\n      \"referenceGain\": 0.0,\n      \"digitalBandPassFilter\": {},\n      \"smoothingFilter\": 5000000.0,\n      \"averagingFactor\": 1,\n      \"beams\": [\n        {\n          \"id\": 0,\n          \"refractedAngle\": 60.0,\n          \"ascanStart\": 0.0,\n          \"ascanLength\": 3.408E-05\n        }\n      ]\n    }\n  },\n  {\n    \"inputs\": [\n      {\n        \"processId\": 0\n      }\n    ],\n    \"outputs\": [],\n    \"id\": 1,\n    \"dataMappingId\": 0,\n    \"implementation\": \"Software\",\n    \"thickness\": { // (3)!\n      \"min\": 0.00375,\n      \"max\": 0.01575,\n      \"gates\": [\n        {\n          \"id\": 1,\n          \"gateDetection\": \"MaximumPeak\"\n        }\n      ]\n    }\n  }\n]\n</code></pre> <ol> <li>As per convention, a process with an Id = 0 defines the group. This group is hence a \"Ultrasonic Conventional\" group.  </li> <li>This object is almost identical to the previous ut object</li> <li>This process replaces the previous softwareProcess inside the ut object</li> </ol> <pre><code>\"ut\": {\n  \"dataEncodingId\": 0,\n  \"pulseEcho\": {\n    \"probeId\": 0\n  },\n  \"waveMode\": \"TransversalVertical\",\n  \"velocity\": 3100.0,\n  \"refractedAngle\": 60.0,\n  \"wedgeDelay\": 6.4799999999999989E-06,\n  \"ascanStart\": 0.0,\n  \"digitizingFrequency\": 100000000.0,\n  \"ascanLength\": 3.408E-05,\n  \"pulse\": {},\n  \"gates\": [],\n  \"rectification\": \"Full\",\n  \"ascanCompressionFactor\": 6,\n  \"gain\": 50.0,\n  \"ultrasoundMode\": \"TrueDepth\",\n  \"highAmplitude\": 200.0,\n  \"referenceAmplitude\": 80.0,\n  \"referenceGain\": 0.0,\n  \"digitalBandPassFilter\": {},\n  \"smoothingFilter\": 5000000.0,\n  \"averagingFactor\": 1,\n  \"softwareProcess\": {\n    \"thickness\": {\n      \"min\": 0.00375,\n      \"max\": 0.01575,\n      \"gates\": [\n        {\n          \"id\": 1,\n          \"timeSelection\": \"Peak\"\n        }\n      ]\n    }\n  }\n}\n</code></pre>"},{"location":"transitioning-3.3-4.0/upgrade-json-setup/#ultrasonicmatrixcapture-and-totalfocusingmethod-processes","title":"ultrasonicMatrixCapture and totalFocusingMethod processes","text":"<p>Previously, a TFM was described by a fmc object in which a tfmDescriptions was nested. These are now two different processes in two different groups that are interconnected. </p> <p>Converting previous fmc objects to new ultrasonicMatrixCapture array items require some important modifications. Please refer to the following tables for correspondance between previous properties and new ones. </p> <p>Previous fmc object in version 3.3:</p> Property JSON Depth Comment dataEncoding [integer] 0  Moved one layer above in the general structure of the process probeId [number] 0  Moved inside each beams[{pulsers[]}] and beams[{pulsers[]}] array items pulse [object] 0  Moved inside the waveforms object pulserFrequency [number] 0  Moved inside the ultrasonicMatrixCapture object digitizingFrequency [number] 0  Moved inside the ultrasonicMatrixCapture object pulsers [object] 0  Moved inside the ultrasonicMatrixCapture{beams[]} array receivers [object] 0  Moved inside the ultrasonicMatrixCapture{beams[]} array tfmDescriptions [object] 0  Replaced by the totalFocusingMethod process <p>New ultrasonicMatrixCapture object in version 4.0: </p> Property JSON Depth Comment acquisitionPattern [string] 0  Indicate which type of acquisition pattern is used, such as <code>FMC</code>, <code>PWI</code> or <code>Sparse</code> digitizingFrequency [number] 0 Same as digitizingFrequency in version 3.3 pulserFrequency [number] 0 Same as pulserFrequency in version 3.3 digitalBandPassFilter [number] 0 Same as digitalBandPassFilter found in tfmDescriptions array in version 3.3 waveforms [array] 0  Describe any type of waveform that could be used for firing a transducer element waveforms[{pulse}] [object] 1 Same as pulse in version 3.3 beams [array] 0  List all the different beams used for acquisitions, in a similar structure as ultrasonicPhasedArray <p>Let's see how a version 3.3 fmc object can be converted to ultrasonicMatrixCapture and fullMatrixCapture processes in version 4.0:</p> 4.03.3 <pre><code>\"groups\": [\n{\n  \"id\": 0,\n  \"processes\": [\n    {\n      \"inputs\": [],\n      \"outputs\": [],\n      \"id\": 0,\n      \"dataMappingId\": 0,\n      \"implementation\": \"Hardware\",\n      \"ultrasonicMatrixCapture\": {\n        \"acquisitionPattern\": \"FMC\",\n        \"digitalBandPassFilter\": {},\n        \"digitizingFrequency\": 80000000.0,\n        \"pulserFrequency\": 5000000.0,\n        \"waveforms\": [\n          {\n            \"id\": 0,\n            \"pulse\": {\n              \"width\": 1.0000000000000001E-07,\n              \"voltage\": 40.0,\n              \"polarity\": \"Bipolar\"\n            }\n          }\n        ],\n        \"beams\": [\n          {\n            \"id\": 0,\n            \"pulsers\": [\n              {\n                \"id\": 0,\n                \"probeId\": 0, // (1)!\n                \"elementId\": 0, \n                \"waveformId\": 0 // (2)!\n              }\n            ],\n            \"receivers\": [\n              {\n                \"id\": 0,\n                \"probeId\": 0,\n                \"elementId\": 0,\n                \"ascanStart\": 0.0, // (3)!\n                \"ascanLength\": 0.00020480000000000002 // (4)!\n              },\n              {\n                \"id\": 1,\n                \"probeId\": 0,\n                \"elementId\": 1,\n                \"ascanStart\": 0.0,\n                \"ascanLength\": 0.00020480000000000002\n              }\n              {...}\n            ]\n          }\n        ]\n      }\n    }\n  ]\n},\n{\n  \"id\": 1,\n  \"processes\": [\n    {\n      \"inputs\": [\n        {\n          \"processId\": 0,\n          \"groupId\": 0\n        }\n      ],\n      \"outputs\": [\n        {\n          \"id\": 0,\n          \"datasetId\": 0,\n          \"dataClass\": \"TfmValue\"\n        }\n      ],\n      \"id\": 0,\n      \"dataMappingId\": 0,\n      \"implementation\": \"Hardware\",\n      \"totalFocusingMethod\": {} // (5)!\n    }\n  ]\n}\n]\n</code></pre> <ol> <li>The probeId was added to each pulsers and/or receivers array items to cover more advanced cases.</li> <li>The waveformId was added to each pulsers array items to cover more advanced cases.</li> <li>The ascanStart was added to each receivers array items to cover more advanced cases.</li> <li>The ascanLength was added to each receivers array items to cover more advanced cases.</li> <li>The totalFocusingMethod parameters are now described in a dedicated process (see below)</li> </ol> <pre><code>\"groups\": [\n{\n  \"id\": 0,\n  \"fmc\": {\n    \"dataEncodingId\": 0,\n    \"probeId\": 0,\n    \"pulse\": {\n      \"width\": 1.0000000000000001E-07,\n      \"voltage\": 40.0,\n      \"polarity\": \"Bipolar\"\n    },\n    \"pulserFrequency\": 5000000.0,\n    \"digitizingFrequency\": 80000000.0,\n    \"pulsers\": [\n      {\n        \"id\": 0,\n        \"elementId\": 0\n      },\n      {...}\n    ],\n    \"receivers\": [\n      {\n        \"id\": 0,\n        \"elementId\": 0\n      },\n      {\n        \"id\": 1,\n        \"elementId\": 1\n      },\n      {...}\n      ],\n    \"tfmDescriptions\": []\n  }\n}\n]\n</code></pre> <p>Most of the previous tfmDescriptions object properties remain unchanged in the new totalFocusingMethod object now found inside the processes array.</p> Property nde  totalFocusingMethod{} nde  tfmDescriptions{} Comment id [integer] Removed as it was not necessary name [string] Removed as it can be specified directly in the group name signalSource [string] gain [number] referenceAmplitude [number] referenceGain [number] rectangularGrid [object] fmcPulserIds [array] fmcReceiverIds [array] pathName [string] waveSet [object] digitalBandPassFilter [object] Moved to the ultrasonicMatrixCapture processes array item columns [array] softwareProcess [object] Moved to a dedicated tfmBoxGates processes array item <p>Let's see how a version 3.3 tfmDescriptions object can be converted to a totalFocusingMethod processes array item in version 4.0:</p> 4.03.3 <pre><code>\"totalFocusingMethod\": {\n    \"signalSource\": \"Analytic\",\n    \"gain\": 22.0,\n    \"referenceAmplitude\": 80.0,\n    \"referenceGain\": 0.0,\n    \"rectangularGrid\": {},\n    \"fmcPulserIds\": [],\n    \"fmcReceiverIds\": [],\n    \"pathName\": \"L-L\",\n    \"waveSet\": {}\n}\n</code></pre> <pre><code>\"tfmDescriptions\": [\n  {\n    \"id\": 0,\n    \"name\": \"GR-1\",\n    \"signalSource\": \"Analytic\",\n    \"gain\": 22.0,\n    \"referenceAmplitude\": 80.0,\n    \"referenceGain\": 0.0,\n    \"rectangularGrid\": {},\n    \"fmcPulserIds\": [],\n    \"fmcReceiverIds\": [],\n    \"pathName\": \"L-L\",\n    \"waveSet\": {},\n    \"digitalBandPassFilter\": {},\n    \"softwareProcess\": {\n      \"boxGates\": []\n    }\n  }\n]\n</code></pre>"},{"location":"transitioning-3.3-4.0/upgrade-json-setup/#datamappings","title":"dataMappings","text":"<p>The dataEncodings object is renamed dataMappings to avoid confusion with other types of encoding.</p> <p>The following properties need to be moved up one level in the JSON structure: specimenId and surfaceId.</p> <p>The terms <code>ScanLength</code>, <code>ScanWidth</code>, <code>ScanAlong</code> and <code>ScanAround</code>  used for the uCoordinatedOrientation parameter were renamed <code>Length</code>, <code>Width</code>, <code>Along</code> and <code>Around</code> respectively to remove the notion of Scan axis from this parameter. </p> <p>Let's see how a version 3.3 dataEncodings object can be converted to a dataMappings object in version 4.0:</p> 4.03.3 <pre><code>\"dataMappings\": [\n{\n  \"id\": 0,\n  \"specimenId\": 0,\n  \"surfaceId\": 0,\n  \"discreteGrid\": {\n    \"scanPattern\": \"OneLineScan\",\n    \"uCoordinateOrientation\": \"Length\",\n    \"dimensions\": [\n        {\n        \"axis\": \"UCoordinate\",\n        \"name\": \"Scan\",\n        \"offset\": 0.0,\n        \"quantity\": 301,\n        \"resolution\": 0.001\n        }\n    ]}\n}]\n</code></pre> <pre><code>\"dataEncodings\": [\n{\n  \"id\": 0,\n  \"discreteGrid\": {\n    \"specimenId\": 0,\n    \"surfaceId\": 0,\n    \"scanPattern\": \"OneLineScan\",\n    \"uCoordinateOrientation\": \"ScanLength\",\n    \"dimensions\": [\n        {\n        \"axis\": \"UCoordinate\",\n        \"name\": \"Scan\",\n        \"offset\": 0.0,\n        \"quantity\": 301,\n        \"resolution\": 0.001\n        }\n    ]}\n}]\n</code></pre>"},{"location":"transitioning-3.3-4.0/upgrade-json-setup/#probes","title":"probes","text":"<p>No modifications were made to this object so far. The official release of .NDE 4.0 will confirm whether this object can be duplicated safely from 3.3. to 4.0. </p>"},{"location":"transitioning-3.3-4.0/upgrade-json-setup/#wedges","title":"wedges","text":"<p>No modifications were made to this object so far. The official release of .NDE 4.0 will confirm whether this object can be duplicated safely from 3.3. to 4.0. </p>"},{"location":"transitioning-3.3-4.0/upgrade-json-setup/#specimens","title":"specimens","text":"<p>No modifications were made to this object so far. The official release of .NDE 4.0 will confirm whether this object can be duplicated safely from 3.3. to 4.0. </p>"},{"location":"transitioning-3.3-4.0/upgrade-json-setup/#acquisitionunits","title":"acquisitionUnits","text":"<p>No modifications were made to this object so far. The official release of .NDE 4.0 will confirm whether this object can be duplicated safely from 3.3. to 4.0. </p>"},{"location":"transitioning-3.3-4.0/upgrade-json-setup/#motiondevices","title":"motionDevices","text":"<p>Note that the unit of the stepResolution parameter was converted from step/mm to step/m in version 4.0 to be consistent with the rest of the units used in the file. </p> 4.03.3 <pre><code>\"motionDevices\": [\n{\n  \"id\": 0,\n  \"name\": \"Glider\",\n  \"encoder\": {\n    \"mode\": \"Quadrature\",\n    \"stepResolution\": 13000.0,\n    \"preset\": 0.0,\n    \"acquisitionDirection\": \"Bidirectional\"\n  }\n},\n{\n  \"id\": 1,\n  \"name\": \"Glider\",\n  \"encoder\": {\n    \"mode\": \"Quadrature\",\n    \"stepResolution\": 13000.0,\n    \"preset\": 0.0,\n    \"acquisitionDirection\": \"Bidirectional\"\n  }\n}\n]\n</code></pre> <pre><code>\"motionDevices\": [\n{\n  \"id\": 0,\n  \"name\": \"Glider\",\n  \"encoder\": {\n    \"mode\": \"Quadrature\",\n    \"stepResolution\": 13.0,\n    \"preset\": 0.0,\n    \"acquisitionDirection\": \"Bidirectional\"\n  }\n},\n{\n  \"id\": 1,\n  \"name\": \"Glider\",\n  \"encoder\": {\n    \"mode\": \"Quadrature\",\n    \"stepResolution\": 13.0,\n    \"preset\": 0.0,\n    \"acquisitionDirection\": \"Bidirectional\"\n  }\n}\n]\n</code></pre>"},{"location":"transitioning-3.3-4.0/upgrade-metadata/","title":"Metadata structure upgrade guide","text":""},{"location":"transitioning-3.3-4.0/upgrade-metadata/#convert-hdf5-root-attributes-to-the-new-json-properties-structure","title":"Convert HDF5 root attributes to the new JSON Properties structure","text":"<p>Info</p> <p>A pre-release version of the new JSON Schema used to validate the Properties dataset can be downloaded here.</p> <p>The following correspondancy can be made between old HDF5 attributes and the new Properties JSON dataset. Note that the methods array lists was added to specify the NDT methods covered in the file (as described by ASNT) and should be set to \"UT\" for all files in version 3.3. and earlier. </p> nde  HDF5 Attributes nde  Properties dataset Original Application Name - HDF5 Attribute at / createdByAppName - in Properties JSON under file object Original Application Version - HDF5 Attribute at / createdByAppVersion - in Properties JSON under file object Original Company Name - HDF5 Attribute at / createdByAppCompany - in Properties JSON under file object Date created - HDF5 Attribute at / creationDate - in Properties JSON under file object Original Format Version - HDF5 Attribute at / creationFormatVersion - in Properties JSON under file object Application Name - HDF5 Attribute at / modifiedByAppName - in Properties JSON under file object Application Version - HDF5 Attribute at / modifiedByAppVersion - in Properties JSON under file object Company Name - HDF5 Attribute at / modifiedByAppCompany - in Properties JSON under file object Date modified - HDF5 Attribute at / modificationDate - in Properties JSON under file object Format Version - HDF5 Attribute at / formatVersion - in Properties JSON under file object Notice - HDF5 Attribute at / notice - in Properties JSON under file object N/A methods - in Properties JSON, methods array <p>Here is an example of a Properties dataset located at the root of the HDF5 structure. </p> <pre><code>{\n   \"file\":{\n      \"createdByAppName\": \"MXU\",\n      \"createdByAppVersion\": \"5.18.1.0\",   \n      \"createdByAppCompany\": \"Evident\",   \n      \"creationDate\": \"2024-03-12T20:28:30+01:00\",\n      \"creationFormatVersion\": \"4.0.0-Dev\",    \n      \"modifiedByAppName\": \"MXU\",\n      \"modifiedByAppVersion\": \"5.18.1.0\",   \n      \"modifiedByAppCompany\": \"Evident\",   \n      \"modificationDate\": \"2024-03-12T20:32:30+01:00\",\n      \"formatVersion\": \"4.0.0-Dev\",    \n      \"notice\": \"Pre-release Version\",\n   },\n   \"methods\":[\"UT\"]\n}\n</code></pre>"}]}