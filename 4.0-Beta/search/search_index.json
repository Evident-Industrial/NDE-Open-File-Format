{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"examples/","title":"Examples","text":"<p>Where theory meets practice. Explore our library of example files and code snippets for a deeper understanding of the .nde format.</p> <ul> <li> <p> Example Files</p> <p>Examples of .nde files for different scenarios showing how the information is structured for typical use cases. </p> <p> Explore examples</p> </li> <li> <p> Code Samples</p> <p>Code samples in Python demonstrating how you can build your own application to read an write .nde files. </p> <p> Explore examples</p> </li> </ul>"},{"location":"examples/code-samples/","title":"Code Samples","text":""},{"location":"examples/code-samples/#reading-nde-files","title":"Reading .NDE files","text":"<p>Some simple reading example codes are provided below to get your hands on the structure of the file and better understand where to look at when searching for raw data or information. </p> <ul> <li> <p>Reading UT A-Scans</p> <p></p> <p>In this example, you will learn how to read A-Scans from a manual weld scan using conventional ultrasound (UT).</p> <p> Go to this example</p> </li> <li> <p>Reading TFM Images</p> <p></p> <p>In this example, you will learn how to read images from a manual weld scan using the Total Focusing Method (TFM). </p> <p> Go to this example</p> </li> </ul>"},{"location":"examples/code-samples/#writing-nde-files","title":"Writing .NDE files","text":"<ul> <li> <p>Writing UT A-Scans</p> <p></p> <p>In this example, you will learn how to write an .NDE file from a collection of UT A-Scans.</p> <p> Go to this example</p> </li> <li> <p>Writing FMC A-Scans</p> <p>In this example, you will learn how to write an FMC to an .NDE file. </p> <p> Coming soon. </p> </li> </ul>"},{"location":"examples/code-samples/reading-tfm-images/","title":"Reading TFM Images","text":"<p>Let's take the example file provided for Manual Weld Scanning using Total Focusing Method (TFM) and see how we can display some TFM images from this file. </p> <p>Start by loading the Setup JSON formatted dataset from the .nde file and parse it to a Python dictionary. </p> <pre><code>import h5py\nimport json\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nnde_file = h5py.File('Weld_Plate_4TFM_sk90.nde', 'r')\n\n# Navigate to the path in the HDF5 file where the Setup JSON dataset is stored\nsetup_json = nde_file['Public/Setup'][()]\n# Decode the JSON string\nsetup_json = setup_json.decode('utf-8')\n# Parse the JSON string into a Python dictionary\nsetup_data = json.loads(setup_json)\n</code></pre> <p>Then, iterate through groups to retrieve group names, ids, datasets, and related processes. Selecting only TFM (totalFocusingMethod) processes, we will extract the associated path name (also called view, mode or waveset) and print the related datasets information.  </p> <pre><code>for group in setup_data.get('groups', []):\n    group_id = group.get('id')\n    group_name = group.get('name')\n\n    print(f\"Group ID: {group_id}, Group Name: {group_name}\")\n\n    # Retrieve datasets\n    datasets = group.get('datasets', [])\n    # Retrieve processes\n    processes = group.get('processes', [])\n    for process in processes:\n        if process.get('totalFocusingMethod'):\n            path_name = process['totalFocusingMethod']['pathName']\n            print(f'TFM Path Name: {path_name}')\n            for output in process['outputs']:\n                dataset_id = output['datasetId']\n                dataset_path = datasets[dataset_id]['path']\n                dataset_class = output['dataClass']\n                print(f\"  Dataset ID: {dataset_id},\"\n                      f\" Data Class: {dataset_class},\"\n                      f\" Data Path: {dataset_path}\")\n\n                for dimension in datasets[dataset_id]['dimensions']:\n                    axis = dimension.get('axis')\n                    offset = np.round(dimension.get('offset'), 6)\n                    quantity = dimension.get('quantity')\n                    resolution = np.round(dimension.get('resolution'), 6)\n                    print(f\"     Axis: {axis}, \"\n                          f\"Offset: {offset}, \"\n                          f\"Quantity: {quantity}, \"\n                          f\"Resolution: {resolution}\")\n</code></pre> <p>The above code should output the following: </p> <pre><code>Group ID: 0, Group Name: None\nGroup ID: 1, Group Name: None\nTFM Path Name: T-T\n  Dataset ID: 0, Data Class: TfmValue, Data Path: /Public/Groups/1/Datasets/0-TfmValue\n     Axis: UCoordinate, Offset: 0.0, Quantity: 201, Resolution: 0.001\n     Axis: VCoordinate, Offset: -0.01, Quantity: 119, Resolution: 0.000169\n     Axis: WCoordinate, Offset: 1e-05, Quantity: 80, Resolution: 0.000158\n  Dataset ID: 1, Data Class: TfmStatus, Data Path: /Public/Groups/1/Datasets/1-TfmStatus\n     Axis: UCoordinate, Offset: 0.0, Quantity: 201, Resolution: 0.001\n     Axis: VCoordinate, Offset: -0.01, Quantity: 119, Resolution: 0.000169\n     Axis: WCoordinate, Offset: 1e-05, Quantity: 80, Resolution: 0.000158\nGroup ID: 2, Group Name: None\nTFM Path Name: TT-T\n...\n</code></pre> <p>We see that the file contains multiple groups, and TFM groups start at Group ID = 1. Each TFM waveset (or path) corresponds to one group. Two datasets are associated with each waveset (one with TfmValue data class and one with TfmStatus data class) with matching dimensions. </p> <p>As an example, for the T-T waveset, we now know that we have 201 increments against the U axis (spaced by 1 mm) and that each TFM image has a dimension of 119 (V axis) x 80 (W axis) pixels. The vertical resolution of each image is 1.58 mm and the horizontal resolution is 1.69 mm. </p> <p>Let's plot the 100th TFM Image of this scan: </p> <pre><code>TFMs = np.array(nde_file['/Public/Groups/1/Datasets/0-TfmValue'])\n\nW_size = setup_data['groups'][1]['datasets'][0]['dimensions'][2]['quantity']\nW_min = setup_data['groups'][1]['processes'][0]['totalFocusingMethod']['rectangularGrid']['zImagingLimits']['min']\nW_max = setup_data['groups'][1]['processes'][0]['totalFocusingMethod']['rectangularGrid']['zImagingLimits']['max']\n\nV_resolution = setup_data['groups'][1]['datasets'][0]['dimensions'][1]['resolution']\nV_size = setup_data['groups'][1]['datasets'][0]['dimensions'][1]['quantity']\nV_min = setup_data['groups'][1]['processes'][0]['totalFocusingMethod']['rectangularGrid']['yImagingLimits']['min']\nV_max = setup_data['groups'][1]['processes'][0]['totalFocusingMethod']['rectangularGrid']['yImagingLimits']['max']\n\n# Calculate the axis range in meters\nvertical_axis = np.linspace(W_min, W_max, W_size)\nhorizontal_axis = np.linspace(V_min, V_max, V_size)\n\nTFM_U_increment = 100\n\n# Plot the TFM image\nplt.figure(figsize=(8, 8))\nplt.imshow(TFMs[TFM_U_increment, :, :].T,\n           extent=[horizontal_axis.min(), horizontal_axis.max(), vertical_axis.max(), vertical_axis.min()],\n           cmap='viridis', aspect='equal')  # aspect='equal' ensures aspect ratio of 1\n\n# Axis labels\nplt.xlabel('Horizontal Position (m)')\nplt.ylabel('Vertical Position (m)')\n\n# Add colorbar\nplt.colorbar(label='Amplitude')\n\n# Show plot\nplt.title(f'T-T TFM Image #{TFM_U_increment}')\nplt.show()\n</code></pre> <p>You should end up with the following figure:</p> <p></p>"},{"location":"examples/code-samples/reading-ut-ascans/","title":"Reading A-Scans from a UT scan","text":"<p>Let's take the example file provided for simple UT Manual Weld Scanning and see how we can display some A-Scans from this file. </p> <p>Start by loading the Setup JSON formatted dataset from the .nde file and parse it to a Python dictionary. </p> <pre><code>import h5py\nimport json\n\nnde_file = h5py.File('Manual_Weld_UT.nde', 'r')\n\n# Navigate to the path in the HDF5 file where the Setup JSON dataset is stored\nsetup_json = nde_file['Public/Setup'][()]\n# Decode the JSON string\nsetup_json = setup_json.decode('utf-8')\n# Parse the JSON string into a Python dictionary\nsetup_data = json.loads(setup_json)\n</code></pre> <p>Then, iterate through groups to retrieve group names, ids, and datasets and print the related datasets information.  </p> <pre><code>for group in setup_data.get('groups', []):\n    group_id = group.get('id')\n    group_name = group.get('name')\n\n    print(f\"Group ID: {group_id}, Group Name: {group_name}\")\n\n    # Retrieve datasets\n    datasets = group.get('datasets', [])\n    for dataset in datasets:\n      dataset_id = dataset.get('id')\n      dataset_class = dataset.get('dataClass')\n      dataset_path = dataset.get('path')\n      print(f\"  Dataset ID: {dataset_id}, '\"\n            f\" Data Class: {dataset_class}, '\"\n            f\" Data Path: {dataset_path}\")\n</code></pre> <p>The above code should output the following: </p> <pre><code>Group ID: 0, Group Name: GR-1\n  Dataset ID: 0, Data Class: AScanAmplitude, Data Path: /Public/Groups/0/Datasets/0-AScanAmplitude\n  Dataset ID: 1, Data Class: AScanStatus, Data Path: /Public/Groups/0/Datasets/1-AScanStatus\n</code></pre> <p>We see that the file contains one group, named GR-1 and two datasets. A-Scans will be stored in a dataset having a AScanAmplitude Data Class and its path is <code>/Public/Groups/0/Datasets/0-AScanAmplitude</code></p> <p>Let's now display the size of this specific dataset, still from the Setup dataset metadata.</p> <pre><code># Retrieve AScanAmplitude dataset dimensions\ndimensions = setup_data['groups'][0]['datasets'][0].get('dimensions', [])\nprint(\"AScanAmplitude Dataset Dimensions:\")\nfor dimension in dimensions:\n    axis = dimension.get('axis')\n    quantity = dimension.get('quantity')\n    resolution = dimension.get('resolution')\n    print(f\" Axis: {axis}, Quantity: {quantity}, Resolution: {resolution}\")\n</code></pre> <p>The above code should output the following: </p> <pre><code>AScanAmplitude Dataset Dimensions:\n Axis: UCoordinate, Quantity: 401, Resolution: 0.001\n Axis: VCoordinate, Quantity: 1, Resolution: 0.001\n Axis: Ultrasound, Quantity: 568, Resolution: 6.000000000000001e-08\n</code></pre> <p>So we now know that we have 401 A-Scans registered at different position along the U axis and that each A-Scan has a length of 568 points, each points being spaced by 60 nanoseconds.  </p> <p>Let's plot the 200th A-Scan: </p> <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\nascans = np.array(nde_file['/Public/Groups/0/Datasets/0-AScanAmplitude'])\n\n# Retrieve dimensions for the Ultrasound axis (from Setup JSON)\n\nultrasound_offset = setup_data['groups'][0]['datasets'][0]['dimensions'][2]['offset']\nultrasound_resolution = setup_data['groups'][0]['datasets'][0]['dimensions'][2]['resolution']\nnum_points_per_ascan = setup_data['groups'][0]['datasets'][0]['dimensions'][2]['quantity']\n\n# Amplitude scaling (from Setup JSON)\nunit_min = setup_data['groups'][0]['datasets'][0]['dataValue']['unitMin']\nunit_max = setup_data['groups'][0]['datasets'][0]['dataValue']['unitMax']\n\n# Original dataset (from Setup JSON)\noriginal_min = setup_data['groups'][0]['datasets'][0]['dataValue']['min']\noriginal_max = setup_data['groups'][0]['datasets'][0]['dataValue']['max']\n\n# Normalize the A-Scan amplitudes from the original scale (0 to 32767) to the new scale (0.0 to 200.0)\nnormalized_ascans = ((ascans - original_min) / (original_max - original_min)) * (unit_max - unit_min) + unit_min\n\n# Generate the time axis using the ultrasound offset and resolution\ntime_axis = np.linspace(\n      ultrasound_offset, \n      ultrasound_offset + num_points_per_ascan * ultrasound_resolution, \n      num_points_per_ascan\n  )\n\n# Plot the 200th A-Scan\n    plt.figure(figsize=(10, 6))\n    plt.plot(time_axis, ascans[199, 0, :], label=\"200th A-Scan\")\n    plt.title(\"200th A-Scan from GR-1 AScanAmplitude Dataset\")\n    plt.xlabel(\"Time (s)\")\n    plt.ylabel(\"Amplitude\")\n    plt.grid(True)\n    plt.legend()\n    plt.show()\n</code></pre> <p>You should end up with the following figure:</p> <p></p> <p>Alternatively, we could also plot the B-Scan:</p> <pre><code># Plot the B-Scan (image of stacked A-Scans)\nplt.figure(figsize=(12, 8))\nplt.imshow(normalized_ascans[:, 0, :].T, aspect='auto', cmap='viridis',\n           extent=[0, ascans.shape[0], time_axis[0], time_axis[-1]],\n           vmin=unit_min, vmax=unit_max)  # Set amplitude scale using unitMin/unitMax)\nplt.colorbar(label=\"Amplitude (%)\")\nplt.title(\"B-Scan: Stacked A-Scans from GR-1 AScanAmplitude Dataset\")\nplt.xlabel(\"A-Scan Index\")\nplt.ylabel(\"Time (s)\")\nplt.grid(False)\nplt.show()\n</code></pre> <p>You should end up with the following figure:</p> <p></p>"},{"location":"examples/code-samples/writing-ut-ascans/","title":"Writing UT A-Scans","text":"<p>Let's follow this simple procedure for writing UT A-Scans to an .nde file: </p> <ul> <li> Create the JSON formatted Properties dataset with minimal information</li> <li> Validate this JSON against the Properties JSON Schema</li> <li> Create the JSON formatted Setup dataset with minimal information</li> <li> Validate this JSON against the Setup JSON Schema</li> <li> Generate fake A-Scans to be saved in an AScanAmplitude dataset</li> <li> Save everything in an .NDE file</li> </ul>"},{"location":"examples/code-samples/writing-ut-ascans/#create-the-json-formatted-properties-dataset-with-minimal-information","title":"Create the JSON formatted Properties dataset with minimal information","text":"<p>Following the Properties dataset data model documentation, we only need to specify the <code>creationDate</code> and <code>formatVersion</code> in the file object and the related method in the methods array. </p> <p>The Properties dataset results in the following: </p> <pre><code>{\n   \"file\":{\n      \"creationDate\": \"2024-10-16T20:28:30+01:00\",\n      \"formatVersion\": \"4.0.0\"\n   },\n   \"methods\":[\"UT\"]\n}\n</code></pre>"},{"location":"examples/code-samples/writing-ut-ascans/#validate-properties-json-against-the-properties-json-schema","title":"Validate Properties JSON against the Properties JSON Schema","text":"<p>Then, check that the JSON file validate against the Properties schema, assuming you saved the above Properties JSON under <code>properties_ut_ascans.json</code>: </p> <pre><code>import fastjsonschema\nimport json\n\nproperties = json.load(open('properties_ut_ascans.json', 'r'))\nproperties_schema = json.load(open('NDE-Properties.json', 'r'))\nproperties_validator = fastjsonschema.compile(properties_schema)\n\ntry:\n    properties_validator(properties)\n    print('Properties JSON succeeded validation')\nexcept fastjsonschema.JsonSchemaException as e:\n    print(f\"Properties JSON failed validation: {e}\")\n</code></pre> <p>The above validation should not return any error code. </p>"},{"location":"examples/code-samples/writing-ut-ascans/#create-the-json-formatted-setup-dataset-with-minimal-information","title":"Create the JSON formatted Setup dataset with minimal information","text":"<p>Following the Setup dataset data model documentation, there are a couple of object we need to populate to end up with a valid dataset: </p> <pre><code>{\n    \"$schema\": \"...\",\n    \"version\": \"...\",\n    \"scenario\": \"...\",\n    \"groups\": [],\n    \"acquisitionUnits\": [],\n    \"dataMappings\": [],\n    \"specimens\": [],\n    \"probes\": [],\n    \"wedges\": []\n}\n</code></pre> <p>The first three are straightforward and reference the schema version used to validate the JSON, the version of the file format and the scenario used. As we are not scanning a weld, let's adopt the General Mapping scenario conventions: </p> <pre><code>{\n  \"$schema\": \"./NDE-FileFormat-Schema-4.0.0.json\",\n  \"version\": \"4.0.0\",\n  \"scenario\": \"General Mapping\",\n}\n</code></pre> <p>The following objects cover: </p> <ul> <li>The definition of groups, its datasets and processes: in our case a single group, a <code>AScanAmplitude</code> dataset and a ultrasonicConventional acquisition process</li> <li>The definition of the acquisition unit: in our case, the OmniScan X4 64x128</li> <li>The definition of a specimen: in our case, we will consider a 25 mm thick mild steel plate </li> <li>The definition of the probe: in our case, we will use a C109 fingertip contact probe </li> <li>The definition of the wedge: as we will be in contact, we will define a wedge with most of its dimensions equal to 0</li> </ul> <p>As the process of creating these JSON objects can be tedious the first time, we'll provide a template incorporating the above parameters to facilitate this demonstration.</p> Setup template <pre><code>{\n\"$schema\": \"./NDE-FileFormat-Schema-4.0.0-Dev.json\",\n\"version\": \"4.0.0-Dev\",\n\"scenario\": \"General Mapping\",\n\"groups\": [\n    {\n    \"id\": 0,\n    \"name\": \"GR-1\",\n    \"datasets\": [\n        {\n        \"id\": 0,\n        \"dataTransformations\": [\n            {\n            \"processId\": 0\n            }\n        ],\n        \"dataClass\": \"AScanAmplitude\",\n        \"storageMode\": \"Paintbrush\",\n        \"dataValue\": {\n            \"min\": -1,\n            \"max\": 1,\n            \"unitMin\": -100.0,\n            \"unitMax\": 100.0,\n            \"unit\": \"Percent\"\n        },\n        \"path\": \"/Public/Groups/0/Datasets/0-AScanAmplitude\",\n        \"dimensions\": [\n            {\n            \"axis\": \"UCoordinate\",\n            \"offset\": 0.0,\n            \"quantity\": 5,\n            \"resolution\": 0.001,\n            },\n            {\n            \"axis\": \"VCoordinate\",\n            \"offset\": 0.0,\n            \"quantity\": 1,\n            \"resolution\": 0.001\n            },\n            {\n            \"axis\": \"Ultrasound\",\n            \"offset\": 0.0,\n            \"quantity\": 3000,\n            \"resolution\": 1E-08\n            }\n        ]\n        }\n    ],\n    \"processes\": [\n        {\n        \"inputs\": [],\n        \"outputs\": [\n            {\n            \"id\": 0,\n            \"datasetId\": 0,\n            \"dataClass\": \"AScanAmplitude\"\n            }\n        ],\n        \"id\": 0,\n        \"implementation\": \"Hardware\",\n        \"ultrasonicConventional\": {\n            \"pulseEcho\": {\n                \"probeId\": 0\n            },\n            \"waveMode\": \"Longitudinal\",\n            \"velocity\": 5890.0,\n            \"wedgeDelay\": 0.0,\n            \"digitizingFrequency\": 100000000.0,\n            \"rectification\": \"None\",\n            \"beams\": [\n            {\n                \"id\": 0,\n                \"refractedAngle\": 0.0,\n                \"ascanStart\": 0.0,\n                \"ascanLength\": 30E-6\n            }\n            ]\n        }\n        }\n    ]\n    }\n],\n\"acquisitionUnits\": [\n    {\n    \"id\": 0,\n    \"platform\": \"X4\",\n    \"name\": \"MXU\",\n    \"model\": \"Orion_64x128\",\n    \"serialNumber\": \"QC-0090228\",\n    \"acquisitionRate\": 120.0\n    }\n],\n\"specimens\": [\n    {\n    \"id\": 0,\n    \"plateGeometry\": {\n        \"width\": 0.3,\n        \"length\": 0.3,\n        \"thickness\": 0.025,\n        \"surfaces\": [\n        {\n            \"id\": 0,\n            \"name\": \"Top\"\n        }\n        ],\n        \"material\": {\n        \"name\": \"Steel_Mild\",\n        \"longitudinalWave\": {\n            \"nominalVelocity\": 5890.0,\n            \"attenuationCoefficient\": 0.087\n        },\n        \"transversalVerticalWave\": {\n            \"nominalVelocity\": 3240.0,\n            \"attenuationCoefficient\": 0.174\n        },\n        \"density\": 7.8\n        }\n    }\n    }\n],\n\"probes\": [\n    {\n    \"id\": 0,\n    \"model\": \"C109\",\n    \"serie\": \"CONTACT\",\n    \"conventionalRound\": {\n        \"centralFrequency\": 5000000.0,\n        \"diameter\": 0.0127,\n        \"elements\": [\n        {\n            \"id\": 0,\n            \"acquisitionUnitId\": 0,\n            \"connectorName\": \"P1\"\n        }\n        ]\n    },\n    \"wedgeAssociation\": {\n        \"wedgeId\": 0,\n        \"mountingLocationId\": 0\n    }\n    }\n],\n\"wedges\": [\n    {\n    \"id\": 0,\n    \"model\": \"Contact\",\n    \"serie\": \"Default\",\n    \"angleBeamWedge\": {\n        \"width\": 0.1,\n        \"height\": 0.1,\n        \"length\": 0.1,\n        \"longitudinalVelocity\": 2330.0,\n        \"mountingLocations\": [\n        {\n            \"id\": 0,\n            \"wedgeAngle\": 0.0,\n            \"primaryOffset\": -1E-05,\n            \"secondaryOffset\": 0.0,\n            \"tertiaryOffset\": 0.0\n        }\n        ]\n    },\n    \"positioning\": {\n        \"specimenId\": 0,\n        \"surfaceId\": 0,\n        \"uCoordinateOffset\": 0.0,\n        \"vCoordinateOffset\": 0.0,\n        \"skewAngle\": 90.0\n    }\n    }\n]\n}\n</code></pre>"},{"location":"examples/code-samples/writing-ut-ascans/#validate-setup-json-against-the-setup-json-schema","title":"Validate Setup JSON against the Setup JSON Schema","text":"<p>Then, check that the JSON file validate against the Setup schema, assuming you saved the above Setup JSON under <code>setup_ut_ascans.json</code>: </p> <pre><code>setup = json.load(open('setup_ut_ascans.json', 'r'))\nsetup_schema = json.load(open('NDE-FileFormat-Schema-4.0.0.json', 'r'))\n\nsetup_validator = fastjsonschema.compile(setup_schema)\n\ntry:\n    setup_validator(setup)\n    print('Setup JSON succeeded validation')\nexcept fastjsonschema.JsonSchemaException as e:\n    print(f\"Setup JSON failed validation: {e}\")\n</code></pre> <p>The above validation should not return any error code. </p>"},{"location":"examples/code-samples/writing-ut-ascans/#generate-fake-a-scans-to-be-saved-in-an-ascanamplitude-dataset","title":"Generate fake A-Scans to be saved in an AScanAmplitude dataset","text":"<p>We will generate 5 fake A-Scans corresponding to 5 theoretical scanner positions. Each A-Scan will have a 5 MHz center frequency, a 60 % bandwidth and 3000 samples. Fake A-Scans will be stored in a 5 x 1 x 3000 numpy array named <code>ascans</code> that we will use as our <code>AScanAmplitude</code> type dataset. </p> <p>As the generation of fake A-Scans is out of the scope of this documentation, we simply provide the example code below for your convenience.</p> Fake A-Scans generation <pre><code># Constants\nsampling_rate = 100e6  # 100 MHz sampling rate\ntime_window = 30e-6  # 30 microseconds time window\nfrequency = 5e6  # 5 MHz center frequency\nnum_ascans = 5  # Number of A-Scans (U Axis size)\necho_amplitudes = [1, 0.7]  # Relative amplitude of the two echoes\nbandwidth = 0.6*frequency\ngaussian_width = sigma_t = 1 / (2 * np.pi * bandwidth)\nV_Axis = 1 # Size of the V axis\nUltrasound_Axis = round(time_window*sampling_rate)\n\n# Time array\nt = np.linspace(0, time_window, int(sampling_rate * time_window))\n\n# Gaussian modulated sinusoid function \ndef gaussian_modulated_sinusoid(t, center, frequency, width):\n    gauss = np.exp(-((t - center) ** 2) / (2 * width ** 2))\n    sinusoid = np.sin(2 * np.pi * frequency * (t - center))\n    return gauss * sinusoid\n\n# Generate A-Scans with varying echo positions\nascans = np.empty(shape=(num_ascans,V_Axis,Ultrasound_Axis))\n\nfor i in range(num_ascans):\n    # Echo positions slightly shifted for each A-Scan\n    echo_positions = [10e-6 + i * 0.1e-6, 20e-6 + i * 0.1e-6]\n\n    # Generate A-Scan\n    ascan = np.zeros_like(t)\n    for echo_pos, amplitude in zip(echo_positions, echo_amplitudes):\n        ascan += amplitude * gaussian_modulated_sinusoid(t, echo_pos, frequency, gaussian_width)\n\n    ascans[i, 0, :] = ascan\n</code></pre>"},{"location":"examples/code-samples/writing-ut-ascans/#save-everything-in-a-nde-file","title":"Save everything in a .NDE file","text":"<p>We now need to create the .NDE file using the HDF5 library following the HDF5 Structure specific to any .NDE file. The Properties JSON will be saved at the root of this structure, the Setup JSON will be saved under the <code>/Public/</code> path and the A-Scans will be saved in Group 0 under <code>/Public/Groups/0/Datasets</code>. </p> <pre><code>with h5py.File('ut_ascans.nde', 'w') as hdf5_file:\n    # Create the file structure\n    public_section = hdf5_file.create_group('Public')\n    groups_section = public_section.create_group('Groups')\n    group_0 = groups_section.create_group('0')\n    group_0_datasets = group_0.create_group('Datasets')\n\n    # Convert the JSON data to a string\n    setup_string = json.dumps(setup, indent=4)\n    properties_string = json.dumps(properties, indent=4)\n\n    # Save the JSON data under the respective path\n    hdf5_file.create_dataset('Public/Setup', data=setup_string, dtype=h5py.string_dtype('utf-8', len(setup_string)))\n    hdf5_file.create_dataset('Properties', data=properties_string, dtype=h5py.string_dtype('utf-8', len(properties_string)))\n\n    # Save the NumPy ascans under Group 0 datasets with AScanAmplitude DataClass\n    group_0_datasets.create_dataset('0-AScanAmplitude', data=ascans)\n\n    print(\"Data successfully saved to .NDE\")\n</code></pre> <p>You should end up with the following file:</p> <p></p>"},{"location":"examples/example-files/","title":"Example files","text":"<p>Beta Version Files</p> <p>The final version of the example files will be uploaded around mid-November. Please note that the files available on this page are currently beta versions and may undergo minor changes before their final release.</p>"},{"location":"examples/example-files/#general-weld-scenario-examples","title":"General Weld Scenario Examples","text":""},{"location":"examples/example-files/#manual-weld-scanning-using-conventional-ultrasound","title":"Manual Weld Scanning using Conventional Ultrasound","text":"<p>In this example, a weld bead on a 26 mm thick stainless steel plate is manually scanned using a C550 3.5 MHz single-element angle beam transducer mounted on a SPE2-60S-IHC 39\u00b0 wedge. The probe's position is recorded using an encoder.  </p> <p>ManualWeldUT_4.0_Beta.nde |  Download  |  View </p>"},{"location":"examples/example-files/#manual-weld-scanning-using-phased-array-ultrasound-paut","title":"Manual Weld Scanning using Phased-Array Ultrasound (PAUT)","text":"<p>In this example, a weld bead on a 26 mm thick stainless steel plate is manually scanned using a 5L64-A32 5 MHz 64 elements transducer mounted on a SA32-N55S 36\u00b0 wedge. The probe's position is recorded using a wire encoder. Two group configurations are provided.</p> <p>Conventional Sectorial Scaning with one group: </p> <p>Weld_Plate_PA-Sect_sk90_4.0_Beta.nde |  Download  |  View </p> <p>Compound Sectorial Scaning with two groups: </p> <p>Weld_Plate_PA-Comp_sk90-2gr_4.0_Beta.nde |  Download  |  View </p>"},{"location":"examples/example-files/#manual-weld-scanning-using-total-focusing-method-tfm","title":"Manual Weld Scanning using Total Focusing Method (TFM)","text":"<p>In this example, a weld bead on a 12.5 mm thick stainless steel plate is manually scanned using a 5L64-A32 5 MHz 64 elements transducer mounted on a SA32-N55S 36\u00b0 wedge. The probe's position is recorded using a wire encoder. Two group configurations are provided.</p> <p>Four TFM Wavesets/Groups: T-T, TT-T, TT-TT, TT-TTT:</p> <p>Weld_Plate_4TFM_sk90_4.0_Beta.nde |  Download  |  View </p> <p>One PCI Waveset/Group: T-T:</p> <p>Weld_Plate_PCI_sk90_4.0_Beta.nde |  Download  |  View </p>"},{"location":"examples/example-files/#general-mapping-scenario-examples","title":"General Mapping Scenario Examples","text":""},{"location":"examples/example-files/#composite-wheel-probe-scanning-using-phased-array-ultrasound-paut","title":"Composite Wheel Probe Scanning using Phased-Array Ultrasound (PAUT)","text":"<p>In this example, a 10 mm thick plexiglass plate comprising engraved letters is scanned using the RollerFORM scanner and a 3.5L64-IWP1 3.5 MHz 64 elements transducer. The probe's position is recorded using the scanner encoder. </p> <p>Plexi_Plate_PA-Lin0_sk90_4.0_Beta.nde |  Download  |  View </p>"},{"location":"examples/example-files/#corrosion-inspection-using-phased-array-ultrasound-paut","title":"Corrosion Inspection using Phased-Array Ultrasound (PAUT)","text":"<p>In this example, a 9.5 mm thick steel plate is scanned using the HydroFORM scanner and a 7.5L64-I8 7.5 MHz 64 elements transducer. The probe's position is recorded using the scanner encoder.</p> <p>Corr_Plate_PA-Lin0_sk270_4.0_Beta.nde |  Download  |  View </p>"},{"location":"examples/example-files/#pipes-elbow-corrosion-inspection-using-phased-array-ultrasound-paut","title":"Pipes Elbow Corrosion Inspection using Phased-Array Ultrasound (PAUT)","text":"<p>In this example, a 5.5 mm thick elbow pipe is scanned using the FlexoFORM scanner and a 7.5L64-FA1 7.5 MHz 64 elements transducer. The probe's position is recorded using the scanner encoder. Note that in this case a plate geometry is beign used, as each element of the probe is maintained normal to the pipe surface for each scanner position.  </p> <p>Corr_COD_PA-Lin0_sk90_4.0_Beta.nde |  Download  |  View </p>"},{"location":"faq/","title":"Frequently Asked Questions (FAQ)","text":"<p>No answer to your question? Need support? Please reach out to us. </p>"},{"location":"faq/#general-questions","title":"General questions","text":"Is there a review &amp; release process like with other standards? <p>Every 3 months, a new version of the JSON Schemas and updated documentation is published on our GitHub repository and page. Each version is carefully reviewed by our software developers, engineers and scientists. </p> Is there an organization that administers/manages the releases and associated documentation? <p>As of now, Evident has been approached by one standardization body, but work still needs to be done to see where/if the standardization will land on the .NDE or other open file format inspired by .NDE (HDF5 based). Evident currently controls the specifications of the .NDE format/standard and its releases, while remaining open to collaboration to extend it to other modalities or add new features. Since the format is based on open-source technologies, anyone is free to reuse or modify it for their own purposes.</p> <p>Other organizations like EPRI and COFREND have started to incorporate the HDF5 in their own standards. However, this could undermine the principle of maintaining a common file format and dictionary. Moreover, as Evident invests significant resources and effort to provide comprehensive support and development, any new collaborator or contributor should be prepared to dedicate substantial time and effort to achieve the same level of testing and documentation that we currently maintain.</p> How often does it get updated and will software using the .NDE have to be adapted each time? <p>Updates are released every 3 months to introduce new features or correct errors. If a new version does not introduce breaking changes but only adds new functionalities, software does not need to be updated, unless the application should support the new functionality. An application should however be updated if errors are corrected.</p> Are there any IP rights on the .NDE format and if so, who is holding those? <p>There are no IP rights on the .NDE file format. The content hosted on our GitHub repository is published under an MIT license.</p> If it is open source, who guarantees that it will not be changed to a licensed model later (e.g. like Oracle did with the Java Runtime and MySQL database)? <p>Our approach is different. We are not developing software in the case of the .NDE format. We are rather describing how to store data in a standardized way for our industry, using existing open-source technologies. It wouldn\u2019t make sense to charge you for access to this description as you are free to use your own descriptions. This approach aligns with the principle of allowing you to access your data. It was also the case with our previous proprietary format and OpenView SDK (this approach is aligned with the upcoming EU Data Act).</p>"},{"location":"faq/#evident-products","title":"Evident products","text":"Regarding .nde files produced by Evident instruments, will I still be able to use OpenViewSDK? <p>Evident won't support OpenViewSDK after the release of the .NDE file format version 4.0. Hence, OpenViewSDK won't be compatible with .NDE 4.0 files. </p> Will Evident software still support previous versions of .NDE files? <p>Evident software will ensure backward compatibility with previous versions of .NDE files saved with their corresponding instruments. Please note that Evident software applications listed below do not currently support .NDE files produced by third parties. </p> Software .NDE files compatibility OmniPC 2.X, 3.X &amp; 4.X saved with the Omniscan (MXU) WeldSight 2.X, 3.X &amp; 4.X saved with the Omniscan (MXU) PipeWIZARD 2.X, 3.X &amp; 4.X saved with the PipeWizard Why are Evident software applications only compatible with .NDE files saved with their corresponding instruments? <p>The .NDE open file format was designed to provide access to the data and as such the public section of the .NDE files contain all the necessary information for post-processing your data. New UNIS-based software applications from Evident will natively support the .NDE file format. However, for Evident software applications that existed prior to introducing the .NDE open file format, the support is currently limited.</p> Will Evident charge its customers to access their data and read .NDE files in the future? <p>No. The .NDE file format is built on an open-source mindset and technical foundations (such as HDF5 and JSON). Therefore, access to the data stored in .NDE files will always be free and open (with the exception of the private section of the file under \"/Applications\" which is not documented nor standardized). Our users own their data and should be free to use it as they want.</p>"},{"location":"faq/#diconde","title":"DICONDE","text":"What is the difference between DICONDE and the .NDE file format? <p>DICONDE is primarily an archiving format based on the DICOM standard for medical imaging, focusing on storing digital images with a standardized structure and communication protocol. It has been widely used for X-ray modality and is defined by the ASTM Committee 07, which limits its flexibility for specific inspection setups and complex data types (which should be supported soon). In contrast, the .NDE format, with specifications currently led by Evident, is a native file format for use directly on instruments or any other software. It is built on HDF and JSON for modular data storage, allowing customization and real-time access to data. Thus, .NDE is more suited for practical use and on-device interaction.</p> The DICONDE standard defines mature, secure and efficient peer-to-peer network services to connect compliant devices with data consumer or providers. This avoids erroneous file transfer actions since data is communicated directly, guarantees that data is understood between sender and receiver and particularly allows for building digital NDE 4.0 workflows. When using the NDE format, will I have to implement all data transfers (presumably based on file objects) from scratch in each of my NDE project? <p>Yes, the .NDE format standard and documentation does not cover data transfers. You would use the existing HDF5 backends and associated libraries for that purpose. Additionally, as data owners can have very different infrastructures (from small local storage to data lakes), this approach allows them to adopt a solution best suited for their needs with the required level of security.</p> By design, DICONDE data objects stay backwards compatible and readable for decades and are officially recognised as a long-term storage format. How is it guaranteed one can read NDE files in 30 year from now? <p>It depends on several factors:</p> <ul> <li>HDF5 has been in existence for over 20 years and is widely used across the scientific community and by many industries. We rely on The HDF Group to continue supporting this format for many years.</li> <li>Previous, current, and future versions of the .NDE format/standard are all made available on GitHub. While we cannot guarantee that this repository won\u2019t be moved in 30 years, you are free to make your own copy of its content.</li> <li>In the worst-case scenario, in 30 years, you can use a backup of the current HDF5 libraries combined with a copy of our GitHub repository, and you will have all the tools required to read an .NDE file.</li> </ul> <p>Finally, we acknowledge that the .NDE file format is not perfect and still lacks certain functionalities or information. However, we believe we have a robust approach for the years to come through our experience over the last year and a half, with feedback from our clients, and with the upcoming 4.0 version that will add more flexibility for new features.</p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>Welcome to the official documentation of the .NDE Open File Format. This page will guide you in quickly finding the right resources for your needs.</p> <p>The NDE Open File Format refers to any data file stored using the HDF5 container library and JSON text format following the HDF5 Structure and JSON Metadata requirements detailed in this documentation. Such a file should be saved using the .nde extension. </p> <p>The NDE Open File Format is designed for storing nondestructive testing (NDT) data. It is platform-independent and modality-agnostic, offering a relatively simple file structure for mainstream NDT applications while supporting future complex solutions and technologies. It currently supports the Ultrasonic (UT) modality and will soon support the Eddy Current (ET) modality.</p>"},{"location":"getting-started/#learn-about-the-nde-open-file-format-initiative","title":"Learn about the .NDE Open File Format Initiative","text":"<p>You've heard about the .NDE Open File Format, but you're unsure where it originates or whether it's right for you. Here are some interesting resources to help you decide:</p> <ul> <li> .NDE and UNIS Open Platform \u2013 From inception to a complete NDT open platform</li> <li> Collaboration \u2013 How to contribute to the .NDE File Format</li> <li> FAQ \u2013  Find answers to Frequently Asked Questions regarding .NDE </li> <li> Licensing \u2013 The .NDE File Format content is published under an MIT license. </li> </ul>"},{"location":"getting-started/#read-and-write-nde-files-yourself","title":"Read and Write .NDE Files Yourself","text":"<p>If you're thinking about developing your own application to read and/or write .NDE files or simply want to learn more about the underlying technology, check out the following resources:</p> <ul> <li> HDF5 Structure \u2013 Learn how any .NDE files should be structured and where to find the datasets containing raw data.</li> <li> JSON Metadata \u2013 Learn the data model and conventions used to describe inspection related information.</li> <li> Example Files \u2013  Quickly explore example files through myHDF5 viewer or use it them to prototype your own code.</li> <li> Python Code Samples \u2013  See how you can use the information provided in this documentation for your own application. </li> </ul>"},{"location":"getting-started/#good-to-know","title":"Good to know","text":"<ul> <li> Supporting Software \u2013 Discover the list of software compatible with .NDE files. </li> <li> Changelog \u2013 Being up to date is important, make sure you bookmark our changelog and versioning page. </li> </ul>"},{"location":"getting-started/collaboration/","title":"Collaboration","text":""},{"location":"getting-started/collaboration/#collaborate-with-evident","title":"Collaborate with Evident","text":"<p>Evident currently controls the specifications of the NDE Open File Format and its releases while remaining open to collaboration to extend it to other modalities or add new features. Since the format is based on open-source technologies, anyone is free to reuse or modify it for their own purposes.</p> <p>Hence, we encourage other vendors, service providers, asset owners and academics to reach out to us if you think there would be interest to partner in a collaborative effort, for improving and adding new functionalities to the NDE Open File Format. </p> <p>Moreover, as Evident invests significant resources and effort to provide comprehensive support and development, any new collaborator or contributor should be prepared to dedicate substantial time and effort to achieve the same level of testing and documentation that we currently maintain.</p>"},{"location":"getting-started/collaboration/#engaged-with-other-initiatives","title":"Engaged with other initiatives","text":"<p>Evident is also involved in other initiatives and working groups, such as those led by EPRI in the US and COFREND in France. Our goal is to offer insights and share experiences towards developing an open file format, while discussing new functionalities and improvements for the future. Many initiatives aim to create export formats, whereas we developed .NDE Open File Format with versatility in mind, allowing it to serve as a native format for any instrument or software.</p>"},{"location":"getting-started/collaboration/#experimental-features","title":"Experimental features","text":"<p> Experimental </p> <p>You may find features or properties tagged as throughout the documentation. These features are considered for future releases but are not yet officially integrated into the .NDE File Format. This allows us to share ongoing developments with you while awaiting final decisions and approval. We welcome your feedback on these features to help us refine their final versions.</p>"},{"location":"getting-started/nde-and-unis/","title":"NDE and UNIS Open Platform","text":"<p>The .NDE file format is one of the primary interfaces of the Unified NDT Inspection Software (UNIS) platform currently being developed by Evident. It was first introduced on the OmniScan X3 in October 2022 with the release of MXU 5.11. The .NDE file format will be supported by all future NDT software applications developed by Evident.</p> <p>UNIS is an open platform that can be used by all stakeholders in the NDT world to enable NDE 4.0 and accelerate software development. It is based on open standards and technologies, allowing data exchange through an open file format, and provide open APIs to control Evident instruments. It enables modularity and customization, fostering innovation for all Evident customers. </p> <p>The UNIS Platform is composed of four main components:</p> <ul> <li>The .NDE File Format</li> <li>The Device and its API</li> <li>The Data Processing Unit (DPU) - the core of the platform.</li> <li>The resulting application or User Interface (UI).</li> </ul> <p>Want to learn more about the UNIS platform? Please reach out to us. </p>"},{"location":"hdf5-structure/","title":"HDF5 Structure","text":"<p>The HDF5 Library serves as the backbone of the NDE File Format. The NDE File Format uses the HDF5 library along with the data model defined in this documentation to provide a consistent, flexible and powerful format for the NDT Industry. </p> <p>The .nde inherits from the hierarchical characteristic of the HDF5 framework, hence its data model can be represented as a tree structure similar to a file system structure with folders and files. Within the HDF5 framework, folders are called groups and files are called datasets.</p> <p>Each .nde file should follow this basic structure: </p> <p>Tip</p> <p>Click on the Private, Public, Setup, Groups or Properties blocks to learn more. </p> <pre><code>flowchart LR\n  .nde[\".nde\"]:::root --&gt; Private[\"/Private\"]:::group\n  .nde[\".nde\"]:::root --&gt; Public[\"/Public*\"]:::group\n  .nde[\".nde\"]:::root --&gt; Properties[\"/Properties*\"]:::dataset\n  Public[\"/Public*\"] --&gt; Setup[\"/Setup*\"]:::dataset\n  Public[\"/Public*\"] --&gt; Groups[\"/Groups\"]:::group\n  click Public \"public-group\"\n  click Private \"private-group\"\n  click Properties \"/json-metadata/properties\"\n  click Setup \"/json-metadata/setup\"\n  click Groups \"public-group#groups-group-and-subgroups\"\n  classDef root fill:#005cb9,stroke:#000000,color:#fff\n  classDef group fill:#ffc72c,stroke:#000000,color:#000000\n  classDef dataset fill:#fff,stroke:#000000,color:#000000</code></pre> <p>Each one of the structure layers represents either an HDF5 group  (yellow rectangle) or a dataset  (white rectangle). Mandatory groups and datasets are highlighted by a <code>*</code> at the end of their name. </p> <p>Any .nde file can be opened using a regular HDF5 reader such as HDFView or MyHDF5, allowing you to explore its structure and have a first look at its content. Learn more by exploring some of our example files.</p> <p></p>"},{"location":"hdf5-structure/private-group/","title":"Private group","text":"<pre><code>flowchart LR\n  .nde[.nde]:::root --&gt; Private[\"/Private\"]:::group\n  classDef root fill:#005cb9,stroke:#000000,color:#fff\n  classDef group fill:#ffc72c,stroke:#000000,color:#000000\n  classDef dataset fill:#fff,stroke:#000000,color:#000000</code></pre> <p>The Private HDF5 group and all of its subgroups are optional and considered proprietary and software-specific data. This section can be structured as per the acquisition or post-processing software\u2019s specifications.</p> <p>Each application that creates, read or modifies the file can add specific information here. This container can be used as deemed necessary by the application software that creates the .nde file, including but not limited to storing setup information, customized data, or metadata, etc. </p> <p>Everything under this group is not covered by the present documentation and should not be used for information that should be shared between different applications. </p>"},{"location":"hdf5-structure/public-group/","title":"Public group","text":"<pre><code>flowchart LR\n  .nde[.nde]:::root --&gt; Public[\"/Public*\"]:::group\n  Public[\"/Public*\"] --&gt; Setup[\"/Setup*\"]:::dataset\n  Public[\"/Public*\"] --&gt; Groups[\"/Groups\"]:::group\n  classDef root fill:#005cb9,stroke:#000000,color:#fff\n  classDef group fill:#ffc72c,stroke:#000000,color:#000000\n  classDef dataset fill:#fff,stroke:#000000,color:#000000</code></pre> <p>The Public HDF5 group is mandatory and the structure of its subgroups is considered as standardized information (which structure is described in the present documentation).</p>"},{"location":"hdf5-structure/public-group/#setup-dataset","title":"Setup dataset","text":"<p>The Setup HDF5 dataset is mandatory and contains all the metadata useful to retrieve the acquisition context and to read or process the acquired datasets (probes, specimens, acquisitions units etc.). This dataset is a string structured in a JSON format. </p>"},{"location":"hdf5-structure/public-group/#groups-group-and-subgroups","title":"Groups group and subgroups","text":"<p>Avoid the confusion</p> <p>The Groups designation could be quite confusing, hence please pay special attention to the difference betwen an HDF5 group (the equivalent of a folder in a filesystem) and the .NDE Groups structure layer, which is the name of a specific HDF5 group defined in the .NDE file format data model that can be access under the /Public/Groups path.</p> <p>The Groups HDF5 group may contain inspection data but also other contextual information divided by inspection groups. An inspection group corresponds to the combination of one or several probes and an acquisition strategy (such as a Linear Array and TFM for UT). </p> <p>Datasets, that contain inspection data, are stored hierarchically using the following logic:</p> <pre><code>flowchart LR\n  Groups[\"/Groups\"]:::group --&gt; GroupId[\"/[GroupId]\"]\n  GroupId[\"/[GroupId]\"]:::group --&gt; Datasets[\"/Datasets\"]\n  Datasets[\"/Datasets\"]:::group --&gt; DatasetId-DataClass[\"/[DatasetId-DataClass]\"]:::dataset\n  classDef root fill:#005cb9,stroke:#000000,color:#fff\n  classDef group fill:#ffc72c,stroke:#000000,color:#000000\n  classDef dataset fill:#fff,stroke:#000000,color:#000000</code></pre> <ul> <li> <p>GroupId must be a unique integer identifying an inspection group.</p> </li> <li> <p>DatasetId must be a unique integer within a group identifying a specific dataset. </p> </li> <li> <p>DataClass must be a string taking one of the supported values: <code>AScanAmplitude</code>, <code>AScanStatus</code>, <code>TFMValue</code> and <code>TFMStatus</code>. It allows to quickly identify the type of data associated with a Dataset. The additional <code>FiringSource</code> data class can be found in some Evident .NDE files but this type of dataset is only used internally for the moment.</p> </li> </ul> <p>Note that the Groups HDF5 group structure matches the description of groups in the JSON formatted Setup dataset. Please refer to this section for more information on datasets structure.</p>"},{"location":"hdf5-structure/public-group/#example","title":"Example","text":"<p>It results in the following structure in a typical case where the acquisition was performed with an OmniScan X3 or X4. See also the example files page.</p> <pre><code>flowchart LR\n  Groups[\"/Groups\"]:::group --&gt; 0[\"/0\"]\n  0[\"/0\"]:::group --&gt; Datasets[\"/Datasets\"]\n  Datasets[\"/Datasets\"]:::group --&gt; 0-AScanAmplitude[\"/0-AScanAmplitude\"]:::dataset\n  Datasets[\"/Datasets\"]:::group --&gt; 1-AScanStatus[\"/1-AScanStatus\"]:::dataset\n  classDef root fill:#005cb9,stroke:#000000,color:#fff\n  classDef group fill:#ffc72c,stroke:#000000,color:#000000\n  classDef dataset fill:#fff,stroke:#000000,color:#000000</code></pre>"},{"location":"json-metadata/","title":"JSON Metadata","text":"<p>In an .NDE file, all metadata are stored within JSON formatted datasets. The two main ones are the Properties and Setup datasets. Each JSON formatted dataset can be validated against a JSON Schema for automatic structure verification.</p> <ul> <li> <p> Properties</p> <p>Containing metadata relative to the properties of the file as well as generic information useful to index and classify different .nNDE files</p> <p> Learn more</p> </li> <li> <p> Setup</p> <p>Containing all the metadata useful to retrieve the acquisition context and to read or process the acquired datasets.</p> <p> Learn more</p> </li> </ul>"},{"location":"json-metadata/properties/","title":"Properties","text":"<pre><code>flowchart LR\n  .nde[.nde]:::root --&gt; Properties[\"/Properties*\"]:::dataset\n  classDef root fill:#005cb9,stroke:#000000,color:#fff\n  classDef group fill:#ffc72c,stroke:#000000,color:#000000\n  classDef dataset fill:#fff,stroke:#000000,color:#000000</code></pre> <p>The Properties dataset is mandatory and located at the root of .NDE file HDF5 structure. It contains metadata relative to the properties of the file as well as generic information useful to index and classify different .NDE files without digging into the details of the inspection and data that can be found in the Setup dataset. This dataset is formatted in a JSON.   </p> <p>The structure of the formatted JSON included in the Properties dataset can be validated against a dedicated JSON schema than can be downloaded here. </p> <p>The data model related to the Properties dataset details the different JSON objects and arrays with their expected values, associated description and examples. </p> <pre><code>classDiagram\n   Properties --&gt; \"1\" file\n   Properties --&gt; \"1\" methods\n   class Properties\n   class file\n   class methods\n   style Properties fill:#fff,stroke:#000000,color:#000000</code></pre>"},{"location":"json-metadata/properties/data-model/","title":"Properties data model","text":"<p>This page details the different JSON objects and arrays with their expected values, associated description and examples related to the Properties JSON formatted dataset. </p>"},{"location":"json-metadata/properties/data-model/#file-object","title":"file object","text":"<p>The file object describes generic file creation and modification properties. </p> Property Type Description createdByAppName string Name of the application used to create the file createdByAppVersion string Version of the application used to create the file createdByAppCompany string Name of the company editing the application used to create the file creationDate <code>required</code> string Creation date of the file (date-time as per RFC 3339) creationFormatVersion string Original File Format Version (X.Y.Z) at the time of creation of the file (in case the file was converted) modifiedByAppName string Name of the application used to modify the file modifiedByAppVersion string Version of the application used to modify the file modifiedByAppCompany string Name of the company editing the application used to modify the file modificationDate string Last modification date of the file  (date-time as per RFC 3339) formatVersion <code>required</code> string NDE File Format Version (X.Y.Z) notice string Short string describing the file characteristics (e.g. \u201cPre-release\u201d) description string A long string describing the file characteristics <p>Example:</p> <pre><code>\"file\": {\n   \"createdByAppName\": \"MXU\",\n   \"createdByAppVersion\": \"5.17.1.1\",\n   \"createdByAppCompany\": \"Evident\",\n   \"creationDate\": \"2024-04-29T14:02:39-04:00\",\n   \"creationFormatVersion\": \"3.3.0\",\n   \"modifiedByAppName\": \"MXU\",\n   \"modifiedByAppVersion\": \"6.0.0\",\n   \"modifiedByAppCompany\": \"Evident\",\n   \"modificationDate\": \"2024-10-27T16:15:55-04:00\",\n   \"formatVersion\": \"4.0.0\",\n   \"notice\": \"NDE 4.0 Release Version\"\n},\n</code></pre>"},{"location":"json-metadata/properties/data-model/#methods-array","title":"methods array","text":"<p>The methods array lists the NDT methods used in the file. Only the <code>UT</code> method is allowed so far. </p> <p>Example:</p> <pre><code>\"methods\": [\"UT\"]\n</code></pre>"},{"location":"json-metadata/properties/data-model/#experimental-arrays-and-objects","title":"Experimental arrays and objects","text":"<p>Warning</p> <p>The following section contains arrays and objects in an experimental stage. They are not part of an official release yet. They are provided for information only, and we welcome your feedback. </p>"},{"location":"json-metadata/properties/data-model/#operators-array","title":"operators array","text":"<p> Experimental</p> <p>An operator designates anyone interacting with the file. The operators array lists the different operators and their properties.</p> Property Type Description id integer Unique id of the operator (eg: badge id, employee id\u2026) name string Operator name role String [Inspector, Reviewer, Analyzer, \u2026] companyName string Company the inspector/operator belongs to <pre><code>\"operator\":[\n   {\n   \"id\": \"hlamb1849\",\n   \"name\": \"Horace Lamb\",\n   \"role\": \"inspector\",\n   \"certificationDate\": \"2022-03-12T20:28:30+01:00\",\n   \"companyName\": \"Evident\" \n   },\n   {\n   \"id\": \"jfourier1768\",\n   \"name\": \"Joseph Fourier\",\n   \"role\": \"reviewer\",\n   \"certificationDate\": \"1790-03-12T20:28:30+01:00\",\n   \"companyName\": \"Evident\" \n   }\n]\n</code></pre>"},{"location":"json-metadata/properties/data-model/#location-object","title":"location object","text":"<p> Experimental</p> <p>The location object describes the physical location where the acquisition was made. </p> Property Type Description companyName string The company/asset owner where the data was collected companySite string The specific company site where the data was collected gpsLocation string The GPS location where the data was collected (see ISO6709) address string The address where the data was collected city string The city where the data was collected state string The state where the data was collected country string The country where the data was collected <pre><code>\"location\":{\n   \"companyName\": \"ACME PETROLEUM\",\n   \"companySite\": \"ZONE 51\",\n   \"gpsLocation\": \"48.890451102865384, -122.73358666138213\",\n   \"address\": \"1751 Rue Richardson suite 7.115\",\n   \"city\": \"Montreal\",\n   \"state\": \"QC\",\n   \"country\": \"Canada\" \n}\n</code></pre>"},{"location":"json-metadata/properties/data-model/#component-object","title":"component object","text":"<p> Experimental</p> <p>The component object gives references on the inspected component. </p> Property Type Description name string The name of the component under investigation model string The model of the component under investigation serialNumber string The S/N of the component under investigation <pre><code>\"component\":{\n   \"name\": \"Crazy_pipe\",\n   \"model\": \"coated_pipe_300\",\n   \"serialNumber\": \"CP300-X1524875\" \n}\n</code></pre>"},{"location":"json-metadata/properties/data-model/#job-object","title":"job object","text":"<p> Experimental</p> <p>The job object gives information about the project and business context in which the acquisition was made. </p> Property Type Description projectName string The name of the project projectId string The Id or reference of the project inspectionName string The name of the inspection inspectionId string The Id or reference of the inspection <pre><code>\"job\":{\n   \"projectName\": \"ACME PIPING\",\n   \"projectId\": \"KXL_101\",\n   \"inspectionName\": \"Girth Welds Zone 1\",\n   \"inspectionId\": \"GW_Z1\" \n}\n</code></pre>"},{"location":"json-metadata/properties/schema_doc/","title":"JSON Schema","text":"<p>Beta Version Files</p> <p>The final version of the schema files will be uploaded around mid-November. Please note that the file available on this page is currently a beta version and may undergo minor changes before its final release.</p> <p>This page presents a human readable version of the Properties dataset JSON Schema that can be downloaded here</p> Schema Docs Type: object file Required root  fileType: object No Additional Properties createdByAppName root  file createdByAppNameType: string <p>Must be at least <code>1</code> characters long</p> createdByAppVersion root  file createdByAppVersionType: string Same definition as createdByAppName createdByAppCompany root  file createdByAppCompanyType: string Same definition as createdByAppName creationDate Required root  file creationDateType: string creationFormatVersion root  file creationFormatVersionType: string Same definition as createdByAppName modifiedByAppName root  file modifiedByAppNameType: string Same definition as createdByAppName modifiedByAppVersion root  file modifiedByAppVersionType: string Same definition as createdByAppName modifiedByAppCompany root  file modifiedByAppCompanyType: string Same definition as createdByAppName modificationDate root  file modificationDateType: string Same definition as creationDate formatVersion Required root  file formatVersionType: enum (of string) Must be one of: <ul><li>\"4.0.0\"</li></ul> notice root  file noticeType: string Same definition as createdByAppName description root  file descriptionType: string Same definition as createdByAppName methods Required root  methodsType: array of enum (of string) <p>Must contain a minimum of <code>1</code> items</p> No Additional ItemsEach item of this array must be: root  methods methods itemsType: enum (of string) Must be one of: <ul><li>\"UT\"</li></ul> <p>Generated using json-schema-for-humans on 2024-10-17 at 18:39:47 -0400</p>"},{"location":"json-metadata/setup/","title":"Setup","text":"<pre><code>flowchart LR\n  .nde[.nde]:::root --&gt; Public[\"/Public*\"]:::group\n  Public[\"/Public*\"] --&gt; Setup[\"/Setup*\"]:::dataset\n  click Public \"public-group\"\n  classDef root fill:#005cb9,stroke:#000000,color:#fff\n  classDef group fill:#ffc72c,stroke:#000000,color:#000000\n  classDef dataset fill:#fff,stroke:#000000,color:#000000</code></pre> <p>The Setup dataset is mandatory and located inside the Public group of the .nde file HDF5 structure. It contains all the metadata useful to retrieve the acquisition context and to read or process the acquired datasets (probes, specimens, acquisitions units etc.) and is formated in a JSON.  </p> <p>The data model related to the Properties dataset details the different JSON objects and arrays with their expected values, associated description and examples. </p> <pre><code>classDiagram\n   Setup --&gt; \"1\" version\n   Setup --&gt; \"1\" scenario\n   Setup --&gt; \"1..n\" groups\n   Setup --&gt; \"1..n\" acquisitionUnits\n   Setup --&gt; \"1..n\" motionDevices\n   Setup --&gt; \"1..n\" dataMappings\n   Setup --&gt; \"1..n\" probes\n   Setup --&gt; \"1..n\" wedges\n   class Setup\n   class version\n   class scenario\n   class groups\n   class acquisitionUnits\n   class motionDevices\n   class dataMappings\n   class probes\n   class wedges\n   style Properties fill:#fff,stroke:#000000,color:#000000</code></pre>"},{"location":"json-metadata/setup/conventions/","title":"Conventions","text":""},{"location":"json-metadata/setup/conventions/#units","title":"Units","text":"<p>Angles are expressed in degrees, while all other units in the dataset use the International System (SI), such as meters and seconds, unless otherwise indicated by a \"unit\" key. For example, the \"Bitfield\" and \"Percent\" units are used for the A-Scans in the dataset object. </p> Quantity Symbol, usual script (common) Units Distance, positions X, Y, Z meter [m] Time t second [s] Mass M kilogram [kg] Speed c [m/s] Angle \u03b1, \u03b2, \u03b3, \u03b8, \u03c6 degree [\u00b0] Density \u03c1 [kg/m<sup>3</sup>] Gain G dB"},{"location":"json-metadata/setup/conventions/#axes-and-coordinate-systems","title":"Axes and Coordinate Systems","text":"<p>The following coordinate systems are defined and used for storing and locating the position of each element in space. A transformation, such as through the use of homogeneous coordinates and transformation matrices can be defined between each coordinate systems using the parameters stored in the Setup JSON formatted dataset. </p>"},{"location":"json-metadata/setup/conventions/#global-referential-coordinate-system","title":"Global referential coordinate system","text":"<p>\\((X,Y,Z)\\)</p> <p></p> <ul> <li>It is independent of the acquisition and serves to position the data on the specimen in the real world.</li> <li>Origin and orientation: Arbitrary and stays the same across files for a given specimen. It is usually defined by the user on the specimen with some marking or physical reference in the specimen environment.</li> </ul> <p>NOTE: Currently, the \\(X\\), \\(Y\\), and \\(Z\\) axis are not used nor defined in the NDE file, but to show inspection results in 3D, one would have to translate everything to this coordinate system. </p>"},{"location":"json-metadata/setup/conventions/#specimen-surface-coordinate-system","title":"Specimen surface coordinate system","text":"<p>\\((U,V,W)\\)</p> <p></p> <p>For scenarios in which probe positioning is in direct relation to the surface, the position on the surface of a specimen, \\((X, Y, Z)\\) in global coordinates, is transformed into \\((U,V)\\) surface orthogonal curvilinear coordinates. Take note that depending on the scenario, the \\((U,V)\\) may be directly in distance unit (meter), but this is not systematic. </p> <p>The use of \\((U,V)\\) coordinates is enforced as a way to disambiguate the notions of \u201cscan axis\u201d and \u201cindex axis,\u201d which are interpreted depending on the scenario. </p> <p>To the \\((U,V)\\) surface mapping coordinates a depth axis \\(W\\) is added. The depth \\(W\\) is defined as being normal to the local \\((U,V)\\) coordinates and follows the right-hand rule for sign definition, resulting in a \\((U,V,W)\\) coordinate system </p> <ul> <li>The \\(W\\) axis is normal to the surface and always points inside the material.</li> <li>The \\(U\\) axis is defined relative to the specimen's feature (per scenario). Its orientation is arbitrary.</li> <li>The \\(V\\) axis is perpendicular to \\(U\\) and its orientation can be inferred with the right-hand rule from the cross product of \\(U\\) and \\(W\\). </li> </ul>"},{"location":"json-metadata/setup/conventions/#trajectory-coordinate-system","title":"Trajectory coordinate system","text":"<p>\\((u,v,w)\\)</p> <p></p> <ul> <li>The trajectory is the path mechanically followed at the surface of the specimen by the scanner.</li> <li>The trajectory \\((u,v)\\) curvilinear coordinates (not necessarily in distance units) are linked to the position encoders (in distance units).</li> <li>The trajectory parameter \\(u\\) is often along the continuous scanning axis, while the \\(v\\) parameter describes the orthogonal direction.</li> <li>The trajectory parameter \\(w\\) is along the specimen's local normal. </li> <li>Multiple wedges coordinate system \\((x_w, y_w, z_w)\\) attached to a scanner can be defined using the appropriate offsets along the trajectory.</li> </ul>"},{"location":"json-metadata/setup/conventions/#wedge-coordinate-system","title":"Wedge coordinate system","text":"<p>\\((x_w, y_w, z_w)\\) </p> <p></p> <ul> <li>The wedge reference frame is typically positionned directly on the surface \\((U,V)\\) through the trajectory \\((u,v)\\), and thus links the probe position to the specimen.</li> <li>Origin and orientation: See appropriate wedge object conventions with the appropriate technology (ex. UT/PAUT)  for details.</li> </ul> <p>NOTE: The term wedge is used to describe any device that maintain constant positioning of a probe relative to an inspected surface.</p>"},{"location":"json-metadata/setup/conventions/#mounting-location-coordinate-system","title":"Mounting location coordinate system","text":"<p>\\((x_m, y_m, z_m)\\)</p>"},{"location":"json-metadata/setup/conventions/#probe-coordinate-system","title":"Probe coordinate system","text":"<p>\\((x_p, y_p, z_p)\\)</p> <p></p> <p>The origin of the probe coordinate system \\((x_p, y_p, z_p)\\) corresponds to the center of the first element. The probe Primary Axis is along \\(y_p\\) and the probe Secondary Axis is along \\(x_p\\).</p> <p>Origin and orientation: See appropriate probe object conventions with the appropriate technology (ex. UT/PAUT) for details.</p>"},{"location":"json-metadata/setup/conventions/#other-axes","title":"Other axes","text":"<p>Beams Axis:</p> <ul> <li>An axis used in the HDF5 dataset rather than a physical one where each element contains one beam's incidence position on the specimen. It is used in PAUT scenarios when the beams do not fit well in a \\(U\\), \\(V\\) grid. Giving the coordinate by beams simplifies their use in these scenarios. </li> </ul> <p>Ultrasound Axis: </p> <ul> <li>Time-based information sampled by an ultrasonic acquisition system. The positioning in the global coordinates requires accounting for ray tracing and part velocities.</li> </ul> <p>Encoding Axis: </p> <ul> <li>Relates to encoder displacement, coupling to specimen and/or global coordinates is scenario dependant.</li> </ul>"},{"location":"json-metadata/setup/conventions/#storage-mode","title":"Storage mode","text":"<p>There are two disctinct ways to work with discreteGrid when storing a given dataset. </p> <p>storageMode: \"Independent\" is used to store the complete data acquisition sequence in reference to a \\((u,0)\\) trajectory. For example, a scanner comprizing many different PAUT probes each individually offset relative to the \\((u,v)\\) reference system could all relate to the same discreteGrid with independant storage mode. In this case the positioning of the data on or in the specimen requires some processing of individual beams or sensors position.</p> <p>storageMode: \"Paintbrush\" is used to store individual beams or sensor information directly on the corresponding \\((u,v)\\) position. Practically, Paintbrush is only possible under some hypotheses:</p> <ul> <li>All beams or sensors operates under the same condition. For example, paint brush is possible with linear pulse-echo PAUT but is not with sectorial pulse-echo PAUT.</li> <li>All beams or sensors can be associated with a surface position. For example, FMC acquisition can't be stored as Paintbrush because individual ascan of the FMC don't have defined surface positionning.</li> <li>Beams or sensors surface positionning should fit perfectly on the underlying coordinate system grid. Accordingly, the discreteGrid coordinate system grid typically has to be created according to a probe and scanning system characteristic for a Painbrush storage.</li> </ul> <p>The main advantage of Paintbrush storage is that data is natively mapped on a specimen surface.</p>"},{"location":"json-metadata/setup/conventions/#utpaut-conventions","title":"UT/PAUT Conventions","text":""},{"location":"json-metadata/setup/conventions/#general-concepts-and-hypothesis","title":"General Concepts and Hypothesis","text":"<ul> <li>Material is considered linear, homogeneous, and isotropic by default.</li> <li>Coupling layers are incapable of transmitting shear waves by default.</li> <li>Probe with single nominal center frequency by default.</li> </ul>"},{"location":"json-metadata/setup/conventions/#examples-utpaut","title":"Examples UT/PAUT","text":"Example of a typical plate scenario with a weld and two probes in relation to the \\(U\\) and \\(V\\) axis. Example general weld scenario with an axial weld on a pipe."},{"location":"json-metadata/setup/scenarios/","title":"Scenarios","text":"<p>Scenarios introduce a set of conventions specific to a given use case, enabling a simple description of the specimen and associated probe and wedge positioning. </p> <p>Many nondestructive inspection scan plans are referenced to the surface of a specimen. Scenarios corresponding to those use cases link the probe or wedge positioning through \\((U,V)\\) surface coordinates. </p>"},{"location":"json-metadata/setup/scenarios/#general-mapping-scenario","title":"General Mapping Scenario","text":"<p>Hypotheses:</p> <ul> <li>The probe positioning vs. the related specimen surface is constant for all \\((u,v)\\) position (skew angle, liftoff, etc.) or automatically compensated (i.e., adaptive acoustic, liftoff compensation, electronic).</li> <li>The \\(u\\) axis is the principal scan axis and is typically collinear with a physical encoder device.</li> <li>The \\(v\\) axis is orthogonal to the \\(u\\) axis and may be associated to a secondary physical encoder, an electronic scan, or both (for paint brush raster scans).</li> <li>The origin \\(O\\) position on the surface is arbitrarily defined by the user.</li> </ul> Raster example with the \\(U\\) and \\(V\\) axis."},{"location":"json-metadata/setup/scenarios/#general-weld-scenario","title":"General Weld Scenario","text":"<p>Hypotheses:</p> <ul> <li>The scenario relates to the inspection of a single straight or curved weld or joint.</li> <li>The surface line \\((u,0)\\) is collinear with the center of said weld or joint.</li> <li>The probe positioning vs. the related specimen surface is constant for all \\((u,v)\\) position (skew angle, liftoff, etc.) or automatically compensated (i.e., adaptive acoustic, liftoff compensation, electronic).</li> <li>For pipe geometry, the orientation of the weld is defined in relation to the pipe axis. With an angle of 0\u00b0 for an axial weld and 90\u00b0 for a circumferential one. Any angle in between describes a helix weld.</li> <li>Scan patterns can be entirely described on the surface of specimen as a set of orthogonal axes parallel and orthogonal to the weld.</li> </ul> The weld angle is defined in relation to the pipe axis. Axial weld. The weld angle is defined in relation to the pipe axis. Girth weld."},{"location":"json-metadata/setup/schema_doc/","title":"JSON Schema","text":"<p>Beta Version Files</p> <p>The final version of the schema files will be uploaded around mid-November. Please note that the file available on this page is currently a beta version and may undergo minor changes before its final release.</p> <p>This page presents a human readable version of the Setup dataset JSON Schema that can be downloaded here</p> Schema Docs Type: object No Additional Properties $schema Required root  $schemaType: string <p>Must be at least <code>1</code> characters long</p> version Required root  versionType: enum (of string) Must be one of: <ul><li>\"4.0.0-Dev\"</li></ul> scenario Required root  scenarioType: enum (of string) Must be one of: <ul><li>\"General Weld\"</li><li>\"General Mapping\"</li></ul> groups Required root  groupsType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups itemsType: object No Additional Properties id Required root  groups groups items idType: integer <p>Value must be greater or equal to <code>0</code></p> name root  groups groups items nameType: string Same definition as $schema usage root  groups groups items usageType: string Same definition as $schema datasets root  groups groups items datasetsType: array <p>Must contain a minimum of <code>1</code> items</p> No Additional ItemsEach item of this array must be: root  groups groups items datasets datasets items Any of <ul><li> defAscanAmplitude </li><li> defAscanStatus </li><li> defTfmValue </li><li> defTfmStatus </li><li> defFiringSource </li><li> defCscanPeak </li><li> defCscanTime </li><li> defCscanStatus </li></ul> root  groups groups items datasets datasets items anyOf defAscanAmplitudeType: object <p>Ascan Amplitude</p> No Additional Properties id root  groups groups items datasets datasets items anyOf item 0 idType: integer Same definition as id name root  groups groups items datasets datasets items anyOf item 0 nameType: string Same definition as $schema dataTransformations root  groups groups items datasets datasets items anyOf item 0 dataTransformationsType: array No Additional ItemsTuple Validation Item at 1 must be: root  groups groups items datasets datasets items anyOf item 0 dataTransformations dataTransformations item 0Type: object No Additional Properties processId Required root  groups groups items datasets datasets items anyOf item 0 dataTransformations dataTransformations item 0 processIdType: integer Same definition as id groupId root  groups groups items datasets datasets items anyOf item 0 dataTransformations dataTransformations item 0 groupIdType: integer Same definition as id dataClass root  groups groups items datasets datasets items anyOf item 0 dataClassType: enum (of string) Must be one of: <ul><li>\"AScanAmplitude\"</li></ul> storageMode root  groups groups items datasets datasets items anyOf item 0 storageModeType: enum (of string) Must be one of: <ul><li>\"Independent\"</li><li>\"Paintbrush\"</li></ul> dataValue Required root  groups groups items datasets datasets items anyOf item 0 dataValueType: object No Additional Properties min Required root  groups groups items datasets datasets items anyOf item 0 dataValue minType: number max Required root  groups groups items datasets datasets items anyOf item 0 dataValue maxType: number unitMin Required root  groups groups items datasets datasets items anyOf item 0 dataValue unitMinType: number unitMax Required root  groups groups items datasets datasets items anyOf item 0 dataValue unitMaxType: number unit Required root  groups groups items datasets datasets items anyOf item 0 dataValue unitType: enum (of string) Must be one of: <ul><li>\"Percent\"</li></ul> path root  groups groups items datasets datasets items anyOf item 0 pathType: string dimensions Required root  groups groups items datasets datasets items anyOf item 0 dimensionsType: array <p>Must contain a minimum of <code>3</code> items</p><p>Must contain a maximum of <code>3</code> items</p><p>All items must be unique</p> No Additional ItemsTuple Validation Item at 1 must be: root  groups groups items datasets datasets items anyOf item 0 dimensions uCoordinateType: object No Additional Properties id root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 0 idType: integer Same definition as id axis Required root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 0 axisType: enum (of string) Must be one of: <ul><li>\"UCoordinate\"</li></ul> quantity Required root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 0 quantityType: integer <p>Value must be greater or equal to <code>1</code></p> resolution Required root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 0 resolutionType: number <p>Value must be greater or equal to <code>0</code></p> offset root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 0 offsetType: number motionDeviceId root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 0 motionDeviceIdType: integer Same definition as id name root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 0 nameType: string Same definition as $schema lastCellRewrited root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 0 lastCellRewritedType: integer <p>When the acquisition has been done in Time mode (no encoder) this axis is a circular buffer in which the first position is given in lastCellRewrited</p> <p>Value must be greater or equal to <code>0</code></p> Item at 2 must be: root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 1 One of <ul><li> vCoordinate </li><li> beam </li></ul> root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 1 oneOf vCoordinateType: object <p>Paintbrush storageMode</p> No Additional Properties id root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 1 oneOf item 0 idType: integer Same definition as id axis Required root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 1 oneOf item 0 axisType: enum (of string) Must be one of: <ul><li>\"VCoordinate\"</li></ul> quantity Required root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 1 oneOf item 0 quantityType: integer Same definition as quantity resolution Required root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 1 oneOf item 0 resolutionType: number Same definition as resolution offset root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 1 oneOf item 0 offsetType: number Same definition as offset motionDeviceId root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 1 oneOf item 0 motionDeviceIdType: integer Same definition as motionDeviceId name root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 1 oneOf item 0 nameType: string Same definition as $schema root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 1 oneOf beamType: object <p>Independent storageMode</p> No Additional Properties axis Required root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 1 oneOf item 1 axisType: enum (of string) Must be one of: <ul><li>\"Beam\"</li></ul> beams Required root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 1 oneOf item 1 beamsType: array <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsTuple Validation Item at 1 must be: root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 1 oneOf item 1 beams beams item 0Type: object No Additional Properties id root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 1 oneOf item 1 beams beams item 0 idType: integer Same definition as id velocity Required root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 1 oneOf item 1 beams beams item 0 velocityType: number <p>Value must be greater or equal to <code>0</code></p> skewAngle Required root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 1 oneOf item 1 beams beams item 0 skewAngleType: number refractedAngle Required root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 1 oneOf item 1 beams beams item 0 refractedAngleType: number Same definition as skewAngle uCoordinateOffset Required root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 1 oneOf item 1 beams beams item 0 uCoordinateOffsetType: number Same definition as offset vCoordinateOffset Required root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 1 oneOf item 1 beams beams item 0 vCoordinateOffsetType: number Same definition as offset ultrasoundOffset Required root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 1 oneOf item 1 beams beams item 0 ultrasoundOffsetType: number Same definition as offset Item at 3 must be: root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 2 One of <ul><li> ultrasound </li><li> stackedAScan </li></ul> root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 2 oneOf ultrasoundType: object No Additional Properties id root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 2 oneOf item 0 idType: integer Same definition as id axis Required root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 2 oneOf item 0 axisType: enum (of string) Must be one of: <ul><li>\"Ultrasound\"</li></ul> quantity Required root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 2 oneOf item 0 quantityType: integer Same definition as quantity resolution Required root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 2 oneOf item 0 resolutionType: number Same definition as resolution offset root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 2 oneOf item 0 offsetType: number Same definition as offset root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 2 oneOf stackedAScanType: object No Additional Properties id root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 2 oneOf item 1 idType: integer Same definition as id axis Required root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 2 oneOf item 1 axisType: enum (of string) Must be one of: <ul><li>\"StackedAScan\"</li></ul> quantity Required root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 2 oneOf item 1 quantityType: integer Same definition as quantity resolution Required root  groups groups items datasets datasets items anyOf item 0 dimensions dimensions item 2 oneOf item 1 resolutionType: number Same definition as resolution root  groups groups items datasets datasets items anyOf defAscanStatusType: object <p>Ascan Status</p> No Additional Properties id root  groups groups items datasets datasets items anyOf item 1 idType: integer Same definition as id dataClass root  groups groups items datasets datasets items anyOf item 1 dataClassType: enum (of string) Must be one of: <ul><li>\"AScanStatus\"</li></ul> name root  groups groups items datasets datasets items anyOf item 1 nameType: string Same definition as $schema dataTransformations root  groups groups items datasets datasets items anyOf item 1 dataTransformationsType: array Same definition as dataTransformations storageMode root  groups groups items datasets datasets items anyOf item 1 storageModeType: enum (of string) Same definition as storageMode dataValue Required root  groups groups items datasets datasets items anyOf item 1 dataValueType: object No Additional Properties unit Required root  groups groups items datasets datasets items anyOf item 1 dataValue unitType: enum (of string) Must be one of: <ul><li>\"Bitfield\"</li></ul> hasData Required root  groups groups items datasets datasets items anyOf item 1 dataValue hasDataType: integer <p>Value must be greater or equal to <code>1</code></p> noSynchro root  groups groups items datasets datasets items anyOf item 1 dataValue noSynchroType: integer <p>Value must be greater or equal to <code>1</code></p> saturated root  groups groups items datasets datasets items anyOf item 1 dataValue saturatedType: integer <p>Value must be greater or equal to <code>1</code></p> path root  groups groups items datasets datasets items anyOf item 1 pathType: string dimensions Required root  groups groups items datasets datasets items anyOf item 1 dimensionsType: array <p>Must contain a minimum of <code>2</code> items</p><p>Must contain a maximum of <code>2</code> items</p><p>All items must be unique</p> No Additional ItemsTuple Validation Item at 1 must be: root  groups groups items datasets datasets items anyOf item 1 dimensions uCoordinateType: object Same definition as groups_items_datasets_items_anyOf_i0_dimensions_items_i0 Item at 2 must be: root  groups groups items datasets datasets items anyOf item 1 dimensions dimensions item 1 One of <ul><li> vCoordinate </li><li> beam </li></ul> root  groups groups items datasets datasets items anyOf item 1 dimensions dimensions item 1 oneOf vCoordinateType: object Same definition as groups_items_datasets_items_anyOf_i0_dimensions_items_i1_oneOf_i0 root  groups groups items datasets datasets items anyOf item 1 dimensions dimensions item 1 oneOf beamType: object Same definition as groups_items_datasets_items_anyOf_i0_dimensions_items_i1_oneOf_i1 root  groups groups items datasets datasets items anyOf defTfmValueType: object <p>TFM Value</p> No Additional Properties id root  groups groups items datasets datasets items anyOf item 2 idType: integer Same definition as id name root  groups groups items datasets datasets items anyOf item 2 nameType: string Same definition as $schema dataTransformations root  groups groups items datasets datasets items anyOf item 2 dataTransformationsType: array Same definition as dataTransformations dataClass root  groups groups items datasets datasets items anyOf item 2 dataClassType: enum (of string) Must be one of: <ul><li>\"TfmValue\"</li></ul> storageMode root  groups groups items datasets datasets items anyOf item 2 storageModeType: enum (of string) Same definition as storageMode dataValue Required root  groups groups items datasets datasets items anyOf item 2 dataValueType: object No Additional Properties min Required root  groups groups items datasets datasets items anyOf item 2 dataValue minType: number max Required root  groups groups items datasets datasets items anyOf item 2 dataValue maxType: number unitMin Required root  groups groups items datasets datasets items anyOf item 2 dataValue unitMinType: number unitMax Required root  groups groups items datasets datasets items anyOf item 2 dataValue unitMaxType: number unit Required root  groups groups items datasets datasets items anyOf item 2 dataValue unitType: enum (of string) Must be one of: <ul><li>\"Coherence\"</li><li>\"Percent\"</li></ul> path Required root  groups groups items datasets datasets items anyOf item 2 pathType: string dimensions Required root  groups groups items datasets datasets items anyOf item 2 dimensionsType: array <p>Must contain a minimum of <code>3</code> items</p><p>Must contain a maximum of <code>3</code> items</p><p>All items must be unique</p> No Additional ItemsTuple Validation Item at 1 must be: root  groups groups items datasets datasets items anyOf item 2 dimensions uCoordinateType: object Same definition as groups_items_datasets_items_anyOf_i0_dimensions_items_i0 Item at 2 must be: root  groups groups items datasets datasets items anyOf item 2 dimensions vCoordinateType: object Same definition as groups_items_datasets_items_anyOf_i0_dimensions_items_i1_oneOf_i0 Item at 3 must be: root  groups groups items datasets datasets items anyOf item 2 dimensions wCoordinateType: object No Additional Properties id root  groups groups items datasets datasets items anyOf item 2 dimensions dimensions item 2 idType: integer Same definition as id axis Required root  groups groups items datasets datasets items anyOf item 2 dimensions dimensions item 2 axisType: enum (of string) Must be one of: <ul><li>\"WCoordinate\"</li></ul> quantity Required root  groups groups items datasets datasets items anyOf item 2 dimensions dimensions item 2 quantityType: integer Same definition as quantity resolution Required root  groups groups items datasets datasets items anyOf item 2 dimensions dimensions item 2 resolutionType: number Same definition as resolution offset root  groups groups items datasets datasets items anyOf item 2 dimensions dimensions item 2 offsetType: number Same definition as offset root  groups groups items datasets datasets items anyOf defTfmStatusType: object <p>TFM Status</p> No Additional Properties id root  groups groups items datasets datasets items anyOf item 3 idType: integer Same definition as id dataClass root  groups groups items datasets datasets items anyOf item 3 dataClassType: enum (of string) Must be one of: <ul><li>\"TfmStatus\"</li></ul> name root  groups groups items datasets datasets items anyOf item 3 nameType: string Same definition as $schema dataTransformations root  groups groups items datasets datasets items anyOf item 3 dataTransformationsType: array Same definition as dataTransformations storageMode root  groups groups items datasets datasets items anyOf item 3 storageModeType: enum (of string) Same definition as storageMode dataValue Required root  groups groups items datasets datasets items anyOf item 3 dataValueType: object No Additional Properties unit Required root  groups groups items datasets datasets items anyOf item 3 dataValue unitType: enum (of string) Must be one of: <ul><li>\"Bitfield\"</li></ul> hasData Required root  groups groups items datasets datasets items anyOf item 3 dataValue hasDataType: integer <p>Value must be greater or equal to <code>1</code></p> noSynchro root  groups groups items datasets datasets items anyOf item 3 dataValue noSynchroType: integer <p>Value must be greater or equal to <code>1</code></p> saturated root  groups groups items datasets datasets items anyOf item 3 dataValue saturatedType: integer <p>Value must be greater or equal to <code>1</code></p> path root  groups groups items datasets datasets items anyOf item 3 pathType: string dimensions Required root  groups groups items datasets datasets items anyOf item 3 dimensionsType: array <p>Must contain a minimum of <code>2</code> items</p><p>Must contain a maximum of <code>2</code> items</p><p>All items must be unique</p> No Additional ItemsTuple Validation Item at 1 must be: root  groups groups items datasets datasets items anyOf item 3 dimensions uCoordinateType: object Same definition as groups_items_datasets_items_anyOf_i0_dimensions_items_i0 Item at 2 must be: root  groups groups items datasets datasets items anyOf item 3 dimensions vCoordinateType: object Same definition as groups_items_datasets_items_anyOf_i0_dimensions_items_i1_oneOf_i0 root  groups groups items datasets datasets items anyOf defFiringSourceType: object <p>Firing Source</p> No Additional Properties id root  groups groups items datasets datasets items anyOf item 4 idType: integer Same definition as id dataClass root  groups groups items datasets datasets items anyOf item 4 dataClassType: enum (of string) Must be one of: <ul><li>\"FiringSource\"</li></ul> name root  groups groups items datasets datasets items anyOf item 4 nameType: string Same definition as $schema dataTransformations root  groups groups items datasets datasets items anyOf item 4 dataTransformationsType: array Same definition as dataTransformations storageMode root  groups groups items datasets datasets items anyOf item 4 storageModeType: enum (of string) Same definition as storageMode dataValue Required root  groups groups items datasets datasets items anyOf item 4 dataValueType: object No Additional Properties min Required root  groups groups items datasets datasets items anyOf item 4 dataValue minType: number max Required root  groups groups items datasets datasets items anyOf item 4 dataValue maxType: number unit Required root  groups groups items datasets datasets items anyOf item 4 dataValue unitType: enum (of string) Must be one of: <ul><li>\"BeamId\"</li><li>\"ColumnId\"</li></ul> path root  groups groups items datasets datasets items anyOf item 4 pathType: string dimensions Required root  groups groups items datasets datasets items anyOf item 4 dimensionsType: array <p>Must contain a minimum of <code>2</code> items</p><p>Must contain a maximum of <code>2</code> items</p><p>All items must be unique</p> No Additional ItemsTuple Validation Item at 1 must be: root  groups groups items datasets datasets items anyOf item 4 dimensions uCoordinateType: object Same definition as groups_items_datasets_items_anyOf_i0_dimensions_items_i0 Item at 2 must be: root  groups groups items datasets datasets items anyOf item 4 dimensions vCoordinateType: object Same definition as groups_items_datasets_items_anyOf_i0_dimensions_items_i1_oneOf_i0 root  groups groups items datasets datasets items anyOf defCscanPeakType: object <p>C-Scan Peak</p> No Additional Properties id root  groups groups items datasets datasets items anyOf item 5 idType: integer Same definition as id dataClass root  groups groups items datasets datasets items anyOf item 5 dataClassType: enum (of string) Must be one of: <ul><li>\"CScanPeak\"</li></ul> name root  groups groups items datasets datasets items anyOf item 5 nameType: string Same definition as $schema dataTransformations root  groups groups items datasets datasets items anyOf item 5 dataTransformationsType: array Same definition as dataTransformations storageMode root  groups groups items datasets datasets items anyOf item 5 storageModeType: enum (of string) Same definition as storageMode dataValue Required root  groups groups items datasets datasets items anyOf item 5 dataValueType: object No Additional Properties min Required root  groups groups items datasets datasets items anyOf item 5 dataValue minType: number max Required root  groups groups items datasets datasets items anyOf item 5 dataValue maxType: number unitMin Required root  groups groups items datasets datasets items anyOf item 5 dataValue unitMinType: number unitMax Required root  groups groups items datasets datasets items anyOf item 5 dataValue unitMaxType: number unit Required root  groups groups items datasets datasets items anyOf item 5 dataValue unitType: enum (of string) Must be one of: <ul><li>\"Percent\"</li></ul> path root  groups groups items datasets datasets items anyOf item 5 pathType: string dimensions Required root  groups groups items datasets datasets items anyOf item 5 dimensionsType: array <p>Must contain a minimum of <code>3</code> items</p><p>Must contain a maximum of <code>3</code> items</p><p>All items must be unique</p> No Additional ItemsTuple Validation Item at 1 must be: root  groups groups items datasets datasets items anyOf item 5 dimensions uCoordinateType: object Same definition as groups_items_datasets_items_anyOf_i0_dimensions_items_i0 Item at 2 must be: root  groups groups items datasets datasets items anyOf item 5 dimensions vCoordinateType: object Same definition as groups_items_datasets_items_anyOf_i0_dimensions_items_i1_oneOf_i0 Item at 3 must be: root  groups groups items datasets datasets items anyOf item 5 dimensions wCoordinateType: object Same definition as groups_items_datasets_items_anyOf_i2_dimensions_items_i2 root  groups groups items datasets datasets items anyOf defCscanTimeType: object <p>C-Scan Time</p> No Additional Properties id root  groups groups items datasets datasets items anyOf item 6 idType: integer Same definition as id dataClass root  groups groups items datasets datasets items anyOf item 6 dataClassType: enum (of string) Must be one of: <ul><li>\"CScanTime\"</li></ul> name root  groups groups items datasets datasets items anyOf item 6 nameType: string Same definition as $schema dataTransformations root  groups groups items datasets datasets items anyOf item 6 dataTransformationsType: array Same definition as dataTransformations storageMode root  groups groups items datasets datasets items anyOf item 6 storageModeType: enum (of string) Same definition as storageMode dataValue Required root  groups groups items datasets datasets items anyOf item 6 dataValueType: object No Additional Properties min Required root  groups groups items datasets datasets items anyOf item 6 dataValue minType: number max Required root  groups groups items datasets datasets items anyOf item 6 dataValue maxType: number unitMin Required root  groups groups items datasets datasets items anyOf item 6 dataValue unitMinType: number unitMax Required root  groups groups items datasets datasets items anyOf item 6 dataValue unitMaxType: number unit Required root  groups groups items datasets datasets items anyOf item 6 dataValue unitType: enum (of string) Must be one of: <ul><li>\"Seconds\"</li></ul> path root  groups groups items datasets datasets items anyOf item 6 pathType: string dimensions Required root  groups groups items datasets datasets items anyOf item 6 dimensionsType: array <p>Must contain a minimum of <code>3</code> items</p><p>Must contain a maximum of <code>3</code> items</p><p>All items must be unique</p> No Additional ItemsTuple Validation Item at 1 must be: root  groups groups items datasets datasets items anyOf item 6 dimensions uCoordinateType: object Same definition as groups_items_datasets_items_anyOf_i0_dimensions_items_i0 Item at 2 must be: root  groups groups items datasets datasets items anyOf item 6 dimensions vCoordinateType: object Same definition as groups_items_datasets_items_anyOf_i0_dimensions_items_i1_oneOf_i0 Item at 3 must be: root  groups groups items datasets datasets items anyOf item 6 dimensions wCoordinateType: object Same definition as groups_items_datasets_items_anyOf_i2_dimensions_items_i2 root  groups groups items datasets datasets items anyOf defCscanStatusType: object <p>C-Scan Status</p> No Additional Properties id root  groups groups items datasets datasets items anyOf item 7 idType: integer Same definition as id dataClass root  groups groups items datasets datasets items anyOf item 7 dataClassType: enum (of string) Must be one of: <ul><li>\"CScanStatus\"</li></ul> name root  groups groups items datasets datasets items anyOf item 7 nameType: string Same definition as $schema dataTransformations root  groups groups items datasets datasets items anyOf item 7 dataTransformationsType: array Same definition as dataTransformations storageMode root  groups groups items datasets datasets items anyOf item 7 storageModeType: enum (of string) Same definition as storageMode dataValue Required root  groups groups items datasets datasets items anyOf item 7 dataValueType: object No Additional Properties unit Required root  groups groups items datasets datasets items anyOf item 7 dataValue unitType: enum (of string) Must be one of: <ul><li>\"Bitfield\"</li></ul> hasData Required root  groups groups items datasets datasets items anyOf item 7 dataValue hasDataType: integer <p>Value must be greater or equal to <code>1</code></p> noSynchro root  groups groups items datasets datasets items anyOf item 7 dataValue noSynchroType: integer <p>Value must be greater or equal to <code>1</code></p> saturated root  groups groups items datasets datasets items anyOf item 7 dataValue saturatedType: integer <p>Value must be greater or equal to <code>1</code></p> path root  groups groups items datasets datasets items anyOf item 7 pathType: string dimensions Required root  groups groups items datasets datasets items anyOf item 7 dimensionsType: array <p>Must contain a minimum of <code>3</code> items</p><p>Must contain a maximum of <code>3</code> items</p><p>All items must be unique</p> No Additional ItemsTuple Validation Item at 1 must be: root  groups groups items datasets datasets items anyOf item 7 dimensions uCoordinateType: object Same definition as groups_items_datasets_items_anyOf_i0_dimensions_items_i0 Item at 2 must be: root  groups groups items datasets datasets items anyOf item 7 dimensions vCoordinateType: object Same definition as groups_items_datasets_items_anyOf_i0_dimensions_items_i1_oneOf_i0 Item at 3 must be: root  groups groups items datasets datasets items anyOf item 7 dimensions wCoordinateType: object Same definition as groups_items_datasets_items_anyOf_i2_dimensions_items_i2 processes root  groups groups items processesType: array <p>Must contain a minimum of <code>1</code> items</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items Any of <ul><li> defUltrasonicConventional </li><li> defUltrasonicPhasedArray </li><li> defUltrasonicMatrixCapture </li><li> defTotalFocusingMethod </li><li> defGain </li><li> defSinglePositionGates </li><li> defMultiPositionGates </li><li> defTcg </li><li> defThickness </li><li> defTfmBoxGates </li></ul> root  groups groups items processes processes items anyOf defUltrasonicConventionalType: object <p>Conventional Ultrasonic</p> One of <ul><li> Option 1 </li><li> Option 2 </li><li> Option 3 </li></ul> root  groups groups items processes processes items anyOf item 0 oneOf item 0Type: object <p>Pulse Echo</p> No Additional Properties id Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 idType: integer Same definition as id inputs Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 inputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 0 oneOf item 0 inputs defProcessInputType: object No Additional Properties processId Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 inputs inputs items processIdType: integer Same definition as id groupId root  groups groups items processes processes items anyOf item 0 oneOf item 0 inputs inputs items groupIdType: integer Same definition as id outputs Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 outputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 0 oneOf item 0 outputs defProcessOutputType: object No Additional Properties id Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 outputs outputs items idType: integer Same definition as id datasetId root  groups groups items processes processes items anyOf item 0 oneOf item 0 outputs outputs items datasetIdType: integer Same definition as id dataClass root  groups groups items processes processes items anyOf item 0 oneOf item 0 outputs outputs items dataClassType: enum (of string) Must be one of: <ul><li>\"AScanAmplitude\"</li><li>\"AScanStatus\"</li><li>\"FiringSource\"</li><li>\"TfmValue\"</li><li>\"TfmStatus\"</li><li>\"ElementaryAscan\"</li><li>\"CScanPeak\"</li><li>\"CScanTime\"</li><li>\"CScanStatus\"</li></ul> parameters root  groups groups items processes processes items anyOf item 0 oneOf item 0 outputs outputs items parameters Any of <ul><li> defGateOutputParameters </li></ul> root  groups groups items processes processes items anyOf item 0 oneOf item 0 outputs outputs items parameters anyOf defGateOutputParametersType: object No Additional Properties gateId Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 outputs outputs items parameters anyOf item 0 gateIdType: integer Same definition as id gateDetection root  groups groups items processes processes items anyOf item 0 oneOf item 0 outputs outputs items parameters anyOf item 0 gateDetectionType: enum (of string) Must be one of: <ul><li>\"Crossing\"</li><li>\"MaximumPeak\"</li><li>\"FirstPeak\"</li><li>\"LastPeak\"</li></ul> dataMappingId root  groups groups items processes processes items anyOf item 0 oneOf item 0 dataMappingIdType: integer Same definition as id implementation Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 implementationType: enum (of string) Must be one of: <ul><li>\"Hardware\"</li></ul> ultrasonicConventional Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventionalType: object No Additional Properties pulseEcho Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional pulseEchoType: object probeId root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional pulseEcho probeId Any of <ul><li> id </li><li> id </li></ul> root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional pulseEcho probeId anyOf idType: integer <p>Conventional Round Probe Id</p> Same definition as id root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional pulseEcho probeId anyOf idType: integer <p>Conventional Rectangular Probe Id</p> Same definition as id waveMode Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional waveModeType: enum (of string) Must be one of: <ul><li>\"Longitudinal\"</li><li>\"TransversalVertical\"</li></ul> velocity Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional velocityType: number Same definition as velocity wedgeDelay Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional wedgeDelayType: number <p>Value must be greater or equal to <code>0</code></p> rectification Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional rectificationType: enum (of string) Must be one of: <ul><li>\"None\"</li><li>\"Positive\"</li><li>\"Negative\"</li><li>\"Full\"</li></ul> ascanSynchroMode root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional ascanSynchroModeType: enum (of string) Must be one of: <ul><li>\"Pulse\"</li><li>\"SynchroGateRelative\"</li></ul> ascanCompressionFactor root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional ascanCompressionFactorType: integer <p>Value must be greater or equal to <code>1</code></p> gain root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional gainType: number ultrasoundMode root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional ultrasoundModeType: enum (of string) Must be one of: <ul><li>\"TrueDepth\"</li><li>\"SoundPath\"</li><li>\"Time\"</li></ul> referenceAmplitude root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional referenceAmplitudeType: number referenceGain root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional referenceGainType: number Same definition as gain digitalBandPassFilter root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional digitalBandPassFilterType: object No Additional Properties filterType Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional digitalBandPassFilter filterTypeType: enum (of string) Must be one of: <ul><li>\"None\"</li><li>\"LowPass\"</li><li>\"HighPass\"</li><li>\"BandPass\"</li></ul> highCutOffFrequency Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional digitalBandPassFilter highCutOffFrequencyType: number <p>Value must be greater or equal to <code>0</code></p> lowCutOffFrequency Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional digitalBandPassFilter lowCutOffFrequencyType: number Same definition as highCutOffFrequency characteristic Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional digitalBandPassFilter characteristicType: enum (of string) Must be one of: <ul><li>\"None\"</li><li>\"TOFD\"</li></ul> smoothingFilter root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional smoothingFilterType: number Same definition as highCutOffFrequency averagingFactor root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional averagingFactorType: integer <p>Value must be greater or equal to <code>1</code></p> digitizingFrequency root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional digitizingFrequencyType: number Same definition as highCutOffFrequency pulse root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional pulseType: object width Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional pulse widthType: number <p>Value must be greater or equal to <code>0</code></p> voltage Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional pulse voltageType: number <p>Value must be greater or equal to <code>0</code></p> polarity root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional pulse polarityType: enum (of string) Must be one of: <ul><li>\"Bipolar\"</li><li>\"UnipolarPositive\"</li><li>\"UnipolarNegative\"</li></ul> Additional Properties <p>Additional Properties of any type are allowed.</p> root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional pulse additionalPropertiesType: object beams Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional beamsType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>Must contain a maximum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional beams beams itemsType: object No Additional Properties id Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional beams beams items idType: integer Same definition as id refractedAngle Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional beams beams items refractedAngleType: number Same definition as skewAngle ascanStart Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional beams beams items ascanStartType: number ascanLength Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional beams beams items ascanLengthType: number <p>Value must be greater or equal to <code>0</code></p> tcg root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional beams beams items tcgType: object No Additional Properties synchroMode root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional beams beams items tcg synchroModeType: enum (of string) Must be one of: <ul><li>\"Pulse\"</li><li>\"AscanSynchroRelative\"</li></ul> points Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional beams beams items tcg pointsType: array of object <p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional beams beams items tcg points points itemsType: object No Additional Properties time Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional beams beams items tcg points points items timeType: number gain Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional beams beams items tcg points points items gainType: number Same definition as gain recurrence root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional beams beams items recurrenceType: number <p>Value must be greater or equal to <code>0</code></p> uCoordinateOffset root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional beams beams items uCoordinateOffsetType: number Same definition as offset vCoordinateOffset root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional beams beams items vCoordinateOffsetType: number Same definition as offset gates root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional gatesType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional gates gates itemsType: object No Additional Properties id Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional gates gates items idType: integer Same definition as id name root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional gates gates items nameType: string <p>Must be at least <code>1</code> characters long</p> geometry root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional gates gates items geometryType: enum (of string) Must be one of: <ul><li>\"SoundPath\"</li><li>\"TrueDepth\"</li></ul> start Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional gates gates items startType: number length Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional gates gates items lengthType: number <p>Value must be greater or equal to <code>0</code></p> threshold Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional gates gates items thresholdType: number thresholdPolarity Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional gates gates items thresholdPolarityType: enum (of string) Must be one of: <ul><li>\"Absolute\"</li><li>\"Positive\"</li><li>\"Negative\"</li></ul> synchronization Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional gates gates items synchronizationType: object mode root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional gates gates items synchronization modeType: enum (of string) Must be one of: <ul><li>\"Pulse\"</li><li>\"GateRelative\"</li></ul> triggeringEvent root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional gates gates items synchronization triggeringEventType: enum (of string) Must be one of: <ul><li>\"Peak\"</li><li>\"Crossing\"</li></ul> gateId root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional gates gates items synchronization gateIdType: integer Same definition as id calibrationStates root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional calibrationStatesType: array <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional calibrationStates calibrationStates items Any of <ul><li> Option 1 </li><li> Option 2 </li><li> Option 3 </li><li> Option 4 </li><li> Option 5 </li><li> Option 6 </li><li> Option 7 </li></ul> root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional calibrationStates calibrationStates items anyOf item 0Type: object sensitivityCalibration root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional calibrationStates calibrationStates items anyOf item 0 sensitivityCalibrationType: object No Additional Properties calibrated Required root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional calibrationStates calibrationStates items anyOf item 0 sensitivityCalibration calibratedType: boolean root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional calibrationStates calibrationStates items anyOf item 1Type: object tcgCalibration root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional calibrationStates calibrationStates items anyOf item 1 tcgCalibrationType: object Same definition as sensitivityCalibration root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional calibrationStates calibrationStates items anyOf item 2Type: object velocityCalibration root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional calibrationStates calibrationStates items anyOf item 2 velocityCalibrationType: object Same definition as sensitivityCalibration root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional calibrationStates calibrationStates items anyOf item 3Type: object wedgeDelayCalibration root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional calibrationStates calibrationStates items anyOf item 3 wedgeDelayCalibrationType: object Same definition as sensitivityCalibration root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional calibrationStates calibrationStates items anyOf item 4Type: object dacCalibration root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional calibrationStates calibrationStates items anyOf item 4 dacCalibrationType: object Same definition as sensitivityCalibration root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional calibrationStates calibrationStates items anyOf item 5Type: object dgsCalibration root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional calibrationStates calibrationStates items anyOf item 5 dgsCalibrationType: object Same definition as sensitivityCalibration root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional calibrationStates calibrationStates items anyOf item 6Type: object tofdWedgeDelayCalibration root  groups groups items processes processes items anyOf item 0 oneOf item 0 ultrasonicConventional calibrationStates calibrationStates items anyOf item 6 tofdWedgeDelayCalibrationType: object Same definition as sensitivityCalibration root  groups groups items processes processes items anyOf item 0 oneOf item 1Type: object <p>Pitch Catch</p> No Additional Properties id Required root  groups groups items processes processes items anyOf item 0 oneOf item 1 idType: integer Same definition as id inputs Required root  groups groups items processes processes items anyOf item 0 oneOf item 1 inputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 0 oneOf item 1 inputs defProcessInputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_inputs_items outputs Required root  groups groups items processes processes items anyOf item 0 oneOf item 1 outputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 0 oneOf item 1 outputs defProcessOutputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_outputs_items dataMappingId root  groups groups items processes processes items anyOf item 0 oneOf item 1 dataMappingIdType: integer Same definition as id implementation Required root  groups groups items processes processes items anyOf item 0 oneOf item 1 implementationType: enum (of string) Must be one of: <ul><li>\"Hardware\"</li></ul> datasetIds root  groups groups items processes processes items anyOf item 0 oneOf item 1 datasetIdsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 0 oneOf item 1 datasetIds defUniqueIdType: integer Same definition as id ultrasonicConventional Required root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventionalType: object No Additional Properties pitchCatch Required root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional pitchCatchType: object pulserProbeId root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional pitchCatch pulserProbeId Any of <ul><li> id </li><li> id </li></ul> root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional pitchCatch pulserProbeId anyOf idType: integer <p>Conventional Round Probe Id</p> Same definition as defUniqueId root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional pitchCatch pulserProbeId anyOf idType: integer <p>Conventional Rectangular Probe Id</p> Same definition as defUniqueId receiverProbeId root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional pitchCatch receiverProbeId Any of <ul><li> id </li><li> id </li></ul> root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional pitchCatch receiverProbeId anyOf idType: integer <p>Conventional Round Probe Id</p> Same definition as defUniqueId root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional pitchCatch receiverProbeId anyOf idType: integer <p>Conventional Rectangular Probe Id</p> Same definition as defUniqueId waveMode Required root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional waveModeType: enum (of string) Same definition as waveMode velocity Required root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional velocityType: number Same definition as velocity wedgeDelay Required root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional wedgeDelayType: number <p>Value must be greater or equal to <code>0</code></p> rectification Required root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional rectificationType: enum (of string) Same definition as rectification ascanSynchroMode root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional ascanSynchroModeType: enum (of string) Same definition as ascanSynchroMode ascanCompressionFactor root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional ascanCompressionFactorType: integer Same definition as ascanCompressionFactor gain root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional gainType: number Same definition as gain ultrasoundMode root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional ultrasoundModeType: enum (of string) Same definition as ultrasoundMode referenceAmplitude root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional referenceAmplitudeType: number Same definition as referenceAmplitude referenceGain root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional referenceGainType: number Same definition as gain digitalBandPassFilter root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional digitalBandPassFilterType: object Same definition as digitalBandPassFilter smoothingFilter root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional smoothingFilterType: number Same definition as highCutOffFrequency averagingFactor root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional averagingFactorType: integer Same definition as averagingFactor digitizingFrequency root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional digitizingFrequencyType: number Same definition as highCutOffFrequency pulse root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional pulseType: object Same definition as pulse beams Required root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional beamsType: array of object Same definition as beams gates root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional gatesType: array of object Same definition as gates calibrationStates root  groups groups items processes processes items anyOf item 0 oneOf item 1 ultrasonicConventional calibrationStatesType: array Same definition as calibrationStates root  groups groups items processes processes items anyOf item 0 oneOf item 2Type: object <p>TOFD</p> No Additional Properties id Required root  groups groups items processes processes items anyOf item 0 oneOf item 2 idType: integer Same definition as id inputs Required root  groups groups items processes processes items anyOf item 0 oneOf item 2 inputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 0 oneOf item 2 inputs defProcessInputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_inputs_items outputs Required root  groups groups items processes processes items anyOf item 0 oneOf item 2 outputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 0 oneOf item 2 outputs defProcessOutputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_outputs_items dataMappingId root  groups groups items processes processes items anyOf item 0 oneOf item 2 dataMappingIdType: integer Same definition as id implementation Required root  groups groups items processes processes items anyOf item 0 oneOf item 2 implementationType: enum (of string) Must be one of: <ul><li>\"Hardware\"</li></ul> ultrasonicConventional Required root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventionalType: object No Additional Properties tofd Required root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional tofdType: object pulserProbeId root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional tofd pulserProbeId Any of <ul><li> id </li><li> id </li></ul> root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional tofd pulserProbeId anyOf idType: integer <p>Conventional Round Probe Id</p> Same definition as defUniqueId root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional tofd pulserProbeId anyOf idType: integer <p>Conventional Rectangular Probe Id</p> Same definition as defUniqueId receiverProbeId root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional tofd receiverProbeId Any of <ul><li> id </li><li> id </li></ul> root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional tofd receiverProbeId anyOf idType: integer <p>Conventional Round Probe Id</p> Same definition as defUniqueId root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional tofd receiverProbeId anyOf idType: integer <p>Conventional Rectangular Probe Id</p> Same definition as defUniqueId pcs root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional tofd pcsType: number <p>Value must be greater or equal to <code>0</code></p> waveMode Required root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional waveModeType: enum (of string) Same definition as waveMode velocity Required root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional velocityType: number Same definition as velocity wedgeDelay Required root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional wedgeDelayType: number <p>Value must be greater or equal to <code>0</code></p> rectification Required root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional rectificationType: enum (of string) Same definition as rectification ascanSynchroMode root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional ascanSynchroModeType: enum (of string) Same definition as ascanSynchroMode ascanCompressionFactor root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional ascanCompressionFactorType: integer Same definition as ascanCompressionFactor gain root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional gainType: number Same definition as gain ultrasoundMode root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional ultrasoundModeType: enum (of string) Same definition as ultrasoundMode referenceAmplitude root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional referenceAmplitudeType: number Same definition as referenceAmplitude referenceGain root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional referenceGainType: number Same definition as gain digitalBandPassFilter root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional digitalBandPassFilterType: object Same definition as digitalBandPassFilter smoothingFilter root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional smoothingFilterType: number Same definition as highCutOffFrequency averagingFactor root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional averagingFactorType: integer Same definition as averagingFactor digitizingFrequency root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional digitizingFrequencyType: number Same definition as highCutOffFrequency pulse root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional pulseType: object Same definition as pulse beams Required root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional beamsType: array of object Same definition as beams gates root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional gatesType: array of object Same definition as gates calibrationStates root  groups groups items processes processes items anyOf item 0 oneOf item 2 ultrasonicConventional calibrationStatesType: array Same definition as calibrationStates root  groups groups items processes processes items anyOf defUltrasonicPhasedArrayType: object <p>Phased Array Ultrasonic</p> One of <ul><li> Option 1 </li><li> Option 2 </li><li> Option 3 </li></ul> root  groups groups items processes processes items anyOf item 1 oneOf item 0Type: object <p>Pulse Echo</p> No Additional Properties id Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 idType: integer Same definition as id inputs Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 inputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 1 oneOf item 0 inputs defProcessInputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_inputs_items outputs Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 outputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 1 oneOf item 0 outputs defProcessOutputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_outputs_items dataMappingId root  groups groups items processes processes items anyOf item 1 oneOf item 0 dataMappingIdType: integer Same definition as id implementation Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 implementationType: enum (of string) Must be one of: <ul><li>\"Hardware\"</li></ul> ultrasonicPhasedArray Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArrayType: object No Additional Properties pulseEcho Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho One of <ul><li> Option 1 </li><li> Option 2 </li><li> Option 3 </li></ul> root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 0Type: object No Additional Properties probeId root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 0 probeIdType: integer <p>Phased Array Linear Probe Id</p> Same definition as id linearFormation Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 0 linearFormationType: object No Additional Properties probeFirstElementId Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 0 linearFormation probeFirstElementIdType: integer Same definition as id probeLastElementId Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 0 linearFormation probeLastElementIdType: integer Same definition as id elementStep Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 0 linearFormation elementStepType: number <p>Value must be greater or equal to <code>0</code></p> elementAperture Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 0 linearFormation elementApertureType: integer <p>Value must be greater or equal to <code>0</code></p> beamRefractedAngle Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 0 linearFormation beamRefractedAngleType: number Same definition as skewAngle root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 1Type: object No Additional Properties probeId root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 1 probeIdType: integer <p>Phased Array Linear Probe Id</p> Same definition as probeId sectorialFormation Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 1 sectorialFormationType: object No Additional Properties probeFirstElementId Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 1 sectorialFormation probeFirstElementIdType: integer Same definition as id elementAperture Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 1 sectorialFormation elementApertureType: integer <p>Value must be greater or equal to <code>0</code></p> beamRefractedAngles Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 1 sectorialFormation beamRefractedAnglesType: object No Additional Properties start Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 1 sectorialFormation beamRefractedAngles startType: number Same definition as skewAngle stop Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 1 sectorialFormation beamRefractedAngles stopType: number Same definition as skewAngle step Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 1 sectorialFormation beamRefractedAngles stepType: number <p>Value must be greater or equal to <code>0</code></p> root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 2Type: object No Additional Properties probeId root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 2 probeIdType: integer Same definition as probeId compoundFormation Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 2 compoundFormationType: object No Additional Properties probeFirstElementId Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 2 compoundFormation probeFirstElementIdType: integer Same definition as id probeLastElementId Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 2 compoundFormation probeLastElementIdType: integer Same definition as id elementAperture Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 2 compoundFormation elementApertureType: integer <p>Value must be greater or equal to <code>0</code></p> beamRefractedAngles Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 2 compoundFormation beamRefractedAnglesType: object No Additional Properties start Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 2 compoundFormation beamRefractedAngles startType: number Same definition as skewAngle stop Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 2 compoundFormation beamRefractedAngles stopType: number Same definition as skewAngle step Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseEcho oneOf item 2 compoundFormation beamRefractedAngles stepType: number <p>Value must be greater or equal to <code>0</code></p> waveMode Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray waveModeType: enum (of string) Same definition as waveMode velocity Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray velocityType: number Same definition as velocity pulse root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray pulseType: object Same definition as pulse focusing Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray focusingType: object No Additional Properties mode Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray focusing modeType: enum (of string) Must be one of: <ul><li>\"TrueDepth\"</li><li>\"HalfPath\"</li><li>\"Unfocused\"</li><li>\"Projection\"</li></ul> distance root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray focusing distanceType: number <p>Value must be greater or equal to <code>0</code></p> angle root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray focusing angleType: number Same definition as skewAngle beams Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray beamsType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray beams beams itemsType: object No Additional Properties id Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray beams beams items idType: integer Same definition as id skewAngle Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray beams beams items skewAngleType: number <p>Value must be greater or equal to <code>0</code></p> refractedAngle Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray beams beams items refractedAngleType: number Same definition as skewAngle beamDelay Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray beams beams items beamDelayType: number <p>Value must be greater or equal to <code>0</code></p> ascanStart Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray beams beams items ascanStartType: number Same definition as ascanStart ascanLength Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray beams beams items ascanLengthType: number Same definition as ascanLength gainOffset root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray beams beams items gainOffsetType: number Same definition as gain recurrence root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray beams beams items recurrenceType: number Same definition as recurrence sumGain root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray beams beams items sumGainType: number Same definition as gain sumGainMode root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray beams beams items sumGainModeType: enum (of string) Must be one of: <ul><li>\"Manual\"</li><li>\"Automatic\"</li></ul> tcg root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray beams beams items tcgType: object Same definition as tcg pulsers root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray beams beams items pulsersType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray beams beams items pulsers pulsers itemsType: object No Additional Properties id Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray beams beams items pulsers pulsers items idType: integer Same definition as id elementId Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray beams beams items pulsers pulsers items elementIdType: integer Same definition as id delay Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray beams beams items pulsers pulsers items delayType: number <p>Value must be greater or equal to <code>0</code></p> receivers root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray beams beams items receiversType: array of object Same definition as pulsers uCoordinateOffset root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray beams beams items uCoordinateOffsetType: number Same definition as offset vCoordinateOffset root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray beams beams items vCoordinateOffsetType: number Same definition as offset gates root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray gates One of <ul><li> defSinglePositionGates </li><li> defMultiPositionGates </li></ul> root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray gates oneOf defSinglePositionGatesType: array of object Same definition as gates root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray gates oneOf defMultiPositionGatesType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray gates oneOf item 1 item 1 itemsType: object No Additional Properties id Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray gates oneOf item 1 item 1 items idType: integer Same definition as id name root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray gates oneOf item 1 item 1 items nameType: string <p>Must be at least <code>1</code> characters long</p> geometry root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray gates oneOf item 1 item 1 items geometryType: enum (of string) Must be one of: <ul><li>\"SoundPath\"</li><li>\"TrueDepth\"</li></ul> starts Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray gates oneOf item 1 item 1 items startsType: array of number <p>Must contain a minimum of <code>1</code> items</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray gates oneOf item 1 item 1 items starts starts itemsType: number lengths Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray gates oneOf item 1 item 1 items lengthsType: array of number <p>Must contain a minimum of <code>1</code> items</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray gates oneOf item 1 item 1 items lengths lengths itemsType: number <p>Value must be greater or equal to <code>0</code></p> threshold Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray gates oneOf item 1 item 1 items thresholdType: number thresholdPolarity Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray gates oneOf item 1 item 1 items thresholdPolarityType: enum (of string) Must be one of: <ul><li>\"Absolute\"</li><li>\"Positive\"</li><li>\"Negative\"</li></ul> synchronization Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray gates oneOf item 1 item 1 items synchronizationType: object No Additional Properties mode Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray gates oneOf item 1 item 1 items synchronization modeType: enum (of string) Must be one of: <ul><li>\"Pulse\"</li><li>\"GateRelative\"</li></ul> triggeringEvent root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray gates oneOf item 1 item 1 items synchronization triggeringEventType: enum (of string) Must be one of: <ul><li>\"Peak\"</li><li>\"Crossing\"</li></ul> gateId root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray gates oneOf item 1 item 1 items synchronization gateIdType: integer Same definition as id rectification Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray rectificationType: enum (of string) Same definition as rectification digitizingFrequency root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray digitizingFrequencyType: number Same definition as highCutOffFrequency ascanSynchroMode root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray ascanSynchroModeType: enum (of string) Same definition as ascanSynchroMode ascanCompressionFactor root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray ascanCompressionFactorType: integer Same definition as ascanCompressionFactor gain root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray gainType: number Same definition as gain wedgeDelay root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray wedgeDelayType: number <p>Value must be greater or equal to <code>0</code></p> ultrasoundMode root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray ultrasoundModeType: enum (of string) Same definition as ultrasoundMode referenceAmplitude root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray referenceAmplitudeType: number Same definition as referenceAmplitude referenceGain root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray referenceGainType: number Same definition as gain digitalBandPassFilter root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray digitalBandPassFilterType: object Same definition as digitalBandPassFilter smoothingFilter root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray smoothingFilterType: number Same definition as highCutOffFrequency averagingFactor root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray averagingFactorType: integer Same definition as averagingFactor calibrationStates root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray calibrationStatesType: array Same definition as calibrationStates lawFile root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray lawFileType: object No Additional Properties filename Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray lawFile filenameType: string Same definition as $schema path Required root  groups groups items processes processes items anyOf item 1 oneOf item 0 ultrasonicPhasedArray lawFile pathType: string Same definition as $schema root  groups groups items processes processes items anyOf item 1 oneOf item 1Type: object <p>Pitch Catch</p> No Additional Properties id Required root  groups groups items processes processes items anyOf item 1 oneOf item 1 idType: integer Same definition as id inputs Required root  groups groups items processes processes items anyOf item 1 oneOf item 1 inputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 1 oneOf item 1 inputs defProcessInputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_inputs_items outputs Required root  groups groups items processes processes items anyOf item 1 oneOf item 1 outputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 1 oneOf item 1 outputs defProcessOutputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_outputs_items dataMappingId root  groups groups items processes processes items anyOf item 1 oneOf item 1 dataMappingIdType: integer Same definition as id implementation Required root  groups groups items processes processes items anyOf item 1 oneOf item 1 implementationType: enum (of string) Must be one of: <ul><li>\"Hardware\"</li></ul> ultrasonicPhasedArray Required root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArrayType: object No Additional Properties pitchCatch Required root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray pitchCatch One of <ul><li> Option 1 </li><li> Option 2 </li><li> Option 3 </li></ul> root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray pitchCatch oneOf item 0Type: object No Additional Properties pulserProbeId root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray pitchCatch oneOf item 0 pulserProbeIdType: integer Same definition as probeId receiverProbeId root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray pitchCatch oneOf item 0 receiverProbeIdType: integer Same definition as probeId linearFormation Required root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray pitchCatch oneOf item 0 linearFormationType: object Same definition as linearFormation root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray pitchCatch oneOf item 1Type: object No Additional Properties pulserProbeId root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray pitchCatch oneOf item 1 pulserProbeIdType: integer Same definition as probeId receiverProbeId root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray pitchCatch oneOf item 1 receiverProbeIdType: integer Same definition as probeId sectorialFormation Required root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray pitchCatch oneOf item 1 sectorialFormationType: object Same definition as sectorialFormation root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray pitchCatch oneOf item 2Type: object No Additional Properties pulserProbeId root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray pitchCatch oneOf item 2 pulserProbeIdType: integer Same definition as probeId receiverProbeId root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray pitchCatch oneOf item 2 receiverProbeIdType: integer Same definition as probeId compoundFormation Required root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray pitchCatch oneOf item 2 compoundFormationType: object Same definition as compoundFormation waveMode Required root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray waveModeType: enum (of string) Same definition as waveMode velocity Required root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray velocityType: number Same definition as velocity pulse root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray pulseType: object Same definition as pulse focusing Required root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray focusingType: object Same definition as focusing beams Required root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray beamsType: array of object Same definition as beams gates root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray gates One of <ul><li> defSinglePositionGates </li><li> defMultiPositionGates </li></ul> root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray gates oneOf defSinglePositionGatesType: array of object Same definition as gates root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray gates oneOf defMultiPositionGatesType: array of object Same definition as groups_items_processes_items_anyOf_i1_oneOf_i0_ultrasonicPhasedArray_gates_oneOf_i1 rectification Required root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray rectificationType: enum (of string) Same definition as rectification digitizingFrequency root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray digitizingFrequencyType: number Same definition as highCutOffFrequency ascanSynchroMode root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray ascanSynchroModeType: enum (of string) Same definition as ascanSynchroMode ascanCompressionFactor root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray ascanCompressionFactorType: integer Same definition as ascanCompressionFactor gain root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray gainType: number Same definition as gain wedgeDelay root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray wedgeDelayType: number <p>Value must be greater or equal to <code>0</code></p> ultrasoundMode root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray ultrasoundModeType: enum (of string) Same definition as ultrasoundMode referenceAmplitude root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray referenceAmplitudeType: number Same definition as referenceAmplitude referenceGain root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray referenceGainType: number Same definition as gain digitalBandPassFilter root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray digitalBandPassFilterType: object Same definition as digitalBandPassFilter smoothingFilter root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray smoothingFilterType: number Same definition as highCutOffFrequency averagingFactor root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray averagingFactorType: integer Same definition as averagingFactor calibrationStates root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray calibrationStatesType: array Same definition as calibrationStates lawFile root  groups groups items processes processes items anyOf item 1 oneOf item 1 ultrasonicPhasedArray lawFileType: object Same definition as lawFile root  groups groups items processes processes items anyOf item 1 oneOf item 2Type: object <p>Tandem</p> No Additional Properties id Required root  groups groups items processes processes items anyOf item 1 oneOf item 2 idType: integer Same definition as id inputs Required root  groups groups items processes processes items anyOf item 1 oneOf item 2 inputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 1 oneOf item 2 inputs defProcessInputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_inputs_items outputs Required root  groups groups items processes processes items anyOf item 1 oneOf item 2 outputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 1 oneOf item 2 outputs defProcessOutputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_outputs_items dataMappingId root  groups groups items processes processes items anyOf item 1 oneOf item 2 dataMappingIdType: integer Same definition as id implementation Required root  groups groups items processes processes items anyOf item 1 oneOf item 2 implementationType: enum (of string) Must be one of: <ul><li>\"Hardware\"</li></ul> ultrasonicPhasedArray Required root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArrayType: object No Additional Properties tandem Required root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray tandemType: object No Additional Properties pulserProbeId Required root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray tandem pulserProbeIdType: integer Same definition as probeId receiverProbeId Required root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray tandem receiverProbeIdType: integer Same definition as probeId pulserFormation Required root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray tandem pulserFormationType: object No Additional Properties probeFirstElementId Required root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray tandem pulserFormation probeFirstElementIdType: integer Same definition as id elementAperture Required root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray tandem pulserFormation elementApertureType: integer <p>Value must be greater or equal to <code>0</code></p> beamRefractedAngle Required root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray tandem pulserFormation beamRefractedAngleType: number Same definition as skewAngle velocity root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray tandem pulserFormation velocityType: number Same definition as velocity focusingDistance root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray tandem pulserFormation focusingDistanceType: number <p>Value must be greater or equal to <code>0</code></p> receiverFormation Required root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray tandem receiverFormationType: object Same definition as pulserFormation waveMode Required root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray waveModeType: enum (of string) Same definition as waveMode pulse root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray pulseType: object Same definition as pulse beams Required root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray beamsType: array of object Same definition as beams gates root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray gates One of <ul><li> defSinglePositionGates </li><li> defMultiPositionGates </li></ul> root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray gates oneOf defSinglePositionGatesType: array of object Same definition as gates root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray gates oneOf defMultiPositionGatesType: array of object Same definition as groups_items_processes_items_anyOf_i1_oneOf_i0_ultrasonicPhasedArray_gates_oneOf_i1 rectification Required root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray rectificationType: enum (of string) Same definition as rectification digitizingFrequency root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray digitizingFrequencyType: number Same definition as highCutOffFrequency ascanSynchroMode root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray ascanSynchroModeType: enum (of string) Same definition as ascanSynchroMode ascanCompressionFactor root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray ascanCompressionFactorType: integer Same definition as ascanCompressionFactor gain root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray gainType: number Same definition as gain wedgeDelay root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray wedgeDelayType: number <p>Value must be greater or equal to <code>0</code></p> ultrasoundMode root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray ultrasoundModeType: enum (of string) Same definition as ultrasoundMode referenceAmplitude root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray referenceAmplitudeType: number Same definition as referenceAmplitude referenceGain root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray referenceGainType: number Same definition as gain digitalBandPassFilter root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray digitalBandPassFilterType: object Same definition as digitalBandPassFilter smoothingFilter root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray smoothingFilterType: number Same definition as highCutOffFrequency averagingFactor root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray averagingFactorType: integer Same definition as averagingFactor calibrationStates root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray calibrationStatesType: array Same definition as calibrationStates lawFile root  groups groups items processes processes items anyOf item 1 oneOf item 2 ultrasonicPhasedArray lawFileType: object Same definition as lawFile root  groups groups items processes processes items anyOf defUltrasonicMatrixCaptureType: object <p>Ultrasonic Matrix Capture</p> No Additional Properties id Required root  groups groups items processes processes items anyOf item 2 idType: integer Same definition as id inputs root  groups groups items processes processes items anyOf item 2 inputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 2 inputs defProcessInputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_inputs_items outputs root  groups groups items processes processes items anyOf item 2 outputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 2 outputs defProcessOutputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_outputs_items dataMappingId root  groups groups items processes processes items anyOf item 2 dataMappingIdType: integer Same definition as id implementation root  groups groups items processes processes items anyOf item 2 implementationType: enum (of string) Must be one of: <ul><li>\"Hardware\"</li></ul> ultrasonicMatrixCapture root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture One of <ul><li> defUltrasonicCaptureFMC </li><li> defUltrasonicCapturePWI </li></ul> root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf defUltrasonicCaptureFMCType: object <p>FMC</p> acquisitionPattern root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 acquisitionPatternType: enum (of string) Must be one of: <ul><li>\"FMC\"</li></ul> digitalBandPassFilter root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 digitalBandPassFilterType: object Same definition as digitalBandPassFilter waveforms root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 waveformsType: array <p>Must contain a minimum of <code>1</code> items</p> No Additional ItemsTuple Validation Item at 1 must be: root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 waveforms waveforms item 0Type: object id root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 waveforms waveforms item 0 idType: integer Same definition as id pulse root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 waveforms waveforms item 0 pulseType: object Same definition as pulse pulserFrequency root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 pulserFrequencyType: number Same definition as highCutOffFrequency digitizingFrequency root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 digitizingFrequencyType: number Same definition as highCutOffFrequency beams root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 beamsType: array <p>Must contain a minimum of <code>1</code> items</p> No Additional ItemsTuple Validation Item at 1 must be: root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 beams beams item 0Type: object id root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 beams beams item 0 idType: integer Same definition as id pulsers root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 beams beams item 0 pulsersType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 beams beams item 0 pulsers pulsers itemsType: object No Additional Properties id Required root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 beams beams item 0 pulsers pulsers items idType: integer Same definition as id elementId Required root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 beams beams item 0 pulsers pulsers items elementIdType: integer Same definition as elementId probeId Required root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 beams beams item 0 pulsers pulsers items probeIdType: integer Same definition as probeId waveformId Required root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 beams beams item 0 pulsers pulsers items waveformIdType: integer Same definition as id receivers root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 beams beams item 0 receiversType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 beams beams item 0 receivers receivers itemsType: object No Additional Properties id Required root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 beams beams item 0 receivers receivers items idType: integer Same definition as id elementId Required root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 beams beams item 0 receivers receivers items elementIdType: integer Same definition as elementId probeId Required root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 beams beams item 0 receivers receivers items probeIdType: integer Same definition as probeId ascanStart root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 beams beams item 0 receivers receivers items ascanStartType: number Same definition as ascanStart ascanLength root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 0 beams beams item 0 receivers receivers items ascanLengthType: number Same definition as ascanLength root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf defUltrasonicCapturePWIType: object <p>PWI</p> acquisitionPattern root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 acquisitionPatternType: enum (of string) Must be one of: <ul><li>\"PWI\"</li></ul> planeWaveImaging root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 planeWaveImagingType: object No Additional Properties waveMode Required root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 planeWaveImaging waveModeType: enum (of string) Same definition as waveMode velocity root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 planeWaveImaging velocityType: number Same definition as velocity waveLocation Required root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 planeWaveImaging waveLocationType: enum (of string) Must be one of: <ul><li>\"Wedge\"</li><li>\"FirstLeg\"</li><li>\"SecondLeg\"</li></ul> startAngle Required root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 planeWaveImaging startAngleType: number Same definition as skewAngle stopAngle Required root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 planeWaveImaging stopAngleType: number Same definition as skewAngle quantityAngle Required root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 planeWaveImaging quantityAngleType: integer Same definition as quantity digitalBandPassFilter root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 digitalBandPassFilterType: object Same definition as digitalBandPassFilter waveforms root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 waveformsType: array <p>Must contain a minimum of <code>1</code> items</p> No Additional ItemsTuple Validation Item at 1 must be: root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 waveforms waveforms item 0Type: object id root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 waveforms waveforms item 0 idType: integer Same definition as id pulse root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 waveforms waveforms item 0 pulseType: object Same definition as pulse pulserFrequency root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 pulserFrequencyType: number Same definition as highCutOffFrequency digitizingFrequency root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 digitizingFrequencyType: number Same definition as highCutOffFrequency beams root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 beamsType: array <p>Must contain a minimum of <code>1</code> items</p> No Additional ItemsTuple Validation Item at 1 must be: root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 beams beams item 0Type: object id root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 beams beams item 0 idType: integer Same definition as id pulsers root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 beams beams item 0 pulsersType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 beams beams item 0 pulsers pulsers itemsType: object No Additional Properties id Required root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 beams beams item 0 pulsers pulsers items idType: integer Same definition as id elementId Required root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 beams beams item 0 pulsers pulsers items elementIdType: integer Same definition as elementId probeId Required root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 beams beams item 0 pulsers pulsers items probeIdType: integer Same definition as probeId waveformId Required root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 beams beams item 0 pulsers pulsers items waveformIdType: integer Same definition as id delay Required root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 beams beams item 0 pulsers pulsers items delayType: number receivers root  groups groups items processes processes items anyOf item 2 ultrasonicMatrixCapture oneOf item 1 beams beams item 0 receiversType: array of object Same definition as receivers root  groups groups items processes processes items anyOf defTotalFocusingMethodType: object <p>Total Focusing Method</p> No Additional Properties id Required root  groups groups items processes processes items anyOf item 3 idType: integer Same definition as id inputs Required root  groups groups items processes processes items anyOf item 3 inputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 3 inputs defProcessInputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_inputs_items outputs Required root  groups groups items processes processes items anyOf item 3 outputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 3 outputs defProcessOutputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_outputs_items dataMappingId root  groups groups items processes processes items anyOf item 3 dataMappingIdType: integer Same definition as id implementation Required root  groups groups items processes processes items anyOf item 3 implementationType: enum (of string) Must be one of: <ul><li>\"Hardware\"</li></ul> totalFocusingMethod Required root  groups groups items processes processes items anyOf item 3 totalFocusingMethodType: object No Additional Properties signalSource root  groups groups items processes processes items anyOf item 3 totalFocusingMethod signalSourceType: enum (of string) Must be one of: <ul><li>\"Analytic\"</li><li>\"Real\"</li></ul> gain Required root  groups groups items processes processes items anyOf item 3 totalFocusingMethod gainType: number Same definition as gain referenceAmplitude root  groups groups items processes processes items anyOf item 3 totalFocusingMethod referenceAmplitudeType: number referenceGain root  groups groups items processes processes items anyOf item 3 totalFocusingMethod referenceGainType: number Same definition as gain rectangularGrid Required root  groups groups items processes processes items anyOf item 3 totalFocusingMethod rectangularGridType: object No Additional Properties yImagingLimits Required root  groups groups items processes processes items anyOf item 3 totalFocusingMethod rectangularGrid yImagingLimitsType: object No Additional Properties min Required root  groups groups items processes processes items anyOf item 3 totalFocusingMethod rectangularGrid yImagingLimits minType: number max Required root  groups groups items processes processes items anyOf item 3 totalFocusingMethod rectangularGrid yImagingLimits maxType: number resolution Required root  groups groups items processes processes items anyOf item 3 totalFocusingMethod rectangularGrid yImagingLimits resolutionType: number Same definition as resolution zImagingLimits Required root  groups groups items processes processes items anyOf item 3 totalFocusingMethod rectangularGrid zImagingLimitsType: object Same definition as yImagingLimits fmcPulserIds root  groups groups items processes processes items anyOf item 3 totalFocusingMethod fmcPulserIdsType: array of integer <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 3 totalFocusingMethod fmcPulserIds fmcPulserIds itemsType: integer <p>Value must be greater or equal to <code>0</code></p> fmcReceiverIds root  groups groups items processes processes items anyOf item 3 totalFocusingMethod fmcReceiverIdsType: array of integer Same definition as fmcPulserIds pathName Required root  groups groups items processes processes items anyOf item 3 totalFocusingMethod pathNameType: string Same definition as $schema waveSet Required root  groups groups items processes processes items anyOf item 3 totalFocusingMethod waveSetType: object No Additional Properties pulsings Required root  groups groups items processes processes items anyOf item 3 totalFocusingMethod waveSet pulsingsType: array <p>Must contain a minimum of <code>1</code> items</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 3 totalFocusingMethod waveSet pulsings defWaveModeType: enum (of string) Same definition as waveMode receivings Required root  groups groups items processes processes items anyOf item 3 totalFocusingMethod waveSet receivingsType: array Same definition as pulsings columns root  groups groups items processes processes items anyOf item 3 totalFocusingMethod columnsType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 3 totalFocusingMethod columns columns itemsType: object No Additional Properties id Required root  groups groups items processes processes items anyOf item 3 totalFocusingMethod columns columns items idType: integer Same definition as id gainMap Required root  groups groups items processes processes items anyOf item 3 totalFocusingMethod columns columns items gainMapType: object No Additional Properties points Required root  groups groups items processes processes items anyOf item 3 totalFocusingMethod columns columns items gainMap pointsType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 3 totalFocusingMethod columns columns items gainMap points points itemsType: object No Additional Properties position Required root  groups groups items processes processes items anyOf item 3 totalFocusingMethod columns columns items gainMap points points items positionType: number gain Required root  groups groups items processes processes items anyOf item 3 totalFocusingMethod columns columns items gainMap points points items gainType: number Same definition as gain root  groups groups items processes processes items anyOf defGainType: object <p>Gain</p> No Additional Properties id Required root  groups groups items processes processes items anyOf item 4 idType: integer Same definition as id inputs Required root  groups groups items processes processes items anyOf item 4 inputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 4 inputs defProcessInputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_inputs_items outputs Required root  groups groups items processes processes items anyOf item 4 outputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 4 outputs defProcessOutputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_outputs_items dataMappingId root  groups groups items processes processes items anyOf item 4 dataMappingIdType: integer Same definition as id implementation Required root  groups groups items processes processes items anyOf item 4 implementationType: enum (of string) Must be one of: <ul><li>\"Hardware\"</li><li>\"Software\"</li></ul> gain Required root  groups groups items processes processes items anyOf item 4 gainType: number Same definition as gain root  groups groups items processes processes items anyOf defSinglePositionGatesType: object <p>Gates per beam</p> No Additional Properties id Required root  groups groups items processes processes items anyOf item 5 idType: integer Same definition as id inputs Required root  groups groups items processes processes items anyOf item 5 inputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 5 inputs defProcessInputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_inputs_items outputs Required root  groups groups items processes processes items anyOf item 5 outputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 5 outputs defProcessOutputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_outputs_items dataMappingId root  groups groups items processes processes items anyOf item 5 dataMappingIdType: integer Same definition as id implementation Required root  groups groups items processes processes items anyOf item 5 implementationType: enum (of string) Must be one of: <ul><li>\"Hardware\"</li><li>\"Software\"</li></ul> ultrasonicGates Required root  groups groups items processes processes items anyOf item 5 ultrasonicGatesType: array of object Same definition as gates root  groups groups items processes processes items anyOf defMultiPositionGatesType: object <p>Gates per group</p> No Additional Properties id Required root  groups groups items processes processes items anyOf item 6 idType: integer Same definition as id inputs Required root  groups groups items processes processes items anyOf item 6 inputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 6 inputs defProcessInputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_inputs_items outputs Required root  groups groups items processes processes items anyOf item 6 outputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 6 outputs defProcessOutputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_outputs_items dataMappingId root  groups groups items processes processes items anyOf item 6 dataMappingIdType: integer Same definition as id implementation Required root  groups groups items processes processes items anyOf item 6 implementationType: enum (of string) Must be one of: <ul><li>\"Hardware\"</li><li>\"Software\"</li></ul> ultrasonicGates Required root  groups groups items processes processes items anyOf item 6 ultrasonicGatesType: array of object Same definition as groups_items_processes_items_anyOf_i1_oneOf_i0_ultrasonicPhasedArray_gates_oneOf_i1 root  groups groups items processes processes items anyOf defTcgType: object <p>TCG</p> No Additional Properties id Required root  groups groups items processes processes items anyOf item 7 idType: integer Same definition as id inputs Required root  groups groups items processes processes items anyOf item 7 inputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 7 inputs defProcessInputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_inputs_items outputs Required root  groups groups items processes processes items anyOf item 7 outputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 7 outputs defProcessOutputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_outputs_items dataMappingId root  groups groups items processes processes items anyOf item 7 dataMappingIdType: integer Same definition as id implementation Required root  groups groups items processes processes items anyOf item 7 implementationType: enum (of string) Must be one of: <ul><li>\"Software\"</li></ul> ultrasonicTcg Required root  groups groups items processes processes items anyOf item 7 ultrasonicTcgType: object Same definition as tcg root  groups groups items processes processes items anyOf defThicknessType: object <p>Thickness</p> No Additional Properties id Required root  groups groups items processes processes items anyOf item 8 idType: integer Same definition as id inputs Required root  groups groups items processes processes items anyOf item 8 inputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 8 inputs defProcessInputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_inputs_items outputs Required root  groups groups items processes processes items anyOf item 8 outputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 8 outputs defProcessOutputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_outputs_items dataMappingId root  groups groups items processes processes items anyOf item 8 dataMappingIdType: integer Same definition as id implementation Required root  groups groups items processes processes items anyOf item 8 implementationType: enum (of string) Must be one of: <ul><li>\"Software\"</li></ul> thickness Required root  groups groups items processes processes items anyOf item 8 thicknessType: object No Additional Properties min Required root  groups groups items processes processes items anyOf item 8 thickness minType: number max Required root  groups groups items processes processes items anyOf item 8 thickness maxType: number gates Required root  groups groups items processes processes items anyOf item 8 thickness gatesType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>Must contain a maximum of <code>2</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 8 thickness gates gates itemsType: object No Additional Properties id Required root  groups groups items processes processes items anyOf item 8 thickness gates gates items idType: integer Same definition as id gateDetection Required root  groups groups items processes processes items anyOf item 8 thickness gates gates items gateDetectionType: enum (of string) Must be one of: <ul><li>\"Crossing\"</li><li>\"MaximumPeak\"</li><li>\"FirstPeak\"</li><li>\"LastPeak\"</li></ul> root  groups groups items processes processes items anyOf defTfmBoxGatesType: object <p>Tfm Box Gates</p> No Additional Properties id Required root  groups groups items processes processes items anyOf item 9 idType: integer Same definition as id inputs Required root  groups groups items processes processes items anyOf item 9 inputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 9 inputs defProcessInputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_inputs_items outputs Required root  groups groups items processes processes items anyOf item 9 outputsType: array or null <p>Must contain a minimum of <code>0</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  groups groups items processes processes items anyOf item 9 outputs defProcessOutputType: object Same definition as groups_items_processes_items_anyOf_i0_oneOf_i0_outputs_items dataMappingId root  groups groups items processes processes items anyOf item 9 dataMappingIdType: integer Same definition as id implementation Required root  groups groups items processes processes items anyOf item 9 implementationType: enum (of string) Must be one of: <ul><li>\"Software\"</li></ul> tfmBoxGates Required root  groups groups items processes processes items anyOf item 9 tfmBoxGatesType: array <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsTuple Validation Item at 1 must be: root  groups groups items processes processes items anyOf item 9 tfmBoxGates tfmBoxGates item 0Type: object No Additional Properties id Required root  groups groups items processes processes items anyOf item 9 tfmBoxGates tfmBoxGates item 0 idType: integer Same definition as id threshold Required root  groups groups items processes processes items anyOf item 9 tfmBoxGates tfmBoxGates item 0 thresholdType: number yImagingMin Required root  groups groups items processes processes items anyOf item 9 tfmBoxGates tfmBoxGates item 0 yImagingMinType: number yImagingMax Required root  groups groups items processes processes items anyOf item 9 tfmBoxGates tfmBoxGates item 0 yImagingMaxType: number zImagingMin Required root  groups groups items processes processes items anyOf item 9 tfmBoxGates tfmBoxGates item 0 zImagingMinType: number <p>Value must be greater or equal to <code>0</code></p> zImagingMax Required root  groups groups items processes processes items anyOf item 9 tfmBoxGates tfmBoxGates item 0 zImagingMaxType: number dataMappings root  dataMappingsType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  dataMappings dataMappings itemsType: object No Additional Properties id Required root  dataMappings dataMappings items idType: integer Same definition as id specimenId Required root  dataMappings dataMappings items specimenId Any of <ul><li> id </li><li> id </li><li> id </li></ul> root  dataMappings dataMappings items specimenId anyOf idType: integer <p>Plate Id</p> Same definition as id root  dataMappings dataMappings items specimenId anyOf idType: integer <p>Pipe Id</p> Same definition as id root  dataMappings dataMappings items specimenId anyOf idType: integer <p>Bar Id</p> Same definition as id surfaceId Required root  dataMappings dataMappings items surfaceId Any of <ul><li> id </li><li> id </li><li> id </li></ul> root  dataMappings dataMappings items surfaceId anyOf idType: integer <p>Plate Surface Id</p> Same definition as id root  dataMappings dataMappings items surfaceId anyOf idType: integer <p>Pipe Surface Id</p> Same definition as id root  dataMappings dataMappings items surfaceId anyOf idType: integer <p>Bar Surface Id</p> Same definition as id discreteGrid Required root  dataMappings dataMappings items discreteGridType: object No Additional Properties scanPattern Required root  dataMappings dataMappings items discreteGrid scanPatternType: enum (of string) Must be one of: <ul><li>\"OneLineScan\"</li><li>\"RasterScan\"</li></ul> uCoordinateOrientation Required root  dataMappings dataMappings items discreteGrid uCoordinateOrientationType: enum (of string) Must be one of: <ul><li>\"Around\"</li><li>\"Along\"</li><li>\"Width\"</li><li>\"Length\"</li></ul> dimensions Required root  dataMappings dataMappings items discreteGrid dimensionsType: array <p>Must contain a minimum of <code>1</code> items</p><p>Must contain a maximum of <code>2</code> items</p><p>All items must be unique</p> No Additional ItemsTuple Validation Item at 1 must be: root  dataMappings dataMappings items discreteGrid dimensions uCoordinateType: object Same definition as groups_items_datasets_items_anyOf_i0_dimensions_items_i0 Item at 2 must be: root  dataMappings dataMappings items discreteGrid dimensions vCoordinateType: object Same definition as groups_items_datasets_items_anyOf_i0_dimensions_items_i1_oneOf_i0 probes root  probesType: array <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  probes probes items One of <ul><li> Option 1 </li><li> Option 2 </li><li> Option 3 </li><li> Option 4 </li><li> Option 5 </li><li> Option 6 </li></ul> root  probes probes items oneOf item 0Type: object <p>Conventional Round with Wedge</p> No Additional Properties id Required root  probes probes items oneOf item 0 idType: integer Same definition as id model root  probes probes items oneOf item 0 modelType: string Same definition as $schema serie root  probes probes items oneOf item 0 serieType: string Same definition as $schema serialNumber root  probes probes items oneOf item 0 serialNumberType: string Same definition as $schema conventionalRound Required root  probes probes items oneOf item 0 conventionalRoundType: object No Additional Properties centralFrequency Required root  probes probes items oneOf item 0 conventionalRound centralFrequencyType: number Same definition as highCutOffFrequency diameter Required root  probes probes items oneOf item 0 conventionalRound diameterType: number <p>Value must be greater or equal to <code>0</code></p> elements Required root  probes probes items oneOf item 0 conventionalRound elementsType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  probes probes items oneOf item 0 conventionalRound elements elements itemsType: object No Additional Properties id Required root  probes probes items oneOf item 0 conventionalRound elements elements items idType: integer Same definition as id pinId root  probes probes items oneOf item 0 conventionalRound elements elements items pinIdType: integer Same definition as id acquisitionUnitId Required root  probes probes items oneOf item 0 conventionalRound elements elements items acquisitionUnitIdType: integer Same definition as id connectorName Required root  probes probes items oneOf item 0 conventionalRound elements elements items connectorNameType: string Same definition as $schema wedgeAssociation Required root  probes probes items oneOf item 0 wedgeAssociationType: object No Additional Properties wedgeId Required root  probes probes items oneOf item 0 wedgeAssociation wedgeIdType: integer Same definition as id mountingLocationId Required root  probes probes items oneOf item 0 wedgeAssociation mountingLocationIdType: integer Same definition as id orientation root  probes probes items oneOf item 0 wedgeAssociation orientationType: enum (of string) Must be one of: <ul><li>\"Normal\"</li><li>\"Reverse\"</li></ul> root  probes probes items oneOf item 1Type: object <p>Conventional Round with fluid column</p> No Additional Properties id Required root  probes probes items oneOf item 1 idType: integer Same definition as id model root  probes probes items oneOf item 1 modelType: string Same definition as $schema serie root  probes probes items oneOf item 1 serieType: string Same definition as $schema serialNumber root  probes probes items oneOf item 1 serialNumberType: string Same definition as $schema conventionalRound Required root  probes probes items oneOf item 1 conventionalRoundType: object Same definition as conventionalRound fluidColumn Required root  probes probes items oneOf item 1 fluidColumnType: object No Additional Properties name Required root  probes probes items oneOf item 1 fluidColumn nameType: string Same definition as $schema longitudinalVelocity Required root  probes probes items oneOf item 1 fluidColumn longitudinalVelocityType: number Same definition as velocity nominalHeight root  probes probes items oneOf item 1 fluidColumn nominalHeightType: number <p>Value must be greater or equal to <code>0</code></p> wedgeAngle Required root  probes probes items oneOf item 1 fluidColumn wedgeAngleType: number Same definition as skewAngle squintAngle root  probes probes items oneOf item 1 fluidColumn squintAngleType: number Same definition as skewAngle roofAngle root  probes probes items oneOf item 1 fluidColumn roofAngleType: number Same definition as skewAngle primaryOffset Required root  probes probes items oneOf item 1 fluidColumn primaryOffsetType: number Same definition as offset secondaryOffset Required root  probes probes items oneOf item 1 fluidColumn secondaryOffsetType: number Same definition as offset tertiaryOffset Required root  probes probes items oneOf item 1 fluidColumn tertiaryOffsetType: number Same definition as offset positioning Required root  probes probes items oneOf item 1 fluidColumn positioningType: object No Additional Properties specimenId Required root  probes probes items oneOf item 1 fluidColumn positioning specimenId Any of <ul><li> id </li><li> id </li><li> id </li></ul> root  probes probes items oneOf item 1 fluidColumn positioning specimenId anyOf idType: integer <p>Plate Id</p> Same definition as defUniqueId root  probes probes items oneOf item 1 fluidColumn positioning specimenId anyOf idType: integer <p>Pipe Id</p> Same definition as defUniqueId root  probes probes items oneOf item 1 fluidColumn positioning specimenId anyOf idType: integer <p>Bar Id</p> Same definition as defUniqueId surfaceId Required root  probes probes items oneOf item 1 fluidColumn positioning surfaceId Any of <ul><li> id </li><li> id </li><li> id </li></ul> root  probes probes items oneOf item 1 fluidColumn positioning surfaceId anyOf idType: integer <p>Plate Surface Id</p> Same definition as defUniqueId root  probes probes items oneOf item 1 fluidColumn positioning surfaceId anyOf idType: integer <p>Pipe Surface Id</p> Same definition as defUniqueId root  probes probes items oneOf item 1 fluidColumn positioning surfaceId anyOf idType: integer <p>Bar Surface Id</p> Same definition as defUniqueId uCoordinateOffset Required root  probes probes items oneOf item 1 fluidColumn positioning uCoordinateOffsetType: number Same definition as offset vCoordinateOffset Required root  probes probes items oneOf item 1 fluidColumn positioning vCoordinateOffsetType: number Same definition as offset skewAngle Required root  probes probes items oneOf item 1 fluidColumn positioning skewAngleType: number Same definition as skewAngle root  probes probes items oneOf item 2Type: object <p>Conventional Rectangular with Wedge</p> No Additional Properties id Required root  probes probes items oneOf item 2 idType: integer Same definition as id model root  probes probes items oneOf item 2 modelType: string Same definition as $schema serie root  probes probes items oneOf item 2 serieType: string Same definition as $schema serialNumber root  probes probes items oneOf item 2 serialNumberType: string Same definition as $schema conventionalRectangular Required root  probes probes items oneOf item 2 conventionalRectangularType: object No Additional Properties centralFrequency Required root  probes probes items oneOf item 2 conventionalRectangular centralFrequencyType: number Same definition as highCutOffFrequency length Required root  probes probes items oneOf item 2 conventionalRectangular lengthType: number <p>Value must be greater or equal to <code>0</code></p> width Required root  probes probes items oneOf item 2 conventionalRectangular widthType: number <p>Value must be greater or equal to <code>0</code></p> elements Required root  probes probes items oneOf item 2 conventionalRectangular elementsType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  probes probes items oneOf item 2 conventionalRectangular elements elements itemsType: object No Additional Properties id Required root  probes probes items oneOf item 2 conventionalRectangular elements elements items idType: integer Same definition as id pinId root  probes probes items oneOf item 2 conventionalRectangular elements elements items pinIdType: integer Same definition as id acquisitionUnitId Required root  probes probes items oneOf item 2 conventionalRectangular elements elements items acquisitionUnitIdType: integer Same definition as acquisitionUnitId connectorName Required root  probes probes items oneOf item 2 conventionalRectangular elements elements items connectorNameType: string Same definition as $schema wedgeAssociation Required root  probes probes items oneOf item 2 wedgeAssociationType: object Same definition as wedgeAssociation root  probes probes items oneOf item 3Type: object <p>Conventional Rectangular with fluid column</p> No Additional Properties id Required root  probes probes items oneOf item 3 idType: integer Same definition as id model root  probes probes items oneOf item 3 modelType: string Same definition as $schema serie root  probes probes items oneOf item 3 serieType: string Same definition as $schema serialNumber root  probes probes items oneOf item 3 serialNumberType: string Same definition as $schema conventionalRectangular Required root  probes probes items oneOf item 3 conventionalRectangularType: object Same definition as conventionalRectangular fluidColumn Required root  probes probes items oneOf item 3 fluidColumnType: object Same definition as fluidColumn root  probes probes items oneOf item 4Type: object <p>Phased Array Linear with Wedge</p> No Additional Properties id Required root  probes probes items oneOf item 4 idType: integer Same definition as id model root  probes probes items oneOf item 4 modelType: string Same definition as $schema serie root  probes probes items oneOf item 4 serieType: string Same definition as $schema serialNumber root  probes probes items oneOf item 4 serialNumberType: string Same definition as $schema phasedArrayLinear Required root  probes probes items oneOf item 4 phasedArrayLinearType: object No Additional Properties centralFrequency Required root  probes probes items oneOf item 4 phasedArrayLinear centralFrequencyType: number Same definition as highCutOffFrequency elements Required root  probes probes items oneOf item 4 phasedArrayLinear elementsType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  probes probes items oneOf item 4 phasedArrayLinear elements elements itemsType: object No Additional Properties id Required root  probes probes items oneOf item 4 phasedArrayLinear elements elements items idType: integer Same definition as id pinId Required root  probes probes items oneOf item 4 phasedArrayLinear elements elements items pinIdType: integer Same definition as id acquisitionUnitId Required root  probes probes items oneOf item 4 phasedArrayLinear elements elements items acquisitionUnitIdType: integer Same definition as acquisitionUnitId connectorName Required root  probes probes items oneOf item 4 phasedArrayLinear elements elements items connectorNameType: string Same definition as $schema primaryIndex root  probes probes items oneOf item 4 phasedArrayLinear elements elements items primaryIndexType: integer <p>Value must be greater or equal to <code>0</code></p> secondaryIndex root  probes probes items oneOf item 4 phasedArrayLinear elements elements items secondaryIndexType: integer <p>Value must be greater or equal to <code>0</code></p> enabled root  probes probes items oneOf item 4 phasedArrayLinear elements elements items enabledType: boolean primaryAxis Required root  probes probes items oneOf item 4 phasedArrayLinear primaryAxisType: object No Additional Properties elementGap Required root  probes probes items oneOf item 4 phasedArrayLinear primaryAxis elementGapType: number <p>Value must be greater or equal to <code>0</code></p> elementQuantity Required root  probes probes items oneOf item 4 phasedArrayLinear primaryAxis elementQuantityType: integer Same definition as quantity elementLength Required root  probes probes items oneOf item 4 phasedArrayLinear primaryAxis elementLengthType: number <p>Value must be greater or equal to <code>0</code></p> referencePoint Required root  probes probes items oneOf item 4 phasedArrayLinear primaryAxis referencePointType: number casingLength root  probes probes items oneOf item 4 phasedArrayLinear primaryAxis casingLengthType: number <p>Value must be greater or equal to <code>0</code></p> secondaryAxis Required root  probes probes items oneOf item 4 phasedArrayLinear secondaryAxisType: object Same definition as primaryAxis wedgeAssociation Required root  probes probes items oneOf item 4 wedgeAssociationType: object Same definition as wedgeAssociation root  probes probes items oneOf item 5Type: object <p>Phased Array Linear with fluid column</p> No Additional Properties id Required root  probes probes items oneOf item 5 idType: integer Same definition as id model root  probes probes items oneOf item 5 modelType: string Same definition as $schema serie root  probes probes items oneOf item 5 serieType: string Same definition as $schema serialNumber root  probes probes items oneOf item 5 serialNumberType: string Same definition as $schema phasedArrayLinear Required root  probes probes items oneOf item 5 phasedArrayLinearType: object Same definition as phasedArrayLinear fluidColumn Required root  probes probes items oneOf item 5 fluidColumnType: object Same definition as fluidColumn wedges root  wedgesType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  wedges wedges itemsType: object No Additional Properties id Required root  wedges wedges items idType: integer Same definition as id model Required root  wedges wedges items modelType: string Same definition as $schema serie root  wedges wedges items serieType: string Same definition as $schema serialNumber root  wedges wedges items serialNumberType: string Same definition as $schema angleBeamWedge Required root  wedges wedges items angleBeamWedgeType: object No Additional Properties width Required root  wedges wedges items angleBeamWedge widthType: number <p>Value must be greater or equal to <code>0</code></p> height Required root  wedges wedges items angleBeamWedge heightType: number <p>Value must be greater or equal to <code>0</code></p> length Required root  wedges wedges items angleBeamWedge lengthType: number <p>Value must be greater or equal to <code>0</code></p> longitudinalVelocity Required root  wedges wedges items angleBeamWedge longitudinalVelocityType: number Same definition as velocity mountingLocations Required root  wedges wedges items angleBeamWedge mountingLocationsType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>Must contain a maximum of <code>2</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  wedges wedges items angleBeamWedge mountingLocations mountingLocations itemsType: object No Additional Properties id Required root  wedges wedges items angleBeamWedge mountingLocations mountingLocations items idType: integer Same definition as id wedgeAngle Required root  wedges wedges items angleBeamWedge mountingLocations mountingLocations items wedgeAngleType: number Same definition as skewAngle squintAngle root  wedges wedges items angleBeamWedge mountingLocations mountingLocations items squintAngleType: number Same definition as skewAngle roofAngle root  wedges wedges items angleBeamWedge mountingLocations mountingLocations items roofAngleType: number Same definition as skewAngle primaryOffset Required root  wedges wedges items angleBeamWedge mountingLocations mountingLocations items primaryOffsetType: number Same definition as offset secondaryOffset Required root  wedges wedges items angleBeamWedge mountingLocations mountingLocations items secondaryOffsetType: number Same definition as offset tertiaryOffset Required root  wedges wedges items angleBeamWedge mountingLocations mountingLocations items tertiaryOffsetType: number Same definition as offset pocketDepth root  wedges wedges items angleBeamWedge pocketDepthType: number positioning Required root  wedges wedges items positioningType: object Same definition as positioning specimens root  specimensType: array <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  specimens specimens items One of <ul><li> Option 1 </li><li> Option 2 </li><li> Option 3 </li></ul> root  specimens specimens items oneOf item 0Type: object <p>Plate</p> No Additional Properties id Required root  specimens specimens items oneOf item 0 idType: integer Same definition as id plateGeometry Required root  specimens specimens items oneOf item 0 plateGeometryType: object No Additional Properties width root  specimens specimens items oneOf item 0 plateGeometry widthType: number <p>Value must be greater or equal to <code>0</code></p> length root  specimens specimens items oneOf item 0 plateGeometry lengthType: number <p>Value must be greater or equal to <code>0</code></p> thickness Required root  specimens specimens items oneOf item 0 plateGeometry thicknessType: number <p>Value must be greater or equal to <code>0</code></p> material Required root  specimens specimens items oneOf item 0 plateGeometry materialType: object No Additional Properties name Required root  specimens specimens items oneOf item 0 plateGeometry material nameType: string Same definition as $schema longitudinalWave Required root  specimens specimens items oneOf item 0 plateGeometry material longitudinalWaveType: object No Additional Properties nominalVelocity Required root  specimens specimens items oneOf item 0 plateGeometry material longitudinalWave nominalVelocityType: number Same definition as velocity attenuationCoefficient root  specimens specimens items oneOf item 0 plateGeometry material longitudinalWave attenuationCoefficientType: number <p>Value must be greater or equal to <code>0</code></p> transversalVerticalWave Required root  specimens specimens items oneOf item 0 plateGeometry material transversalVerticalWaveType: object Same definition as longitudinalWave density root  specimens specimens items oneOf item 0 plateGeometry material densityType: number <p>Value must be greater or equal to <code>0</code></p> surfaces Required root  specimens specimens items oneOf item 0 plateGeometry surfacesType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>Must contain a maximum of <code>2</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  specimens specimens items oneOf item 0 plateGeometry surfaces surfaces itemsType: object No Additional Properties id Required root  specimens specimens items oneOf item 0 plateGeometry surfaces surfaces items idType: integer Same definition as id name Required root  specimens specimens items oneOf item 0 plateGeometry surfaces surfaces items nameType: enum (of string) Must be one of: <ul><li>\"Top\"</li><li>\"Bottom\"</li></ul> weldGeometry root  specimens specimens items oneOf item 0 weldGeometryType: object No Additional Properties weldAngle Required root  specimens specimens items oneOf item 0 weldGeometry weldAngleType: number Same definition as skewAngle material Required root  specimens specimens items oneOf item 0 weldGeometry materialType: object Same definition as material bevelShape Required root  specimens specimens items oneOf item 0 weldGeometry bevelShapeType: enum (of string) Must be one of: <ul><li>\"U\"</li><li>\"V\"</li></ul> symmetry Required root  specimens specimens items oneOf item 0 weldGeometry symmetryType: enum (of string) Must be one of: <ul><li>\"Symmetric\"</li><li>\"StraightLeft\"</li><li>\"StraightRight\"</li></ul> heatAffectedZoneWidth root  specimens specimens items oneOf item 0 weldGeometry heatAffectedZoneWidthType: number offset root  specimens specimens items oneOf item 0 weldGeometry offsetType: number Same definition as offset upperCap root  specimens specimens items oneOf item 0 weldGeometry upperCapType: object No Additional Properties width root  specimens specimens items oneOf item 0 weldGeometry upperCap widthType: number <p>Value must be greater or equal to <code>0</code></p> height Required root  specimens specimens items oneOf item 0 weldGeometry upperCap heightType: number <p>Value must be greater or equal to <code>0</code></p> lowerCap root  specimens specimens items oneOf item 0 weldGeometry lowerCapType: object No Additional Properties width root  specimens specimens items oneOf item 0 weldGeometry lowerCap widthType: number <p>Value must be greater or equal to <code>0</code></p> height Required root  specimens specimens items oneOf item 0 weldGeometry lowerCap heightType: number <p>Value must be greater or equal to <code>0</code></p> fills root  specimens specimens items oneOf item 0 weldGeometry fillsType: array of object <p>Must contain a minimum of <code>1</code> items</p> No Additional ItemsEach item of this array must be: root  specimens specimens items oneOf item 0 weldGeometry fills fills itemsType: object No Additional Properties angle Required root  specimens specimens items oneOf item 0 weldGeometry fills fills items angleType: number Same definition as skewAngle height Required root  specimens specimens items oneOf item 0 weldGeometry fills fills items heightType: number <p>Value must be greater or equal to <code>0</code></p> hotPass root  specimens specimens items oneOf item 0 weldGeometry hotPassType: object No Additional Properties angle Required root  specimens specimens items oneOf item 0 weldGeometry hotPass angleType: number Same definition as skewAngle height Required root  specimens specimens items oneOf item 0 weldGeometry hotPass heightType: number <p>Value must be greater or equal to <code>0</code></p> land root  specimens specimens items oneOf item 0 weldGeometry landType: object No Additional Properties height Required root  specimens specimens items oneOf item 0 weldGeometry land heightType: number <p>Value must be greater or equal to <code>0</code></p> root root  specimens specimens items oneOf item 0 weldGeometry rootType: object No Additional Properties angle Required root  specimens specimens items oneOf item 0 weldGeometry root angleType: number Same definition as skewAngle height Required root  specimens specimens items oneOf item 0 weldGeometry root heightType: number <p>Value must be greater or equal to <code>0</code></p> customOverlay2D root  specimens specimens items oneOf item 0 customOverlay2DType: object No Additional Properties filename Required root  specimens specimens items oneOf item 0 customOverlay2D filenameType: string Same definition as $schema format Required root  specimens specimens items oneOf item 0 customOverlay2D formatType: string Same definition as $schema extension Required root  specimens specimens items oneOf item 0 customOverlay2D extensionType: string Same definition as $schema path Required root  specimens specimens items oneOf item 0 customOverlay2D pathType: string Same definition as $schema localScale root  specimens specimens items oneOf item 0 customOverlay2D localScaleType: object No Additional Properties x Required root  specimens specimens items oneOf item 0 customOverlay2D localScale xType: number y Required root  specimens specimens items oneOf item 0 customOverlay2D localScale yType: number z Required root  specimens specimens items oneOf item 0 customOverlay2D localScale zType: number localTranslation root  specimens specimens items oneOf item 0 customOverlay2D localTranslationType: object Same definition as localScale translation root  specimens specimens items oneOf item 0 customOverlay2D translationType: object Same definition as localScale scale Required root  specimens specimens items oneOf item 0 customOverlay2D scaleType: number rotation Required root  specimens specimens items oneOf item 0 customOverlay2D rotationType: number width Required root  specimens specimens items oneOf item 0 customOverlay2D widthType: number thickness Required root  specimens specimens items oneOf item 0 customOverlay2D thicknessType: number root  specimens specimens items oneOf item 1Type: object <p>Pipe</p> No Additional Properties id Required root  specimens specimens items oneOf item 1 idType: integer Same definition as id pipeGeometry Required root  specimens specimens items oneOf item 1 pipeGeometryType: object No Additional Properties length root  specimens specimens items oneOf item 1 pipeGeometry lengthType: number <p>Value must be greater or equal to <code>0</code></p> thickness Required root  specimens specimens items oneOf item 1 pipeGeometry thicknessType: number <p>Value must be greater or equal to <code>0</code></p> outerRadius root  specimens specimens items oneOf item 1 pipeGeometry outerRadiusType: number <p>Value must be greater or equal to <code>0</code></p> angularOpening root  specimens specimens items oneOf item 1 pipeGeometry angularOpeningType: number <p>Value must be greater or equal to <code>0</code> and lesser or equal to <code>360</code></p> material Required root  specimens specimens items oneOf item 1 pipeGeometry materialType: object Same definition as material surfaces Required root  specimens specimens items oneOf item 1 pipeGeometry surfacesType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>Must contain a maximum of <code>2</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  specimens specimens items oneOf item 1 pipeGeometry surfaces surfaces itemsType: object No Additional Properties id Required root  specimens specimens items oneOf item 1 pipeGeometry surfaces surfaces items idType: integer Same definition as id name Required root  specimens specimens items oneOf item 1 pipeGeometry surfaces surfaces items nameType: enum (of string) Must be one of: <ul><li>\"Inside\"</li><li>\"Outside\"</li></ul> weldGeometry root  specimens specimens items oneOf item 1 weldGeometryType: object Same definition as weldGeometry customOverlay2D root  specimens specimens items oneOf item 1 customOverlay2DType: object Same definition as customOverlay2D root  specimens specimens items oneOf item 2Type: object <p>Bar</p> No Additional Properties id Required root  specimens specimens items oneOf item 2 idType: integer Same definition as id barGeometry Required root  specimens specimens items oneOf item 2 barGeometryType: object No Additional Properties length Required root  specimens specimens items oneOf item 2 barGeometry lengthType: number <p>Value must be greater or equal to <code>0</code></p> diameter Required root  specimens specimens items oneOf item 2 barGeometry diameterType: number <p>Value must be greater or equal to <code>0</code></p> material Required root  specimens specimens items oneOf item 2 barGeometry materialType: object Same definition as material surfaces Required root  specimens specimens items oneOf item 2 barGeometry surfacesType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>Must contain a maximum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  specimens specimens items oneOf item 2 barGeometry surfaces surfaces itemsType: object No Additional Properties id Required root  specimens specimens items oneOf item 2 barGeometry surfaces surfaces items idType: integer Same definition as id name Required root  specimens specimens items oneOf item 2 barGeometry surfaces surfaces items nameType: enum (of string) Must be one of: <ul><li>\"Outside\"</li></ul> acquisitionUnits root  acquisitionUnitsType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  acquisitionUnits acquisitionUnits itemsType: object No Additional Properties id Required root  acquisitionUnits acquisitionUnits items idType: integer Same definition as id platform Required root  acquisitionUnits acquisitionUnits items platformType: string Same definition as $schema model Required root  acquisitionUnits acquisitionUnits items modelType: string Same definition as $schema serialNumber root  acquisitionUnits acquisitionUnits items serialNumberType: string Same definition as $schema name root  acquisitionUnits acquisitionUnits items nameType: string Same definition as $schema acquisitionRate Required root  acquisitionUnits acquisitionUnits items acquisitionRateType: number <p>Value must be greater or equal to <code>0</code></p> motionDevices root  motionDevicesType: array of object <p>Must contain a minimum of <code>1</code> items</p><p>All items must be unique</p> No Additional ItemsEach item of this array must be: root  motionDevices motionDevices itemsType: object No Additional Properties id Required root  motionDevices motionDevices items idType: integer Same definition as id name root  motionDevices motionDevices items nameType: string Same definition as $schema encoder Required root  motionDevices motionDevices items encoderType: object No Additional Properties serialNumber root  motionDevices motionDevices items encoder serialNumberType: string Same definition as $schema mode Required root  motionDevices motionDevices items encoder modeType: enum (of string) Must be one of: <ul><li>\"Quadrature\"</li><li>\"ClockDir\"</li><li>\"PulseUp\"</li><li>\"PulseDown\"</li></ul> stepResolution Required root  motionDevices motionDevices items encoder stepResolutionType: number Same definition as resolution preset root  motionDevices motionDevices items encoder presetType: number <p>Value must be greater or equal to <code>0</code></p> acquisitionDirection root  motionDevices motionDevices items encoder acquisitionDirectionType: enum (of string) Must be one of: <ul><li>\"Unidirectional\"</li><li>\"Bidirectional\"</li></ul> <p>Generated using json-schema-for-humans on 2024-10-21 at 14:42:35 -0400</p>"},{"location":"json-metadata/setup/data-model/","title":"Setup data model","text":"<p>This page and its subsections detail the different JSON objects and arrays with their expected values, associated description and examples related to the Setup JSON formatted dataset. </p> <p>The data model presented in this page sub-sections follows the hierarchical structure of the Setup JSON formatted dataset:</p> <pre><code>{\n\"$schema\": \"...\",\n\"version\": \"...\",\n\"scenario\": \"...\",\n\"groups\": [],\n\"acquisitionUnits\": [],\n\"motionDevices\": [],\n\"dataMappings\": [],\n\"specimens\": [],\n\"probes\": [],\n\"wedges\": [],\n}\n</code></pre> <p>Note that: </p> <ul> <li>Most of the objects have an \u2018id\u2019 attribute</li> <li>Arrays are expressed with a 's' (even if there's only one object)</li> <li>Reference to an array item is made by expressing the name of the array (without the 's') + 'Id' <ul> <li>For example a reference to an object in the probes list would be <code>probeId</code></li> </ul> </li> </ul>"},{"location":"json-metadata/setup/data-model/acquisition-units/","title":"Acquisition unit related arrays and objects","text":""},{"location":"json-metadata/setup/data-model/acquisition-units/#acquisitionunits-array","title":"acquisitionUnits array","text":"<p>This acquisitionUnits array lists the acquisitions units used for the capture of the datasets and there parameters.</p> Property Type Unit Description id <code>required</code> integer - The unique acquisition unit id in the JSON structure referenced in the elements of a probe array platform <code>required</code> string - The name of the acquisition unit platform model <code>required</code> string - The model of the acquisition unit serialNumber string - The serial number of the acquisition unit name string - The name of the acquisition unit acquisitionRate <code>required</code> number Hz The acquisition rate of the acquisition unit <p>Related objects: probe, elements</p> <p>Example: </p> <pre><code>\"acquisitionUnits\": [\n    {\n      \"id\": 0,\n      \"platform\": \"OmniScanX3\",\n      \"model\": \"Freedom_64x128\",\n      \"serialNumber\": \"12345XYZ\",\n      \"name\": \"MXU\",\n      \"acquisitionRate\": 120.0\n    }\n]\n</code></pre>"},{"location":"json-metadata/setup/data-model/data-mappings/","title":"Data mappings related arrays and objects","text":"<p>Independently of the non-destructive evaluation method, there's always a need to relate acquisition data to the inspected specimen in terms of positioning. There exist, however, diametrically opposed use case calling for adapted methods to achieve this relationship. For example, most PAUT weld inspection with scanners will relate the data positioning relative to the surface itself with a constant resolution. </p> <p>On the other hand, one could acquire and store phased array acquisition with a 6 axis robot and use complex post-processing methods to achieve inspection data positioning. The dataMappings array specify how inspection data relates to the specimen. </p>"},{"location":"json-metadata/setup/data-model/data-mappings/#datamappings-array","title":"dataMappings array","text":"<p>The dataMappings array describes the relationship between data and the specimen through the scenario coordinate system.</p> Property Type Description id <code>required</code> integer The unique data mapping id in the JSON structure specimenId <code>required</code> integer A unique specimen id in the JSON structure surfaceId <code>required</code> integer A unique surface id in the JSON structure discreteGrid <code>required</code> object A discreteGrid object"},{"location":"json-metadata/setup/data-model/data-mappings/#discretegrid-object","title":"discreteGrid object","text":"<p>The discreteGrid object describes the properties of the scanning grid and its dimensions. </p> Property Type Description scanPattern <code>required</code> string One of the following scan pattern: <code>OneLineScan</code>, <code>RasterScan</code> uCoordinateOrientation string One of the following U coordinate orientation: <code>Around</code>, <code>Along</code>, <code>Width</code>, <code>Length</code> dimensions <code>required</code> array An array of UCoordinate and/or VCoordinate axis object(s) <p>Related objects: specimens, surfaces</p>"},{"location":"json-metadata/setup/data-model/data-mappings/#ucoordinate-object","title":"UCoordinate object","text":"<p>The UCoordinate object describes the discrete grid U dimension. </p> Property Type Unit Description id integer - The unique id of the U axis axis <code>required</code> string - The name of the axis, necessarily <code>UCoordinate</code> quantity <code>required</code> integer - The size of the grid against the U axis resolution <code>required</code> number m The resolution along this axis offset number m The axis offset motionDeviceId integer - Reference to the unique Id of a motionDevice object name string - The name or reference of this coordinate. Can't be null. lastCellRewrited integer - When the acquisition has been done in Time mode (no encoder) this axis is a circular buffer in which the first position is given in lastCellRewrited <p>Related objects: motionDevice</p>"},{"location":"json-metadata/setup/data-model/data-mappings/#vcoordinate-object","title":"VCoordinate object","text":"<p>The VCoordinate object describes the discrete grid V dimension. </p> Property Type Unit Description id integer - The unique id of the U axis axis <code>required</code> string - The name of the axis, necessarily <code>VCoordinate</code> quantity <code>required</code> integer - The size of the grid against the U axis resolution <code>required</code> number m The resolution along this axis offset number m The axis offset motionDeviceId integer - Reference to the unique Id of a motionDevice object name string - The name or reference of this coordinate. Can't be null. <p>Related objects: motionDevice</p>"},{"location":"json-metadata/setup/data-model/motion-devices/","title":"Motion devices related arrays and objects","text":""},{"location":"json-metadata/setup/data-model/motion-devices/#motiondevices-array","title":"motionDevices array","text":"<p>This array list the motion devices used to move the probe(s) over the specimen.</p> Property Type Description id <code>required</code> integer The unique motion device id in the JSON structure referenced in <code>dimensions</code> array of discreteGrid object name string Name of the motion device encoder <code>required</code> object An encoder object <p>Related objects: discreteGrid, UCoordinate, VCoordinate</p>"},{"location":"json-metadata/setup/data-model/motion-devices/#encoder-object","title":"encoder object","text":"<p>This object describes a generic encoder used to register the position of a motion device.</p> Property Type Unit Description serialNumber string - The serial number of the encoder mode <code>required</code> string - One of the following encoder pulse mode used for recording the position: <code>Quadrature</code>,<code>ClockDir</code>,<code>PulseUp</code>,<code>PulseDown</code> stepResolution <code>required</code> number m/step Resolution of the encoder preset number - Preset value acquisitionDirection string - One of the following possibility, i.e acquiring in one direction or both: <code>Unidirectional</code>, <code>Bidirectional</code> <p>Example:</p> <pre><code>\"motionDevices\": [\n    {\n      \"id\": 0,\n      \"name\": \"Default\",\n      \"encoder\": {\n        \"mode\": \"Quadrature\",\n        \"stepResolution\": 12.0,\n        \"preset\": 0.0,\n        \"acquisitionDirection\": \"Bidirectional\"\n      }\n    }\n]\n</code></pre>"},{"location":"json-metadata/setup/data-model/probes/","title":"Probes related arrays and objects","text":"<p>Ultrasonic probes are transducers that generate and receive high-frequency sound waves to inspect materials for internal flaws, thickness measurements, or material characterization.</p>"},{"location":"json-metadata/setup/data-model/probes/#probes-array","title":"probes array","text":"<p>The probes array describes a generic probe comprising a list of properties.</p> Property Type Description id* integer The unique probe id in the JSON structure model string The probe model reference serie string The probe serie reference serialNumber string The probe serial number wedgeAssociation object A wedgeAssociation object One of the following sub-object:          <ul> <li>conventionalRound*</li> <li>conventionalRectangular*</li> <li>phasedArrayLinear*</li> </ul> object"},{"location":"json-metadata/setup/data-model/probes/#conventionalround-object","title":"conventionalRound object","text":"<p>The conventionalRound object describes a conventional single-element ultrasonic probe having a round shape. </p> Property Type Unit Description centralFrequency <code>required</code> number Hz The central frequency of the probe diameter <code>required</code> number m The diameter of the probe probe active element elements <code>required</code> array - The probe elements array <p></p> <p>Example:</p> <pre><code>\"conventionalRound\": {\n  \"centralFrequency\": 5000000.0,\n  \"diameter\": 0.00635,\n  \"elements\": [\n    {\n      \"id\": 0,\n      \"acquisitionUnitId\": 0,\n      \"connectorName\": \"P1\"\n    }\n  ]\n}\n</code></pre>"},{"location":"json-metadata/setup/data-model/probes/#conventionalrectangular-object","title":"conventionalRectangular object","text":"<p>The conventionalRectangular object describes a conventional single-element ultrasonic probe having a rectangular shape. </p> Property Type Unit Description centralFrequency <code>required</code> number Hz The central frequency of the probe length <code>required</code> number m The length of the probe active element width <code>required</code> number m The width of the probe active element elements <code>required</code> array - elements <p></p> <p>Example:</p> <pre><code>\"conventionalRectangular\": {\n  \"length\": 0.02,\n  \"width\": 0.01,\n  \"centralFrequency\": 10000000.0,\n  \"elements\": [\n    {\n      \"id\": 0,\n      \"acquisitionUnitId\": 0,\n      \"connectorName\": \"P1\"\n    }\n  ]\n}\n</code></pre>"},{"location":"json-metadata/setup/data-model/probes/#phasedarraylinear-object","title":"phasedArrayLinear object","text":"<p>The phasedArrayLinear object describes a phased array ultrasonic probe having a linear shape. </p> Property Type Unit Description centralFrequency <code>required</code> number Hz The central frequency of all elements of the probe elements array - The probe elements array primaryAxis <code>required</code> object - A probeAxis object describing the primary axis of the phased array linear probe secondaryAxis <code>required</code> object - A probeAxis objectdescribing the primary axis of the phased array linear probe <p>Currently, the following use cases are covered by the phasedArrayLinear object definition:</p> <ul> <li>1D linear array with flat active face. </li> <li>1D linear array with curved active face along the primary axis.</li> <li>1D linear array with curved active face along the secondary axis.</li> <li>2D linear array with flat active face. </li> <li>2D linear array with curved active face along the primary axis.</li> <li>2D linear array with curved active face along the secondary axis.</li> </ul>"},{"location":"json-metadata/setup/data-model/probes/#elements-array","title":"elements array","text":"<p>The elements array lists the elements of a probe and there properties. </p> Property Type Description id <code>required</code> integer The unique id of the probe element pinId <code>required</code> integer The pin id to which the element is connected acquisitionUnitId <code>required</code> integer The unique id of the acquisition unit to which the element of the probe is connected connectorName <code>required</code> string The name of the connector used to interface between each element and the acquisition unit primaryIndex integer Element numbering against the probe primary axis secondaryIndex integer Element numbering against the probe secondary axis enable boolean Whether the element is activated or not"},{"location":"json-metadata/setup/data-model/probes/#probeaxis-object","title":"probeAxis object","text":"<p>Teh probeAxis object describes a given probe axis. </p> <p>Illustration</p> Property Type Unit Description elementGap <code>required</code> number m The spacing between two adjacent elements elementQuantity <code>required</code> integer - The number of elements in the array along this axis elementLength <code>required</code> number m The length of a single element of the array where all elements have the same length along this axis referencePoint <code>required</code> number - The distance between the casing embedding the array and the center of the first element  along this axis casingLength number m The length of the casing embedding the array along this axis <p>Hypothesis:</p> <ul> <li>Constant elementLength and elementGap for elementQuantity distributed along the probe primary axis. </li> <li>Constant elementLength and elementGap for elementQuantity distributed along the probe secondary axis. </li> <li>Probe surface may be curved along the first or secondary probe axis but not both.</li> </ul> <p></p> <p>Example: </p> <pre><code>\"phasedArrayLinear\": {\n  \"centralFrequency\": 5000000.0,\n  \"elements\": [\n    {\n      \"id\": 0,\n      \"pinId\": 0,\n      \"acquisitionUnitId\": 0,\n      \"connectorName\": \"PA\",\n      \"primaryIndex\": 0,\n      \"secondaryIndex\": 0,\n      \"enabled\": true\n    },\n    {\n      \"id\": 1,\n      \"pinId\": 1,\n      \"acquisitionUnitId\": 0,\n      \"connectorName\": \"PA\",\n      \"primaryIndex\": 1,\n      \"secondaryIndex\": 0,\n      \"enabled\": true\n    },\n    {...}\n  ],\n  \"primaryAxis\": {\n    \"elementGap\": 0.0,\n    \"elementQuantity\": 64,\n    \"elementLength\": 0.0005,\n    \"referencePoint\": -0.0366,\n    \"casingLength\": 0.04\n  },\n  \"secondaryAxis\": {\n    \"elementGap\": 0.0,\n    \"elementQuantity\": 1,\n    \"elementLength\": 0.01,\n    \"referencePoint\": 0.0,\n    \"casingLength\": 2E-06\n  }\n}\n</code></pre>"},{"location":"json-metadata/setup/data-model/probes/#wedgeassociation-object","title":"wedgeAssociation object","text":"<p>The wedgeAssociation object describes the association of a probe with a wedge. </p> Property Type Description wedgeId <code>required</code> integer The associated wedge Id mountingLocationId <code>required</code> integer The associated mounting location Id orientation string Probe mounting orientation, one of <code>Normal</code> or <code>Reverse</code> <p>Example: </p> <pre><code>\"wedgeAssociation\": {\n  \"wedgeId\": 0,\n  \"mountingLocationId\": 0,\n  \"orientation\": \"Normal\"\n}\n</code></pre>"},{"location":"json-metadata/setup/data-model/probes/#example","title":"Example","text":"<p>Example of a probes array item for a 5L64-A32 phased array linear probe. </p> <pre><code>\"probes\": [\n    {\n      \"id\": 0,\n      \"model\": \"5L64-A32\",\n      \"serie\": \"A32\",\n      \"phasedArrayLinear\": {\n        \"centralFrequency\": 5000000.0,\n        \"elements\": [\n          {\n            \"id\": 0,\n            \"pinId\": 0,\n            \"acquisitionUnitId\": 0,\n            \"connectorName\": \"PA\",\n            \"primaryIndex\": 0,\n            \"secondaryIndex\": 0,\n            \"enabled\": true\n          },\n          {\n            \"id\": 1,\n            \"pinId\": 1,\n            \"acquisitionUnitId\": 0,\n            \"connectorName\": \"PA\",\n            \"primaryIndex\": 1,\n            \"secondaryIndex\": 0,\n            \"enabled\": true\n          },\n          {...}\n        ],\n        \"primaryAxis\": {\n          \"elementGap\": 0.0,\n          \"elementQuantity\": 64,\n          \"elementLength\": 0.0005,\n          \"referencePoint\": -0.0366,\n          \"casingLength\": 0.04\n        },\n        \"secondaryAxis\": {\n          \"elementGap\": 0.0,\n          \"elementQuantity\": 1,\n          \"elementLength\": 0.01,\n          \"referencePoint\": 0.0,\n          \"casingLength\": 2E-06\n        }\n      },\n      \"wedgeAssociation\": {\n        \"wedgeId\": 0,\n        \"mountingLocationId\": 0,\n        \"orientation\": \"Normal\"\n      }\n    }\n]\n</code></pre>"},{"location":"json-metadata/setup/data-model/specimens/","title":"Specimens related arrays and objects","text":""},{"location":"json-metadata/setup/data-model/specimens/#specimens-array","title":"specimens array","text":"<p>The specimens array lists the specimens on which the inspection is carried on. </p> Property Type Description id* integer The unique specimen id in the JSON structure One of the following sub-object:          <ul> <li>plateGeometry</li> <li>pipeGeometry</li> <li>barGeometry</li> </ul> object weldGeometry object  A weldGeometry object customOverlay2D object A customOverlay2D object"},{"location":"json-metadata/setup/data-model/specimens/#plategeometry-object","title":"plateGeometry object","text":"<p>The plateGeometry object describes a generic plate geometry. </p> Property Type Unit Description width number m The plate width length number m The plate length thickness <code>required</code> number m The plate thickness material <code>required</code> object - A material object surfaces <code>required</code> array - A surfaces array"},{"location":"json-metadata/setup/data-model/specimens/#pipegeometry-object","title":"pipeGeometry object","text":"<p>The pipeGeometry object describes a generic pipe geometry. </p> Property Type Unit Description length number m The pipe length thickness <code>required</code> number m The pipe thickness outerRadius number m The outer radius of the pipe angularOpening number \u00b0 The angular opening of the pipe material <code>required</code> object - A material object surfaces <code>required</code> array - A surfaces array"},{"location":"json-metadata/setup/data-model/specimens/#bargeometry-object","title":"barGeometry object","text":"<p>The barGeometry object describes a generic bar geometry. </p> Property Type Unit Description length <code>required</code> number m The bar length diameter <code>required</code> number m The bar diameter material <code>required</code> object - A material object surfaces <code>required</code> array - A surfaces array"},{"location":"json-metadata/setup/data-model/specimens/#material-object","title":"material object","text":"<p>This object describes generic material properties. </p> Property Type Unit Description name <code>required</code> string - Name of the material longitudinalWave <code>required</code> object - A wave object transversalWave <code>required</code> object - A wave object density number kg/m3 Density of the material"},{"location":"json-metadata/setup/data-model/specimens/#wave-object","title":"wave object","text":"<p>The wave object describes an ultrasonic wave. </p> Property Type Unit Description nominalVelocity <code>required</code> number m/s Speed of sound in the material attenuationCoefficient number Attenuation coefficient in the material"},{"location":"json-metadata/setup/data-model/specimens/#surfaces-array","title":"surfaces array","text":"<p>This array lists surfaces.</p> Property Type Description id <code>required</code> integer If of the surface ... name <code>required</code> string Name of the surface, one of: <code>Top</code>, <code>Bottom</code>"},{"location":"json-metadata/setup/data-model/specimens/#weldgeometry-object","title":"weldGeometry object","text":"<p>The weldGeometry object describes a generic weld geometry. </p> Property Type Unit Description weldAngle <code>required</code> number \u00b0 The weld angle material <code>required</code> object - A material object bevelShape <code>required</code> string - The bevel shape, one of: <code>U</code>, <code>V</code> symmetry <code>required</code> string - The weld symmetry type, one of: <code>Symmetric</code>, <code>StraightLeft</code>, <code>StraightRight</code> heatAffectedZoneWidth number m The ZAT width offset number m upperCap object - A upperCap object lowerCap object - A lowerCap object fills object - A fills array hotPass object - A hotPass object land object - A land object root object - A root object"},{"location":"json-metadata/setup/data-model/specimens/#uppercap-object","title":"upperCap object","text":"<p>The upperCap object describes a weld upper cap. </p> Property Type Unit Description width number m height <code>required</code> number m"},{"location":"json-metadata/setup/data-model/specimens/#lowercap-object","title":"lowerCap object","text":"<p>The lowerCap object describes a weld lower cap.</p> Property Type Unit Description width number m height <code>required</code> number m"},{"location":"json-metadata/setup/data-model/specimens/#fills-array","title":"fills array","text":"<p>The fills array describes a weld fills.</p> Property Type Unit Description angle <code>required</code> number \u00b0 height <code>required</code> number m"},{"location":"json-metadata/setup/data-model/specimens/#hotpass-object","title":"hotPass object","text":"<p>The hotPass object describes a weld hot pass</p> Property Type Unit Description angle <code>required</code> number \u00b0 height <code>required</code> number m"},{"location":"json-metadata/setup/data-model/specimens/#land-object","title":"land object","text":"<p>The land object describes a weld land.</p> Property Type Unit Description height <code>required</code> number m"},{"location":"json-metadata/setup/data-model/specimens/#root-object","title":"root object","text":"<p>The root object describes a weld root.</p> Property Type Unit Description angle <code>required</code> number \u00b0 height <code>required</code> number m"},{"location":"json-metadata/setup/data-model/specimens/#customoverlay2d-object","title":"customOverlay2D object","text":"<p>The customOverlay2D object describes a generic custom 2D CAD overlay. </p> Property Type Unit Description filename <code>required</code> string - The file name containing the overlay format <code>required</code> string - The file format extension <code>required</code> string - The extension of the file containing the overlay path <code>required</code> string - The path to the file localScale <code>required</code> object - A coordinate object localTranslation <code>required</code> object - A coordinate object translation <code>required</code> object - A coordinate object scale <code>required</code> number - The scale to be applied to the overlay rotation <code>required</code> number - The rotation to be applied to the overlay width <code>required</code> number m thickness <code>required</code> number m"},{"location":"json-metadata/setup/data-model/specimens/#coordinate-object","title":"coordinate object","text":"<p>This object describes a generic coordinate system. </p> Property Type Description x <code>required</code> string y <code>required</code> string z <code>required</code> string"},{"location":"json-metadata/setup/data-model/specimens/#example","title":"Example","text":"<pre><code>\"specimens\": [\n  {\n    \"id\": 0,\n    \"plateGeometry\": {\n      \"width\": 0.35000000000000003,\n      \"length\": 0.1,\n      \"thickness\": 0.011,\n      \"surfaces\": [\n        {\n          \"id\": 0,\n          \"name\": \"Top\"\n        }\n      ],\n      \"material\": {\n        \"name\": \"Plexiglass\",\n        \"longitudinalWave\": {\n          \"nominalVelocity\": 2700.0,\n          \"attenuationCoefficient\": 0.91\n        },\n        \"transversalVerticalWave\": {\n          \"nominalVelocity\": 0.0,\n          \"attenuationCoefficient\": 0.0\n        },\n        \"density\": 1.18\n      }\n    }\n  }\n]\n</code></pre>"},{"location":"json-metadata/setup/data-model/wedges/","title":"Wedges related arrays and objects","text":"<p>Wedges are used to direct ultrasonic waves into a test material at a specific angle, enabling the detection of flaws at different orientations. It helps convert wave modes and ensures efficient energy transfer between the probe (transducer) and the test piece.</p>"},{"location":"json-metadata/setup/data-model/wedges/#wedges-array","title":"wedges array","text":"<p>Teh wedges array lists the wedge(s) used with the associated probe(s).</p> Property Type Description id <code>required</code> integer The unique wedge id in the JSON structure referenced in wedgeAssociation object model <code>required</code> string The wedge model reference serie string The wedge serie reference serialNumber string The wedge serial number angleBeamWedge <code>required</code> object An angleBeamWedge object positioning <code>required</code> object A positioning  object <p>Related objects: wedgeAssociation</p>"},{"location":"json-metadata/setup/data-model/wedges/#anglebeamwedge-object","title":"angleBeamWedge object","text":"<p>The angleBeamWedge object describes an angle beam wedge. </p> Property Type Unit Description width <code>required</code> number m The width of the wedge height <code>required</code> number m The height of the wedge length <code>required</code> number m The length of the wedge longitudinalVelocity <code>required</code> number m/s The ultrasound waves longitudinal velocity inside the wedge material mountingLocations <code>required</code> array - A mountingLocations array pocketDepth number m The pocket depth of the wedge <p>Hypothesis and conventions: </p> <ul> <li>Wedge body and contact surface are considered symmetrical.</li> <li>The wedge contact surface (with the specimen) is flat or curved with a single radius of curvature.</li> <li>The probe(s) contact surface is flat.</li> <li>The positionning of the probe first element on a given wedge, which correspond to the so-called mounting location, is standardized (by design of the probe/wedge assembly).</li> <li>The wedge coordinate system \\((X_W, Y_W, Z_W)\\) origin is centered at the bottom of its front face (see figure below).</li> <li>The wedge coordinate system orientation is defined such as to have the \\((Y_w)\\) axis aligned with the wedge length; the \\((X_w)\\) axis aligned with the wedge width and the \\((Z_w)\\) axis aligned with the wedge height </li> </ul> <p></p> <p>Flat wedges</p> <ul> <li>For flat wedges, the application of the above rules is straightforward as there's no ambiguity for the definition of the probe positioning.</li> </ul> <p>Curved Wedge</p> <ul> <li> <p>The application of a wedge on a tubular component  typically involves the use of a wedge with a matching curved surface. Such wedges require additional conventions.</p> </li> <li> <p>Typical configurations are axial outer diameter (AOD) or circumferential outer diameter (COD). Note that a skew angle for outer or inner diameter inspection is also possible in this definition.</p> </li> <li> <p>The curved wedge face is handled by redefining the tertiary offset and by defining the actual wedge curvature in the wedge object. The tertiary offset is defined for a flat wedge that is machined to the desired curvature.   </p> </li> </ul>"},{"location":"json-metadata/setup/data-model/wedges/#mountinglocations-array","title":"mountingLocations array","text":"<p>The mountingLocations array describes the mounting location(s) of the wedge.</p> Property Type Unit Description id <code>required</code> integer - The mounting location id referenced in anglebeamWedge object wedgeAngle <code>required</code> number degree The wedge angle in degree squintAngle number degree The wedge squint angle in degree roofAngle number degree The wedge roof angle in degree primaryOffset <code>required</code> number m The wedge primary offset secondaryOffset <code>required</code> number m The wedge secondary offset tertiaryOffset <code>required</code> number m The wedge tertiary offset <p>Hypothesis and conventions: </p> <ul> <li>A probe is maintained in position on a wedge through an interface face, named mounting location, which origin \\((x_m, y_m, z_m)\\) is defined by the aforementionned primaryOffset, secondaryOffset and tertiaryOffset plus three angles:</li> <li>wedgeAngle \\(\\beta\\) : Angle between the normal of the interface face, \\(z_m\\), and the \\(z_w\\) axis</li> <li>squintAngle \\(\\alpha\\) : Angle between the projection of the probe primary axis on the \\(x_w\\)/\\(y_w\\) plane, \\(y_m\\), and the \\(y_w\\) axis. </li> <li> <p>roofAngle \\(\\gamma\\) : Angle between \\(x_m\\) and \\(x_w\\), defined by a rotation around the probe primary axis.</p> </li> <li> <p>The wedge skew angle is defined by the angle between the wedge and u axis on the surface of the part at the wedge origin.</p> </li> <li> <p>Its positioning on the specimen is given in relation to the \\((u,v)\\) coordinates with the uCoordinateOffset and vCoordinateOffset located in the Setup JSON formatted dataset at wedges[x].positioning.   </p> </li> <li> <p>The positioning of the probe \\((x_p, y_p, z_p)\\) coordinate system is achieved in the \\((x_w,y_w,y_w)\\) coordinates through the successive application of the primaryOffset (on the \\((y_w)\\) axis), the secondaryOffset (on the \\((x_w)\\) axis) and the tertiaryOffset (on the \\((y_w)\\) axis). The origin of the probe coordinate system is the center of the first probe element.</p> </li> <li>The orientation of the probe \\((x_p, y_p, z_p)\\) coordinate system is achieved in the \\((x_w,y_w,y_w)\\) coordinates through the successive application of the wedgeAngle, squintAngle, and roofAngle.</li> <li>It is possible to have multiple probe mountingLocations defined on a single wedge, for example in the case of Dual Linear Array (DLA) or Dual Matrix Array (DMA) probe</li> </ul> <p></p>"},{"location":"json-metadata/setup/data-model/wedges/#positioning-object","title":"positioning object","text":"<p>The positioning object describes the wedge position with respect to the specimen and its surface.</p> Property Type Description specimendId <code>required</code> integer The related specimend id (plate, pipe, bar) surfaceId <code>required</code> integer The related surface id (plate surface, pipe surface, bar surface) uCoordinateOffset <code>required</code> number The offset against U axis ?? vCoordinateOffset <code>required</code> number The offset against V axis or coordinate object ? skewAngle <code>required</code> number The skew angle in degrees <p>Related objects: specimens, surfaces</p>"},{"location":"json-metadata/setup/data-model/groups/","title":"Groups related arrays and objects","text":"<p>A group comprises datasets and processes that are inherently interconnected. Group identity is defined by its first process (processId=0). A dataset invariably originates from a process.</p>"},{"location":"json-metadata/setup/data-model/groups/#groups-array","title":"groups array","text":"<p>The groups array describes a group comprising datasets and/or processes</p> Property Type Description id <code>required</code> integer The unique group id in the JSON structure name string The group name usage string Additional information concerning the use of the group (for example: CouplingCheck) datasets array One or several datasets among datasets processes array One or several processes among processes"},{"location":"json-metadata/setup/data-model/groups/datasets/","title":"Datasets related arrays and objects","text":"<p>A dataset is a container for data of homogeneous nature, characterized by standardized data classes, with its volume potentially necessitating storage within the HDF5 structure. It can exist even if data are not yet created or available. Through the process it originates, it establishes a connection between the data and physical reality (time/space). </p>"},{"location":"json-metadata/setup/data-model/groups/datasets/#datasets-array","title":"datasets array","text":"<p>The datasets array describes dataset(s).</p> Property Type Description id integer The unique dataset id within the group name string The name of the dataset storageMode string One of <code>Independent</code> or <code>Paintbrush</code> dataTransformations array A dataTransformations object describing how to display the dataset path string The path to the dataset in the HDF5 structure dataClass string One of <code>AScanAmplitude</code>, <code>AScanStatus</code>, <code>TfmValue</code>, <code>TfmStatus</code>, <code>FiringSource</code>, <code>CScanPeak</code>, <code>CScanStatus</code>, <code>CScanTime</code> dataValue <code>required</code> object A dataValue object dimensions <code>required</code> array One of the following array configuration: [<code>UCoordinate</code>, <code>VCoordinate</code>, <code>Ultrasound</code>], [<code>UCoordinate</code>, <code>Beam</code>, <code>Ultrasound</code>]"},{"location":"json-metadata/setup/data-model/groups/datasets/#datatransformations-array","title":"dataTransformations array","text":"Property Type Description processId <code>required</code> integer The processId of the last process in the chain groupId integer The groupId of the last process in the chain (not required if in the same group)"},{"location":"json-metadata/setup/data-model/groups/datasets/#datavalue-object","title":"dataValue object","text":"<p>The dataValue object describes the range of values a dataset can take. </p> Property Type Description min <code>required</code> number Minimum value possible of the dataset max <code>required</code> number Maximum value possible of the dataset unitMin <code>required</code> integer Minimum value possible of the dataset in the corresponding unit unitMax <code>required</code> integer Maximum value possible of the dataset in the corresponding unit unit <code>required</code> string One of: <code>Percent</code> <p>To map a value from the range [min, max] to [unitMin, unitMax], use the following formula:</p> \\[  x_{scaled}= \\left( \\frac{x - \\text{min}}{\\text{max} - \\text{min}} \\right) \\times (\\text{unitMax} - \\text{unitMin}) + \\text{unitMin}  \\]"},{"location":"json-metadata/setup/data-model/groups/datasets/#dimensions-array","title":"dimensions array","text":"<p>The dimensions array describes the different dimensions (axes) of the dataset(s).</p> Property Type Unit Description axis <code>required</code> string - One of <code>UCoordinate</code>, <code>VCoordinate</code>, <code>WCoordinate</code>, <code>Ultrasound</code>, <code>stackedAScan</code> offset number m or s Offset to position the dataset quantity <code>required</code> integer - Size of the dataset against this axis (dimension) resolution <code>required</code> number m or s Resolution of the dataset against this axis (dimension) <p>Dimensions are always given in the same order as the HDF5 data has been created.</p> <p>These dimensions can vary depending on the the group and scan types.</p>"},{"location":"json-metadata/setup/data-model/groups/datasets/#datasets-dimensions-for-typical-use-cases","title":"Datasets dimensions for typical use cases","text":""},{"location":"json-metadata/setup/data-model/groups/datasets/#phased-array-one-line-scan","title":"Phased Array One Line Scan","text":"<pre><code>\"dimensions\": [\n  {\n    \"axis\": \"UCoordinate\",\n    \"quantity\": 22,\n    \"resolution\": 0.001\n  },\n  {\n    \"axis\": \"Beam\",\n    \"beams\": [\n      {\n        \"velocity\": 3240.0,\n        \"skewAngle\": 90.0,\n        \"refractedAngle\": 45.0,\n        \"uCoordinateOffset\": 0.004,\n        \"vCoordinateOffset\": -0.069689058139837418,\n        \"ultrasoundOffset\": 0.0\n      },\n      {\n        \"velocity\": 3240.0,\n        \"skewAngle\": 90.0,\n        \"refractedAngle\": 45.0,\n        \"uCoordinateOffset\": 0.004,\n        \"vCoordinateOffset\": -0.069111085619919382,\n        \"ultrasoundOffset\": 0.0\n      },\n      {\n        \"velocity\": 3240.0,\n        \"skewAngle\": 90.0,\n        \"refractedAngle\": 45.0,\n        \"uCoordinateOffset\": 0.004,\n        \"vCoordinateOffset\": -0.068533113100001347,\n        \"ultrasoundOffset\": 0.0\n      }\n    ]\n  },\n  {\n    \"axis\": \"Ultrasound\",\n    \"quantity\": 620,\n    \"resolution\": 1.3E-07\n  }\n]\n</code></pre>"},{"location":"json-metadata/setup/data-model/groups/datasets/#phased-array-zero-degree-raster","title":"Phased Array Zero Degree Raster","text":"<pre><code>\"dimensions\": [\n  {\n    \"axis\": \"UCoordinate\",\n    \"offset\": 0.0,\n    \"quantity\": 351,\n    \"resolution\": 0.001\n  },\n  {\n    \"axis\": \"VCoordinate\",\n    \"offset\": -0.07455,\n    \"quantity\": 114,\n    \"resolution\": 0.001\n  },\n  {\n    \"axis\": \"Ultrasound\",\n    \"offset\": 0.0,\n    \"quantity\": 568,\n    \"resolution\": 2E-08\n  }\n]\n</code></pre>"},{"location":"json-metadata/setup/data-model/groups/datasets/#tfm","title":"TFM","text":"<pre><code>\"dimensions\": [\n    {\n      \"axis\": \"UCoordinate\",\n      \"offset\": 0.0,\n      \"quantity\": 1055,\n      \"resolution\": 0.001\n    },\n    {\n      \"axis\": \"VCoordinate\",\n      \"offset\": -0.012969999999999999,\n      \"quantity\": 175,\n      \"resolution\": 0.00015120689655172411\n    },\n    {\n      \"axis\": \"WCoordinate\",\n      \"offset\": 0.0,\n      \"quantity\": 64,\n      \"resolution\": 0.00015111111111111111\n    }\n]\n</code></pre>"},{"location":"json-metadata/setup/data-model/groups/datasets/#fmc","title":"FMC","text":"<pre><code>\"dimensions\": [\n    {\n      \"axis\": \"UCoordinate\",\n      \"quantity\": 1,\n      \"resolution\": 0.001,\n      \"offset\": 0.0\n    },\n    {\n      \"axis\": \"StackedAScan\",\n      \"quantity\": 8192000,\n      \"resolution\": 1e-08\n    }\n]\n</code></pre>"},{"location":"json-metadata/setup/data-model/groups/processes/","title":"Introduction","text":"<p>A process describes an operation aimed at creating, modifying, or formatting data, which are ultimately stored or referenced within a dataset. Processes have inputs and outputs and can be directly linked to a dataset or to another process.</p> <p>A list of processes related to a particular group provides information on how the data was created, including an acquisition instrument configuration, specific hardware process, or software process.</p> <p>The processes can be chained to create a particular data using a \"processId\" to the previous process in the chain. If the processId is not present, the process is the first in the chain. </p>"},{"location":"json-metadata/setup/data-model/groups/processes/#processes-related-arrays-and-objects","title":"Processes related arrays and objects","text":"<pre><code>flowchart TD\n    A[Processes] --&gt; B(inputs)\n    A[Processes] --&gt; C(outputs)\n    A[Processes] --&gt; D(ProcessName)\n</code></pre>"},{"location":"json-metadata/setup/data-model/groups/processes/#processes-array","title":"processes array","text":"<p>This array describes multiple processes</p> Property Type Description id <code>required</code> integer The unique process id in the JSON structure implementation string The process implementation type, can be <code>Software</code> or <code>Hardware</code> inputs object An inputs object describing the different inputs of the process outputs object An outputs object describing the different outputs of the process dataMappingId integer The unique Id of the referenced dataMappings array One of the following sub-object: <ul><li>ultrasonicConventional<li>ultrasonicPhasedArray</li><li>ultrasonicMatrixCapture<li>totalFocusingMethod</li><li>tfmBoxGates<li>thickness</li><li>gain*</li>"},{"location":"json-metadata/setup/data-model/groups/processes/#inputs-object","title":"inputs object","text":"Property Type Description groupId <code>required</code> integer A valid group id in the JSON structure processId <code>required</code> integer A valid process id in the JSON structure outputIds array An array containing the specific outputs of the previously referenced process"},{"location":"json-metadata/setup/data-model/groups/processes/#outputs-object","title":"outputs object","text":"Property Type Description id <code>required</code> integer The unique process output id of the specific process datasetId integer A valid and unique dataset id for the group parameters object A simple object storing the parameters related to the given ouput of the process"},{"location":"json-metadata/setup/data-model/groups/processes/gain/","title":"gain object","text":"<p>The gain object serves as a gain process description.</p> Property Type Unit Description gain* integer dB Gain level <pre><code>\"gain\": 10\n</code></pre>"},{"location":"json-metadata/setup/data-model/groups/processes/tfmBoxGates/","title":"tfmBoxGates array","text":"<p>The tfmBoxGates array serves as a box-type gate process description for a TFM image</p> Property Type Unit Description id* integer - Unique id for the TfmBoxGates item within the TfmBoxGates process threshold number % Threshold level on the TFM image dynamic range yImagingMin number m The start position of the box gate against the y axis yImagingMax number m The end position of the box gate against the y axis zImagingMin number m The start position of the box gate against the z axis zImagingMax number m The end position of the box gate against the z axis <pre><code>\"tfmBoxGates\": [\n    {\n        \"id\": 1,\n        \"threshold\": 10.0,\n        \"yImagingMin\": 0.0022,\n        \"yImagingMax\": 0.0238,\n        \"zImagingMin\": 0.0012595000000000002,\n        \"zImagingMax\": 0.0237505\n    }\n]\n</code></pre>"},{"location":"json-metadata/setup/data-model/groups/processes/thickness/","title":"thickness object","text":"<p>The thickness object serves as thickness measurement process description.</p> Property Type Unit Description min* number m max* number m gates* array - gates"},{"location":"json-metadata/setup/data-model/groups/processes/thickness/#gates-array","title":"gates array","text":"<p>The gates array lists the different gates used for the thickness measurement. </p> Property Type Description id* number The unique id of the gate gateDetection* string Type of gate detection, one of <code>Crossing</code>, <code>MaximumPeak</code>, <code>FirstPeak</code>, <code>LastPeak</code> <pre><code>\"thickness\": {\n    \"min\": 0.00375,\n    \"max\": 0.01575,\n    \"gates\": [\n        {\n        \"id\": 1,\n        \"timeSelection\": \"Peak\"\n        }\n    ]\n}\n</code></pre>"},{"location":"json-metadata/setup/data-model/groups/processes/totalFocusingMethod/","title":"totalFocusingMethod object","text":"<p>The totalFocusingMethod object serves as a Total Focusing Method (TFM) process description.</p> Property Type Unit Description id* integer - Unique id for the totalFocusingMethod object within the process name string - Cusotm name of the totalFocusingMethod object signalSource string - Signal used to compute the TFM, one of <code>Analytic</code> or <code>Real</code> gain* number dB Gain applied to the TFM image referenceAmplitude number % referenceGain number dB rectangularGrid* object - rectangularGrid object fmcPulserIds array - Array listing the ids of the pulsers used to compute the TFM image fmcReceiverIds array - Array listing the ids of the receivers used to compute the TFM image pathName* string - Wave path name, often reffered as \"mode\" or \"view\" (e.g.: \"T-T\", \"LL-T\") waveSet* object - waveSet object columns array - columns array"},{"location":"json-metadata/setup/data-model/groups/processes/totalFocusingMethod/#rectangulargrid-object","title":"rectangularGrid object","text":"<p>The rectangularGrid object describes the dimensions of the Region of Interest (ROI) used to compute the TFM.</p> Property Type Description yImagingLimits* object range object zImagingLimits* object range object"},{"location":"json-metadata/setup/data-model/groups/processes/totalFocusingMethod/#range-object","title":"range object","text":"Property Type Unit Description min* number m Starting position of the grid max* number m Ending position of the grid resolution* number m Resolution of the grid <pre><code>\"rectangularGrid\": {\n    \"yImagingLimits\": {\n        \"min\": 0.001,\n        \"max\": 0.025,\n        \"resolution\": 5.1E-05\n    },\n    \"zImagingLimits\": {\n        \"min\": 1E-05,\n        \"max\": 0.025,\n        \"resolution\": 8.2E-05\n    }\n}\n</code></pre>"},{"location":"json-metadata/setup/data-model/groups/processes/totalFocusingMethod/#waveset-object","title":"waveSet object","text":"<p>The waveSet object describes the pathName in more details, listing the </p> Property Type Description pulsings* array Array containing the list of modes (or views) for the forward path, one of <code>Longitudinal</code>, <code>TransversalVertical</code> receivings* array Array containing the list of modes (or views) for the backward path, one of <code>Longitudinal</code>, <code>TransversalVertical</code> <pre><code>\"waveSet\": {\n    \"pulsings\": [\n        \"TransversalVertical\",\n        \"TransversalVertical\"\n    ],\n    \"receivings\": [\n        \"Longitudinal\"\n    ]\n}\n</code></pre>"},{"location":"json-metadata/setup/data-model/groups/processes/totalFocusingMethod/#columns-array","title":"columns array","text":"<p>The columns array helps describing the Time-Corrected Gain (TCG) parameters used for each column of the TFM image </p> Property Type Description id* integer Unique column id of the TFM image gainMap* object An object containing TCG points array"},{"location":"json-metadata/setup/data-model/groups/processes/totalFocusingMethod/#gainmap-object","title":"gainMap object","text":"<p>The gainMap contain the information related to the gain applied to each the TFM image for TCG</p> Property Type Description points* array TCG points array"},{"location":"json-metadata/setup/data-model/groups/processes/totalFocusingMethod/#points-array","title":"points array","text":"<p>The points array lists the Time-Corrected Gain (TCG) points, with the corresponding gain to apply for a given position in the column of the TFM image. </p> Property Type Unit Description position* number m Vertical position of the point in the TFM ROI gain* number dB Gain in decibel <pre><code>\"columns\": [\n    {\n    \"id\": 0,\n    \"gainMap\": {\n        \"points\": [\n        {\n            \"position\": 0.0,\n            \"gain\": 0.0\n        },\n        {\n            \"position\": 0.0080,\n            \"gain\": 28.8\n        },\n        {\n            \"position\": 0.0150,\n            \"gain\": 33.9\n        }\n        ]\n    }\n    },\n    {\n    \"id\": 1,\n    \"gainMap\": {\n        \"points\": [\n        {\n            \"position\": 0.0,\n            \"gain\": 0.0\n        },\n        {\n            \"position\": 0.0080,\n            \"gain\": 29.3\n        },\n        {\n            \"position\": 0.0151,\n            \"gain\": 34.7\n        }\n        ]\n    }\n    },\n    ...\n]\n</code></pre>"},{"location":"json-metadata/setup/data-model/groups/processes/totalFocusingMethod/#example","title":"Example","text":"<pre><code>\"totalFocusingMethod\": {\n    \"id\": 0,\n    \"name\": \"TT-L View\",\n    \"signalSource\": \"Analytic\",\n    \"gain\": 20.0,\n    \"referenceAmplitude\": 80.0,\n    \"referenceGain\": 0.0,\n    \"rectangularGrid\": {\n        \"yImagingLimits\": {\n            \"min\": 0.001,\n            \"max\": 0.025,\n            \"resolution\": 5.1E-05\n        },\n        \"zImagingLimits\": {\n            \"min\": 1E-05,\n            \"max\": 0.025,\n            \"resolution\": 8.2E-05\n        }\n    },\n    \"fmcPulserIds\": [\n        0,\n        1,\n        2,\n        3,\n        4,\n        ...\n    ],\n    \"fmcReceiverIds\": [\n        0,\n        1,\n        2,\n        3,\n        4,\n        ...\n    ],\n    \"pathName\": \"TT-L\",\n    \"waveSet\": {\n        \"pulsings\": [\n            \"TransversalVertical\",\n            \"TransversalVertical\"\n        ],\n        \"receivings\": [\n            \"Longitudinal\"\n        ]\n    },\n    \"columns\": [\n        {\n        \"id\": 0,\n        \"gainMap\": {\n            \"points\": [\n            {\n                \"position\": 0.0,\n                \"gain\": 0.0\n            },\n            {\n                \"position\": 0.0080,\n                \"gain\": 28.8\n            },\n            {\n                \"position\": 0.0150,\n                \"gain\": 33.9\n            }\n            ]\n        }\n        },\n        {\n        \"id\": 1,\n        \"gainMap\": {\n            \"points\": [\n            {\n                \"position\": 0.0,\n                \"gain\": 0.0\n            },\n            {\n                \"position\": 0.0080,\n                \"gain\": 29.3\n            },\n            {\n                \"position\": 0.0151,\n                \"gain\": 34.7\n            }\n            ]\n        }\n        },\n    ...\n}\n</code></pre>"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicConventional/","title":"ultrasonicConventional object","text":"<p>The ultrasonicConventional object serves as a conventional ultrasonic acquisition process.</p> Property Type Unit Description waveMode* string - One of: <code>Longitudinal</code> or <code>TransversalVertical</code> velocity* number m/s Material wave speed corresponding to the specified wave mode (used for beam delay calculation) wedgeDelay number s Delay corresponding to the sound propagation within the wedge rectification string - RF signal rectification type, one of <code>None</code>, <code>Positive</code>, <code>Negative</code>, <code>Full</code> digitizingFrequency number Hz Sampling rate of the saved  A-Scans ascanSynchroMode string - Type of A-Scan syncrhonisation, one of <code>Pulse</code>, <code>SynchroGateRelative</code> ascanCompressionFactor integer - Compression factor applied to A-Scans gain number dB Hardware gain applied to all A-Scans ultrasoundMode string - Ultrasound mode, one of <code>TrueDepth</code>, <code>SoundPath</code>, <code>Time</code> referenceAmplitude number % A-Scan Full-Screen height of the reference amplitude referenceGain number dB Reference gain value to which other gain values will be offsetted smoothingFilter number Hz Characteristic frequency of the smoothing filter averagingFactor integer - Number of averagings beams array - beams array digitalBandPassFilter object - digitalBandPassFilter object pulse object - pulse object gates array - gates array calibrationStates array - calibration states array One of the following sub-object: <ul><li>pulseEcho<li>pitchCatch</li><li>tofd*</li> <p>NOTES:</p> <ul> <li>Compression: Currently, the default compression behavior consists in keeping the maximum value of N consecutive acquisition points in time, N being the value store as the ascanCompressionFactor. </li> </ul>"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicConventional/#pulseecho-object","title":"pulseEcho object","text":"<p>The pulseEcho object list the probe used in an acquisition pattern where the same probe is used at emission and reception.</p> Property Type Description probeId integer The id of the probe used at emission and reception in a pulse-echo setup"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicConventional/#pitchcatch-object","title":"pitchCatch object","text":"<p>The pitchCatch object lists the probes used in an acquisition pattern where one probe is used at emission and an other at reception.</p> Property Type Description pulserProbeId integer The id of the probe used at emission in a pitch-catch setup receiverProbeId integer The id of the probe used at emission in a pitch-catch setup"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicConventional/#tofd-object","title":"tofd object","text":"<p>The tofd object describes the time-of-flight (TOFD) diffraction technique parameters.</p> Property Type Unit Description pulserProbeId integer - The id of the probe used at emission  in a TOFD setup receiverProbeId integer - The id of the probe used at reception in a TOFD setup pcs number m The probe center separation (PCS) in meters, the distance between the exit points of the two probes used for TOFD"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicConventional/#digitalbandpassfilter-object","title":"digitalBandPassFilter object","text":"<p>The digitalBandPassFilter object describes the band-pass filter parameters applied during acquisition.</p> Property Type Unit Description filterType* string - The type of filter, one of: <code>None</code>, <code>LowPass</code>, <code>HighPass</code>, <code>BandPass</code> highCutOffFrequency* number Hz High cutoff frequency in Hz lowCutOffFrequency* number Hz Low cutoff frequency in Hz characteristic* string - One of: <code>None</code>, <code>TOFD</code>"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicConventional/#pulse-object","title":"pulse object","text":"Property Type Unit Description width* number s Time duration, in seconds, of the high-voltage square pulse used to excite the transducer element voltage* number V Amplitude, in Volts, of the square pulse used to excite the transducer element polarity string - Polarity of the square pulse used to excite the transducer element, one of: <code>Bipolar</code>, <code>UnipolarPositive</code>, <code>UnipolarNegative</code>. A <code>Bipolar</code> pulse is assumed to be negative first and then positive."},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicConventional/#tcg-object","title":"tcg object","text":"<p>The tcg object lists the Time-Corrected Gain (TCG) parameters used for the acquisition.</p> Property Type Description synchroMode string One of <code>Pulse</code> or <code>AscanSynchroRelative</code> points* array TCG points array"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicConventional/#points-array","title":"points array","text":"<p>The points array lists the Time-Corrected Gain (TCG) points, with the corresponding gain to apply for a given time increment. </p> Property Type Unit Description time* number s Time increment in seconds gain* number dB Gain in decibel"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicConventional/#gates-object","title":"gates object","text":"Property Type Unit Description id* integer - Unique id of the gate within the acquisition process name string - Name of the gate  (e.g. \"A\", \"B\", \"I\" etc.) geometry string - One of <code>SoundPath</code> or <code>TrueDepth</code> start* number s Gate starting time length* number s Gate time extent threshold* number % Threshold level thresholdPolarity* string - One of <code>Absolute</code>, <code>Positive</code> or <code>Negative</code> synchronization* object - synchronization object"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicConventional/#beams-array","title":"beams array","text":"Property Type Unit Description id* integer - The unique id of the beam within the ultrasonicPhasedArray process refractedAngle* number \u00b0 The refracted angle of the wavefront in the specimen used for this specific beam beamDelay* number s ascanstart* number s When recording of the ascan start for this beam acanLength* number s Time extent of each A-Scan for this beam recurrence number tcg object - tcg object"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicConventional/#synchronization-object","title":"synchronization object","text":"Property Type Description mode string Synchronization mode, one of: <code>Pulse</code> or <code>GateRelative</code> triggeringEvent string When synchronization is performed against a gate (<code>GateRelative</code>), the synchronization triggering event, one of: <code>Peak</code> or <code>Crossing</code> gateId integer When synchronization is performed against a gate (<code>GateRelative</code>), the corresponding gate Id in the ultrasonic acquisition process gates object"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicConventional/#calibrationstates-array","title":"calibrationStates array","text":"<p>The calibrationStates array lists the calibration status (through a calibrationState object), of a given calibration method, as listed below.  </p> Property Type Description sensitivityCalibration object calibrationState object tcgCalibration object calibrationState object velocityCalibration object calibrationState object wedgeDelayCalibration object calibrationState object dacCalibration object calibrationState object dgsCalibration object calibrationState object tofdWedgeDelayCalibration object calibrationState object"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicConventional/#calibrationstate-object","title":"calibrationState object","text":"<p>Same structure for sensitivityCalibration, tcgCalibration, velocityCalibration, wedgeDelayCalibration, dacCalibration, dgsCalibration, tofdWedgeDelayCalibration.</p> Property Type Description calibrated* boolean Indicate whether the calibration was performed or not"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicMatrixCapture/","title":"ultrasonicMatrixCapture object","text":"<p>The ultrasonicMatrixCapture object serves as a generic ultrasonic acquisition process aims at covering simple and advanced cases. It is based on the assumption that the majority of ultrasonic acquisition processes follow an emission/reception sequence where one or several ultrasonic elements are involved. </p> <p>Each single emission/reception sequence is described by a beam with corresponding pulsers (emitters) and receivers (similar to focal laws). For each beam, an elementaryAScan column is partially filled in the corresponding dataset. When all beams have been fired, a complete elementaryAScan column is filled. The next column is filled using the same sequence but at a different physicial location (like using and encoder). Having a different sequence (i.e. different focal laws) for each physical location is not supported but could be through proper difinition of sequences referencing specific beams elements (let me know if interested ..). </p> Property Type Description acquisitionPattern* string Short description of the pattern used, one of <code>FMC</code>, <code>HMC</code>, <code>PWI</code>, <code>Sparse</code> digitizingFrequency* number Net Digitizing Frequency used for all frames pulserFrequency* number Pulser Frequency used for all frames in Hz digitalBandPassFilter object A digitalBandPassFilter object describing the applied filters for all beams waveforms* array An array of waveforms object describing the signal used for a given frame beams* array An array of beams objects describing a sequence of emission and reception If applicable, one of the following sub-object: planeWaveImaging object"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicMatrixCapture/#digitalbandpassfilter-object","title":"digitalBandPassFilter object","text":"Property Type Description filterType* string Type of filter highCuttOffFrequency* number High cutt-off Frequency of the BP Filter in Hz lowCuttOffFrequency* number Low cutt-off Frequency of the BP Filter in Hz characteristic* string Characteristic of the filter"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicMatrixCapture/#waveforms-array","title":"waveforms array","text":"<p>Arbitrary waveforms will be introduced later.</p> Property Type Description id* integer The unique waveform id in the JSON structure One of the following sub-object:          <ul> <li>pulse*</li> </ul> object"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicMatrixCapture/#pulse-object","title":"pulse object","text":"Property Type Description width* number Pulse width in seconds voltage* number Pulse peak-to-peak voltage in volts polarity* string Pulse polarity, one of <code>Unipolar</code>, <code>Bipolar</code>"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicMatrixCapture/#beams-array","title":"beams array","text":"Property Type Description id* number Unique Id of the frame pulsers* array Array describing the different pulsers parameters for the frame receivers* array Array describing the different receivers parameters for the frame"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicMatrixCapture/#pulsers-object","title":"pulsers object","text":"Property Type Description id* number Unique Id of the pulser elementId* number Probe element Id used by the pulser probeId* number Probe Id acting as the emitter in the frame delay* number Delay applied when pulsing with this element waveformId* number Signal used when pulsing with this element"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicMatrixCapture/#receivers-object","title":"receivers object","text":"Property Type Description id* number Unique Id of the receiver elementId* number Probe element Id used by the receiver probeId* number Probe Id acting as the receiver in the frame ascanStart* number When recording of the ascan start for this receiver in seconds ascanLength* number Time extent of the ascan samples saved for this receiver"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicMatrixCapture/#planewaveimaging-object","title":"planeWaveImaging object","text":"Property Type Description quantityAngle number Number of angle steps (number of beams to be formed) velocity number Wave velocity used for delay calculation waveLocation string In which leg the plane wave must be formed, one of <code>WEdge</code>, <code>FirstLeg</code>, <code>SecondLeg</code> waveMode string Wave mode considered for delay calculation (IS IT USEFUL?) startAngle number Sweeping start angle stopAngle number Sweeping stop angle"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicPhasedArray/","title":"ultrasonicPhasedArray object","text":"<p>The ultrasonicPhasedArray object serves as a conventional phased array acquisition process.</p> Property Type Unit Description waveMode* string - One of: <code>Longitudinal</code> or <code>TransversalVertical</code> velocity* number m/s Material wave speed corresponding to the specified wave mode (used for beam delay calculation) wedgeDelay number s Delay corresponding to the sound propagation within the wedge rectification string - RF signal rectification type, one of <code>None</code>, <code>Positive</code>, <code>Negative</code>, <code>Full</code> digitizingFrequency number Hz Sampling rate of the saved  A-Scans ascanSynchroMode string - Type of A-Scan syncrhonisation, one of <code>Pulse</code>, <code>SynchroGateRelative</code> ascanCompressionFactor integer - Compression factor applied to A-Scans gain number dB Hardware gain applied to all A-Scans ultrasoundMode string - Ultrasound mode, one of <code>TrueDepth</code>, <code>SoundPath</code>, <code>Time</code> referenceAmplitude number % A-Scan Full-Screen height of the reference amplitude referenceGain number dB Reference gain value to which other gain values will be offsetted smoothingFilter number Hz Characteristic frequency of the smoothing filter averagingFactor integer - Number of averagings beams array - beams array digitalBandPassFilter object - digitalBandPassFilter object pulse object - pulse object gates object - gates object calibrationStates array - calibration states array lawFile object - focusing* object - focusing object (except for the tandem configuration case) One of the following sub-object: <ul><li>pulseEcho<li>pitchCatch</li><li>tandem*</li>"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicPhasedArray/#pulseecho-object","title":"pulseEcho object","text":"<p>The pulseEcho object describes the probe used in an acquisition pattern where the same probe is used at emission and reception and the associated beams formation.</p> Property Type Description probeId integer The id of the probe used at emission and reception in a pulse-echo setup One of the following sub-object: <ul><li>linearFormation</li><li>sectorialFormation</li><li>compoundFormation</li></ul>"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicPhasedArray/#pitchcatch-object","title":"pitchCatch object","text":"<p>The pitchCatch object describes the probes used in an acquisition pattern where one probe is used at emission and an other at reception and the associated beams formation.</p> Property Type Description pulserProbeId integer The id of the probe used at emission in a pitch-catch setup receiverProbeId integer The id of the probe used at emission in a pitch-catch setup One of the following sub-object: <ul><li>linearFormation</li><li>sectorialFormation</li><li>compoundFormation</li></ul>"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicPhasedArray/#tandem-object","title":"tandem object","text":"<p>The tandem object describes the time-of-flight (TOFD) diffraction technique parameters and the associated beams formation.</p> Property Type Unit Description pulserProbeId integer - The id of the probe used at emission  in a TOFD setup receiverProbeId integer - The id of the probe used at reception in a TOFD setup pulserFormation object - singleFormation object receiverFormation object - singleFormation object"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicPhasedArray/#linearformation-object","title":"linearFormation object","text":"Property Type Unit Description probeFirstElementId* integer - The id of the first element of the probe in the firing sequence probeLastElementId* integer - The id of the last element of the probe in the firing sequence elementStep* number - The step (number of elements) between each firing sequence elementAperture* integer - The aperture in number of elements beamRefractedAngle* number \u00b0 The refracted angle of the wavefront in the specimen used for beams delays calculation"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicPhasedArray/#sectorialformation-object","title":"sectorialFormation object","text":"Property Type Description probeFirstElementId* integer The id of the first element of the probe in the firing sequence elementAperture* integer The aperture in number of elements beamRefractedAngles* object beamRefractedAngles  object"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicPhasedArray/#beamrefractedangles-object","title":"beamRefractedAngles object","text":"Property Type Unit Description start* number \u00b0 Angle start for beams delays calculation stop* number \u00b0 Angle stop for beams delays calculation step* number \u00b0 Angle step for beams delays calculation"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicPhasedArray/#compoundformation-object","title":"compoundFormation object","text":"Property Type Description probeFirstElementId* integer The id of the first element of the probe in the firing sequence probeLastElementId* integer The id of the last element of the probe in the firing sequence elementAperture* integer The aperture in number of elements beamRefractedAngles* number beamRefractedAngles  object"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicPhasedArray/#singleformation-object","title":"singleFormation object","text":"Property Type Unit Description probeFirstElementId* integer - The id of the first element of the probe in the firing sequence elementAperture* integer - The aperture in number of elements beamRefractedAngle* number \u00b0 The refracted angle of the wavefront in the specimen used for beams delays calculation velocity number m/s Material wave speed for the corresponding wave mode used for beams delay calculation focusingDistance number m Focusing distance used for beams delays calculation"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicPhasedArray/#pulse-object","title":"pulse object","text":"Property Type Unit Description width* number s Time duration, in seconds, of the high-voltage square pulse used to excite the transducer element voltage* number V Amplitude, in Volts, of the square pulse used to excite the transducer element polarity string - Polarity of the square pulse used to excite the transducer element, one of: <code>Bipolar</code>, <code>UnipolarPositive</code>, <code>UnipolarNegative</code>. A <code>Bipolar</code> pulse is assumed to be negative first and then positive."},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicPhasedArray/#focusing-object","title":"focusing object","text":"Property Type Unit Description mode* string - Focusing mode, one of <code>TrueDepth</code>, <code>HalfPath</code>, <code>Unfocused</code>, <code>Projection</code> distance number m Focusing distance used for beams delays calculation angle number \u00b0 Focusing angle used for beams delays calculation"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicPhasedArray/#beams-array","title":"beams array","text":"Property Type Unit Description id* integer - The unique id of the beam within the ultrasonicPhasedArray process skewAngle* number \u00b0 - refractedAngle* number \u00b0 The refracted angle of the wavefront in the specimen used for this specific beam beamDelay* number s ascanStart* number s When recording of the ascan start for this beam acanLength* number s Time extent of each A-Scan for this beam gainOffset number dB recurrence number sumGain number dB sumGainMode string One of <code>Manual</code>, <code>Automatic</code> tcg object - tcg object pulsers array - pulsers object receivers array - receivers object"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicPhasedArray/#tcg-object","title":"tcg object","text":"Property Type Description synchroMode string One of <code>Pulse</code> or <code>AscanSynchroRelative</code> points* array TCG points array"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicPhasedArray/#points-array","title":"points array","text":"<p>The points array lists the Time-Corrected Gain (TCG) points, with the corresponding gain to apply for a given time increment. </p> Property Type Unit Description time* number s Time increment in seconds gain* number dB Gain in decibel"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicPhasedArray/#pulsers-array","title":"pulsers array","text":"Property Type Unit Description id integer - The unique id of the pulser associated with the beam elementId integer - The elementId of the probe used by the pulser delay number s The associated delay applied to this pulser before firing"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicPhasedArray/#receivers-array","title":"receivers array","text":"Property Type Unit Description id integer - The unique id of the receiver associated with the beam elementId integer - The elementId of the probe used by the receiver delay number s The associated delay applied to this receiver before recording the A-Scan"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicPhasedArray/#gates-object","title":"gates object","text":"Property Type Unit Description id* integer - Unique id of the gate within the acquisition process name string - Name of the gate  (e.g. \"A\", \"B\", \"I\" etc.) geometry string - One of <code>SoundPath</code> or <code>TrueDepth</code> start* number s Gate starting time length* number s Gate time extent threshold* number % Threshold level thresholdPolarity* string - One of <code>Absolute</code>, <code>Positive</code> or <code>Negative</code> synchronization* object - synchronization object"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicPhasedArray/#synchronization-object","title":"synchronization object","text":"Property Type Description mode string Synchronization mode, one of: <code>Pulse</code> or <code>GateRelative</code> triggeringEvent string When synchronization is performed against a gate (<code>GateRelative</code>), the synchronization triggering event, one of: <code>Peak</code> or <code>Crossing</code> gateId integer When synchronization is performed against a gate (<code>GateRelative</code>), the corresponding gate Id in the ultrasonic acquisition process gates object"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicPhasedArray/#digitalbandpassfilter-object","title":"digitalBandPassFilter object","text":"<p>The digitalBandPassFilter object describes the band-pass filter parameters applied during acquisition.</p> Property Type Unit Description filterType* string - The type of filter, one of: <code>None</code>, <code>LowPass</code>, <code>HighPass</code>, <code>BandPass</code> highCutOffFrequency* number Hz High cutoff frequency in Hz lowCutOffFrequency* number Hz Low cutoff frequency in Hz characteristic* string - One of: <code>None</code>, <code>TOFD</code>"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicPhasedArray/#calibrationstates-array","title":"calibrationStates array","text":"Property Type Description sensitivityCalibration object calibrationState object tcgCalibration object calibrationState object velocityCalibration object calibrationState object wedgeDelayCalibration object calibrationState object dacCalibration object calibrationState object dgsCalibration object calibrationState object tofdWedgeDelayCalibration object calibrationState object"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicPhasedArray/#calibrationstate-object","title":"calibrationState object","text":"<p>Same structure for sensitivityCalibration, tcgCalibration, velocityCalibration, wedgeDelayCalibration, dacCalibration, dgsCalibration, tofdWedgeDelayCalibration.</p> Property Type Description calibrated* boolean Indicate whether the calibration was performed or not"},{"location":"json-metadata/setup/data-model/groups/processes/ultrasonicPhasedArray/#lawfile-object","title":"lawFile object","text":"Property Type Description filename* string Name of the law file path* string The path of the law file inside the HDF5 structure"},{"location":"supporting-software/","title":"Supporting software","text":"<p>Software that reads or writes .NDE files are listed on this page. Depending on the level of integration and specialization, some software will only be compatible with .NDE files produced with a specific instrument or software (in cases where the Private section is used mostly). However, data access and interoperability is still provided through the Public section of the file. </p> <p>Feel free to reach out to us if you want your software to be added to this list. </p>"},{"location":"supporting-software/#evident","title":"Evident","text":"<ul> <li> <p> MXU</p> <p></p> <p>The embedded software powering the OmniScan product line.</p> <p> Changelog</p> <p> Write OmniScan X3 and X4 .nde files</p> </li> <li> <p> OmniPC</p> <p></p> <p>The embedded companion analysis tool of the OmniScan product line.</p> <p> Download</p> <p> Read OmniScan X3 and X4 .nde files</p> </li> <li> <p> AeroView</p> <p></p> <p>A comprehensive acquisition and analysis software for the aerospace industry.</p> <p> Learn more</p> <p> Read/Write .nde files</p> </li> <li> <p> WeldSight</p> <p></p> <p>A comprehensive acquisition and analysis software for advanced weld inspections.</p> <p> Learn more</p> <p> Read OmniScan .nde files</p> </li> </ul>"},{"location":"supporting-software/evident/omniscan-mxu/","title":"OmniScan MXU","text":"<p>Specific information related to how the OmniScan X3 and X4 products save .nde files will be documented on this page. </p>"},{"location":"supporting-software/evident/omniscan-mxu/#changelog","title":"CHANGELOG","text":"<p>Any change or correction regarding the way the OmnicScan X3 and X4 are saving their data in the .nde format will be logged in this section. </p>"},{"location":"versioning/","title":"CHANGELOG","text":"<p>All notable changes to the .nde file format will be documented on this page. It is based on Keep a Changelog, and adheres to Semantic Versioning.</p>"},{"location":"versioning/#400-2024-10-21","title":"[4.0.0] - 2024-10-21","text":"<p>The 4.0.0 version is a big leap and the changes are described in a dedicated section. </p>"},{"location":"versioning/#330-2024-01-16","title":"[3.3.0] - 2024-01-16","text":""},{"location":"versioning/#added","title":"Added","text":"<ul> <li>The Pipe specimen now includes angularOpening, which is used to describe a curved part section.</li> </ul>"},{"location":"versioning/#320-2023-09-28","title":"[3.2.0] - 2023-09-28","text":""},{"location":"versioning/#changed","title":"Changed","text":"<ul> <li>elementQuantity property refers to a uniform definition of quantity using an integer data type.</li> </ul>"},{"location":"versioning/#added_1","title":"Added","text":"<ul> <li>New planeWaveCapture group configuration.</li> <li>New tandem PAUT group configuration.</li> <li>Experimental Elementary A-Scan dataset using StackedAScan axis.</li> <li>Experimental utMatrixCapture group with fullMatrixCapture configuration.</li> <li>Improved object description reused for documentation.</li> <li>Add id property to beams and dimensions array.</li> </ul>"},{"location":"versioning/#311-2023-07-10","title":"[3.1.1] - 2023-07-10","text":""},{"location":"versioning/#added_2","title":"Added","text":"<ul> <li>Schema reorganization including new id reference.</li> </ul>"},{"location":"versioning/#310-2023-04-21","title":"[3.1.0] - 2023-04-21","text":""},{"location":"versioning/#added_3","title":"Added","text":"<ul> <li>name and softwareProcess gain for tfmDescription.</li> <li>uCoordinateOrientation for discreteGrid.</li> <li>PCS for TOFD configuration.</li> <li>customOverlay2D for plateGeometry and pipeGeometry.</li> </ul>"},{"location":"versioning/#removed","title":"Removed","text":"<ul> <li>exclusiveMinimum for longitudinal and transversal vertical wave attenuationCoefficient.</li> <li>gateCscans dataset.</li> <li>Undefined elementaryAscan dataset.</li> </ul>"},{"location":"versioning/#301-2023-01-17","title":"[3.0.1] - 2023-01-17","text":""},{"location":"versioning/#added_4","title":"Added","text":"<ul> <li>Coherence data value unit for PCI.</li> </ul>"},{"location":"versioning/#deprecated","title":"Deprecated","text":"<ul> <li>gateCscans dataset.</li> <li>Undefined elementaryAscan dataset.</li> </ul>"},{"location":"versioning/#300-2022-12-20","title":"[3.0.0] - 2022-12-20","text":"<ul> <li>Initial schema version supported.</li> </ul>"},{"location":"versioning/version-4.0/examples/","title":"Examples","text":"<p>Examples of the same files in .NDE version 3.3 and 4.0 are provided below for 3 common use cases. </p> <p>Warning</p> <p>Files provided as examples only. They are not intended to be used with an official software release. </p>"},{"location":"versioning/version-4.0/examples/#manual-weld-scanning-using-conventional-ultrasound","title":"Manual Weld Scanning using Conventional Ultrasound","text":"<p>In this example, a weld bead on a 26 mm thick stainless steel plate is manually scanned using a C550 3.5 MHz single-element angle beam transducer mounted on a SPE2-60S-IHC 39\u00b0 wedge. The probe's position is recorded using an encoder.  </p> File name 3.3 4.0 ManualWeldUT.nde Download - View Download - View"},{"location":"versioning/version-4.0/examples/#manual-weld-scanning-using-phased-array-ultrasound","title":"Manual Weld Scanning using Phased-Array Ultrasound","text":"<p>In this example, a weld bead on a 26 mm thick stainless steel plate is manually scanned using a 2.25L16-A10 2.25 MHz 16 elements transducer mounted on a SA10-N55S 2.25L16 36\u00b0 wedge. The probe's position is recorded using an encoder.  </p> File name 3.3 4.0 ManualWeldPA.nde Download - View Download - View"},{"location":"versioning/version-4.0/examples/#wheel-probe-scanning-using-phased-array-ultrasound","title":"Wheel Probe Scanning using Phased-Array Ultrasound","text":"<p>In this example, a 12 mm thick plexiglass plate comprising engraved letters is scanned using the RollerFORM scanner and a 3.5L64-IWP1 3.5 MHz 64 elements transducer. The probe's position is recorded using the scanner encoder. </p> File name 3.3 4.0 RollerFORM.nde Download - View Download - View"},{"location":"versioning/version-4.0/examples/#x-y-raster-scanning-scanning-using-total-focusing-method","title":"X-Y Raster Scanning Scanning using Total Focusing Method","text":"<p>In this example, a 11 mm thick plexiglass plate comprising engraved letters is scanned using the GLIDER scanner and a 5L64-NW1 5 MHz 64 elements transducer. The probe's position is recorded using the scanner encoder. </p> File name 3.3 4.0 TFM_Raster.nde Download - View Download - View"},{"location":"versioning/version-4.0/whats-new-4.0/","title":"What's new in 4.0","text":""},{"location":"versioning/version-4.0/whats-new-4.0/#motivations","title":"Motivations","text":"<p>The existing version of the .NDE file format has limited support for Eddy current modality, advanced ultrasonic features, and future developments. Therefore, an update introducing breaking changes was necessary to establish a more flexible structure capable of seamlessly adapting to and accommodating new requirements or needs, while still maintaining a high level of standardization. This new structure will, for example, enables intergroup relationships within the JSON Setup dataset while preserving the simplicity of straightforward use cases.</p>"},{"location":"versioning/version-4.0/whats-new-4.0/#new-concepts","title":"New concepts","text":"<p>NDE 4.0 introduces a new way of structuring the .NDE File Format but also some new concepts.</p> <p>Within the JSON formatted Setup dataset:</p> <ul> <li> <p>DataClass \u2013 Allows to quickly identify the type of data associated with a Dataset. This attribute is standardized, documented, and included to the description of a datasets array item in the JSON Setup dataset structure. This was not standardized in previous versions and only had similar functionalities through the naming of previous dataset object sub-objects. </p> </li> <li> <p>Processes \u2013 A better way to describe how parameters are applied during acquisition or analysis and their impact on the resulting datasets. This object is standardized, documented, and added to the JSON Setup dataset structure. This was not standardized in previous versions and only had similar component in the description of the acquisition parameters found in the dataset object of the JSON Setup dataset structure.</p> </li> </ul> <p>The JSON formatted Properties dataset:  the approach for handling file-wide metadata was changed to adopt the same as the rest of the acquisition metadata with the Setup dataset. Hence, all metadata previously stored as HDF5 attributes at the root of the file are now stored within the Properties dataset, still located at the root of the file, and can be validated against a dedicated JSON Schema. See below for more information.</p> <p>Note</p> <p>To avoid confusion between HDF5 Groups and Groups defined within the .NDE standard, the term \"path\" will be preferred to designate an HDF5 Group. </p>"},{"location":"versioning/version-4.0/whats-new-4.0/#modifications-to-the-hdf-structure","title":"Modifications to the HDF Structure","text":"<p>The overall HDF structure spirit remains unchanged with a container for nonstandardized application usage (/Private) and a standardized container for the data and setup or any contextual information that describes the data (/Public). </p> <ul> <li>The name of those root containers was slightly revisited to be more meaningful, hence the previous /Applications section is renamed /Private    and the previous /Domain section is renamed /Public.</li> </ul> <ul> <li> <p>Groups, that may contain inspection data but also other context information, were previously found under the /Domain/DataGroups path. They are now stored under the /Public/Groups path to reflect the JSON Setup dataset structure as illustrated below. </p> <pre><code>flowchart TD\n    subgraph tre[\"Version 4.0\"]\n    direction LR\n    .nde4[.nde]:::root --&gt; Private[\"/Private\"]:::group\n    .nde4[.nde] --&gt; Public[\"/Public*\"]:::group\n    .nde4[.nde] --&gt; Properties[\"/Properties*\"]:::dataset\n    Public[\"/Public*\"] --&gt; Setup4[\"/Setup*\"]:::dataset\n    Public[\"/Public*\"] --&gt; Groups4[\"/Groups\"]:::group\n    style tre color:#000000\n    classDef root fill:#005cb9,stroke:#000000,color:#000000\n    classDef group fill:#ffc72c,stroke:#000000,color:#000000\n    classDef dataset fill:#fff,stroke:#000000,color:#000000\n    end\n    subgraph \"Version 3.3\"\n    direction LR\n    .nde3[.nde]:::root --&gt; Applications[\"/Applications\"]:::group\n    .nde3[.nde] --&gt; Domain[\"/Domain*\"]:::group\n    Domain[\"/Domain*\"] --&gt; Setup3[\"/Setup*\"]:::dataset\n    Domain[\"/Domain*\"] --&gt; Groups3[\"/Groups\"]:::group\n    classDef root fill:#005cb9,stroke:#000000,color:#000000\n    classDef group fill:#ffc72c,stroke:#000000,color:#000000\n    classDef dataset fill:#fff,stroke:#000000,color:#000000\n    end</code></pre> </li> <li> <p>Datasets, that contain inspection data, were previously stored following a ../[DataGroupId] + /Dataset + /[DatasetId] + /[DatasetType] path chain. They are now stored using the ../[GroupId] + /Datasets + /[DatasetId-DataClass] path chain, to simplify the access to data and reflect the JSON Setup dataset structure as illustrated in the example below.</p> <pre><code>flowchart TD\n    subgraph \"Version 4.0\"\n        direction LR\n        Groups4[Groups]:::gen --&gt; 04[0]:::gen\n        04 --&gt; Datasets4[Datasets]:::gen\n        Datasets4[Datasets] --&gt; 0-AScanAmplitude:::gen\n        Datasets4[Datasets] --&gt; 1-AScanStatus:::gen\n        Datasets4[Datasets] --&gt; 2-FiringSource:::gen\n        classDef gen fill:#fff,stroke:#000000,color:#000000\n    end\n    subgraph \"Version 3.3\"\n        direction LR\n        DataGroups3[DataGroups]:::gen --&gt; 03_1[0]:::gen\n        03_1 --&gt; Dataset3[Dataset]:::gen\n        Dataset3[Dataset] --&gt; 03_2[0]:::gen\n        03_2 --&gt; Amplitude:::gen\n        03_2 --&gt; Status:::gen\n        Dataset3[Dataset] --&gt; 13_2[1]:::gen\n        13_2 --&gt; FiringSource:::gen\n        classDef gen fill:#fff,stroke:#000000,color:#000000\n    end</code></pre> </li> </ul>"},{"location":"versioning/version-4.0/whats-new-4.0/#modifications-to-the-json-setup-dataset","title":"Modifications to the JSON Setup dataset","text":"<p>Info</p> <p>A pre-release version of the new JSON Schema used to validate the Setup dataset can be downloaded here. </p>"},{"location":"versioning/version-4.0/whats-new-4.0/#updated-groups-structure-with-datasets-and-processes","title":"Updated groups structure with datasets and processes","text":"<p>The concept of process is introduced and added to the description of groups, making the groups structure more standardized and enabling distinction between the information relative to the data contained in datasets and the parameters used to create or modify these datasets. </p> <p>Processes are described by their id, their inputs and outputs and a specific object listing all its parameters. Previous acquisition parameters objects - such as paut - and nested softwareProcess objects - such as thickness - are now converted to processes array items. By adopting this more general structure, possibilities are endless and notably enables intergroup relationships. Hence, processes can be chained and may have other processes as input as illustrated in the example below.</p> <pre><code>    flowchart TD\n    subgraph \"Group 1\"\n    Process1Gr1[\u2699\ufe0f Process 1]:::gen --&gt; Process2Gr1[\u2699\ufe0f Process 2]:::gen\n    Process1Gr1[\u2699\ufe0f Process 1] ----&gt; Dataset1Gr1[\ud83d\udcca Dataset 1]:::gen\n    Process2Gr1[\u2699\ufe0f Process 2] --&gt; Process3Gr1[\u2699\ufe0f Process 3]:::gen\n    Process3Gr1[\u2699\ufe0f Process 3] --&gt; Dataset2Gr1[\ud83d\udcca Dataset 2]:::gen\n    classDef gen fill:#fff,stroke:#000000,color:#000000\n    end\n    subgraph \"Group 2\"\n    Process1Gr1:::gen --&gt; Process1Gr2[\u2699\ufe0f Process 1]:::gen\n    Process1Gr2[\u2699\ufe0f Process 1] ----&gt; Dataset1Gr2[\ud83d\udcca Dataset 1]:::gen\n    Process1Gr2[\u2699\ufe0f Process 1] ----&gt; Dataset2Gr2[\ud83d\udcca Dataset 2]:::gen\n    Process1Gr2[\u2699\ufe0f Process 1] ----&gt; Dataset3Gr2[\ud83d\udcca Dataset 3]:::gen\n    classDef gen fill:#fff,stroke:#000000,color:#000000\n    end\n</code></pre> <p>Here is an example showing the difference between a typical JSON Setup dataset structure in version 3.3 and version 4.0 with new groups structure:</p> 4.03.3 <pre><code>{\n\"$schema\": \"./NDE-FileFormat-Schema-4.0.0.json\",\n\"version\": \"4.0.0\",\n\"scenario\": \"General Mapping\",\n\"groups\": [\n    {\n    \"id\": 0,\n    \"name\": \"GR-1\",\n    \"datasets\": [],\n    \"processes\": [\n        {\n        \"id\":0,\n        \"inputs\": [],\n        \"outputs\": [],\n        \"dataMappingId\": 0,\n        \"ultrasonicPhasedArray\": {}, // (1)!\n        }\n    ]\n    }\n],\n\"acquisitionUnits\": [],\n\"motionDevices\": [],\n\"dataMappings\": [], // (2)!\n\"specimens\": [],\n\"probes\": [],\n\"wedges\": []\n}\n</code></pre> <ol> <li>The same paut object as defined in version 3.3, renamed ultrasonicPhasedArray, is now nested inside a process object. </li> <li>dataEncodings is renamed dataMappings in version 4.0 to avoid misinterpretation with other encoding types.</li> </ol> <pre><code>{\n\"$schema\": \"./NDE-FileFormat-Schema-3.3.0.json\",\n\"version\": \"3.3.0\",\n\"scenario\": \"General Mapping\",\n\"groups\": [\n    {\n    \"id\": 0,\n    \"name\": \"GR-1\",\n    \"paut\": {},\n    \"dataset\": [],\n    }\n],\n\"acquisitionUnits\": [],\n\"motionDevices\": [],\n\"dataEncodings\": [],\n\"specimens\": [],\n\"probes\": [],\n\"wedges\": []\n}\n</code></pre> <p>Additionnaly, the role of each group structure layer is clearly defined: </p> <ul> <li> <p>Group: A group comprises datasets and processes that are inherently interconnected. Group identity is defined by its first process (processes[{\"id\": 0}]). A dataset invariably originates from a process.</p> </li> <li> <p>Dataset: A dataset is the minimum description of the content of a container for data of homogeneous nature, characterized by standardized data classes, with its volume potentially necessitating storage within the HDF5 structure. Through the process it originates, it establishes a connection between the data and physical reality (time and space).</p> </li> <li> <p>Process: A process describes an operation aimed at creating, modifying, or formatting data, which are ultimately stored or referenced within a dataset. Processes have inputs and outputs and can be directly linked to a dataset or to another process. </p> </li> </ul>"},{"location":"versioning/version-4.0/whats-new-4.0/#new-processes-structure","title":"New processes structure","text":"<p>The new concept of processes is introduced as an array comprising as many items as required to describe the processes chain leading to a dataset. Previous acquisition parameters objects - such as paut - and nested softwareProcess objects - such as thickness - are now converted to processes array items.</p> <p>The processes array</p> Property Description id* [number] The unique id of the process inside its parent group inputs [object] An object listing the group, process and output id used as inputs of the process. outputs [object] An object listing the dataset id and, if needed, the specific parameters of this output. implementation [string] Type of implementation for this process, typically <code>Hardware</code> or <code>Sotfware</code> dataMappingId [integer] The unique id of the dataMapping object related to the process <code>process specific object</code> [object] A specific object to describe process parameters, such as <code>ultrasonicPhasedArray</code> or <code>ultrasonicThickness</code> <p>Here is an example showing the difference between a specific paut acquisition object in version 3.3 and the new processes array in version 4.0 with the corresponding ultrasonicPhasedArray and ultrasonicThickness objects:</p> 4.03.3 <pre><code>\"processes\": [\n    {\n      \"inputs\": [],\n      \"outputs\": [],\n      \"id\": 0, \n      \"implementation\": \"Hardware\", \n      \"dataMappingId\": 0,\n      \"ultrasonicPhasedArray\": {\n        \"pulseEcho\": {},\n        \"waveMode\": \"Longitudinal\",\n        \"...\"}\n    },\n    {\n      \"inputs\": [],\n      \"outputs\": [],\n      \"id\": 1,\n      \"implementation\": \"Software\",\n      \"thickness\": {\n        \"min\": 0.00275,\n        \"...\"\n      }\n    }\n]\n</code></pre> <pre><code>\"paut\": {\n    \"pulseEcho\": {},\n    \"waveMode\": \"Longitudinal\",\n    \"...\"\n    \"softwareProcess\": {\n      \"thickness\": {\n        \"min\": 0.00275\n      }\n    }\n  }\n</code></pre>"},{"location":"versioning/version-4.0/whats-new-4.0/#updated-datasets-structure","title":"Updated datasets structure","text":"<p>The structure of datasets was also affected to be more general and versatile. Note that the dataset object is now plural - datasets - and is an array with standardize structure comprising an id, a dataTransformations array, a dataClass and - inherited from version 3.3 - a path and a dimensions object. </p> <p>Datasets array - replacing the previous dataset object</p> Property Description id* [number] The unique id of the dataset inside its parent group dataTransformations [array] A dataTransformations array references the last process of each process chain in charge of transforming the data to be displayed. dataClass* [string] The dataClass of the dataset, such as <code>AScanAmplitude</code>, <code>AScanStatus</code> or <code>FiringSource</code> storageMode [string] The type of storage of mode, such as <code>Paintbrush</code> or <code>Independent</code> dataValue [object] The values the dataset can take, both raw values and values converted to the corresponding unit path* [string] The path to the dataset in the HDF structure dimensions* [object] A dimension object describing the dimensions of the HDF5 dataset and information ralative to the specimen surface grid through the referenced axis <p>Here is an example showing the difference between a typical dataset object in version 3.3 and the new datasets array in version 4.0:</p> 4.03.3 <pre><code>\"datasets\": [\n    {\n    \"id\": 0,\n    \"dataTransformations\":[\n      {\n        \"processId\": 0\n      }\n    ],\n    \"dataClass\": \"AScanAmplitude\",\n    \"storageMode\": \"Paintbrush\",\n    \"dataValue\": {\n        \"min\": 0, \n        \"max\": 32767, \n        \"unitMin\": 0.0, \n        \"unitMax\": 200.0, \n        \"unit\": \"Percent\"\n    },\n    \"path\": \"/Public/Groups/0/Datasets/0-AScanAmplitude\",\n    \"dimensions\": [...],\n    }\n]\n</code></pre> <pre><code>\"dataset\": {\n    \"ascan\": {\n      \"velocity\": 2700.0,\n      \"skewAngle\": 0.0,\n      \"refractedAngle\": 0.0,\n      \"amplitude\": {\n        \"dataSampling\": {\n          \"min\": 0,\n          \"max\": 32767\n        },\n        \"dataValue\": {\n          \"min\": 0,\n          \"max\": 200,\n          \"unit\": \"Percent\"\n        },\n        \"path\": \"/Domain/DataGroups/0/Datasets/0/Amplitude\",\n        \"dimensions\": [...]\n      }\n    },\n    \"overwriteCriteria\": \"Last\",\n    \"storageMode\": \"Paintbrush\"\n}\n</code></pre>"},{"location":"versioning/version-4.0/whats-new-4.0/#dataencodings-is-renamed-and-updated","title":"dataEncodings is renamed and updated","text":"<p>The dataEncodings object is renamed dataMappings to avoid confusion with other types of encoding. Its structure is slightly modified with specimenId and surfaceId properties moved up one level in the JSON structure.</p> 4.03.3 <pre><code>\"dataMappings\": [\n{\n  \"id\": 0,\n  \"specimenId\": 0,\n  \"surfaceId\": 0,\n  \"discreteGrid\": {\n    \"scanPattern\": \"OneLineScan\",\n    \"uCoordinateOrientation\": \"Length\",\n    \"dimensions\": [\n        {\n        \"axis\": \"UCoordinate\",\n        \"name\": \"Scan\",\n        \"offset\": 0.0,\n        \"quantity\": 301,\n        \"resolution\": 0.001\n        }\n    ]}\n}]\n</code></pre> <pre><code>\"dataEncodings\": [\n{\n  \"id\": 0,\n  \"discreteGrid\": {\n    \"specimenId\": 0,\n    \"surfaceId\": 0,\n    \"scanPattern\": \"OneLineScan\",\n    \"uCoordinateOrientation\": \"Length\",\n    \"dimensions\": [\n        {\n        \"axis\": \"UCoordinate\",\n        \"name\": \"Scan\",\n        \"offset\": 0.0,\n        \"quantity\": 301,\n        \"resolution\": 0.001\n        }\n    ]}\n}]\n</code></pre>"},{"location":"versioning/version-4.0/whats-new-4.0/#addition-of-the-json-properties-dataset","title":"Addition of the JSON Properties dataset","text":"<p>Previously, file-wide metadata were stored as HDF5 attributes at the root of the file. </p> 3.34.0 <p> </p> <p> </p> <p>To allow more flexibility and scalibility in the future, those file-wide metadata are transfered to a new JSON-formatted dataset named Properties and located at the root of the HDF5 hierarchy. Currently, this JSON-formatted dataset contains the same information as previous attributes in a file object as well as a new methods array to specify the NDT methods covered in the file (as described by ASNT). More objects will be added to the Properties dataset in the near future. </p> <p>Info</p> <p>A pre-release version of the new JSON Schema used to validate the Properties dataset can be downloaded here.</p> <pre><code>{\n   \"file\":{\n      \"createdByAppName\": \"MXU\",\n      \"createdByAppVersion\": \"5.18.1.0\",   \n      \"createdByAppCompany\": \"Evident\",   \n      \"creationDate\": \"2024-03-12T20:28:30+01:00\",\n      \"creationFormatVersion\": \"4.0.0-Dev\",    \n      \"modifiedByAppName\": \"MXU\",\n      \"modifiedByAppVersion\": \"5.18.1.0\",   \n      \"modifiedByAppCompany\": \"Evident\",   \n      \"modificationDate\": \"2024-03-12T20:32:30+01:00\",\n      \"formatVersion\": \"4.0.0-Dev\",    \n      \"notice\": \"Pre-release Version\",\n   },\n   \"methods\":[\"UT\"]\n}\n</code></pre>"},{"location":"versioning/version-4.0/whats-new-4.0/#support-of-advanced-ultrasonic-acquisitions","title":"Support of advanced ultrasonic acquisitions","text":"<p>Advanced ultrasonic acquisitions such as FMC, HMC, PWI and Sparse Array will be officially supported through a dedicated ultrasonicMatrixCapture process object in the JSON Setup dataset. The acquired elementary AScans will be stacked and stored in a AScanAmplitude dataset. </p>"},{"location":"versioning/version-4.0/whats-new-4.0/#enriched-documentation","title":"Enriched documentation","text":"<p>The overall documentation will be enriched with more detailed explanations, additionnal examples and code snippets, new and standardized illustrations and step-by-step guides for simple cases. </p>"},{"location":"versioning/version-4.0/whats-new-4.0/#coming-soon","title":"Coming soon","text":"<ul> <li>Support of C-Scans data</li> <li>Support of Eddy-current modality</li> <li>... and many more !</li> </ul>"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/overview/","title":"Overview","text":"<p>With the introduction of .NDE 4.0, modifications were made to the HDF structure  and to the JSON Setup dataset.  </p> <p>You may want to upgrade your application such as it is still compatible with new .NDE files. </p>"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/overview/#upgrading-your-application-to-readwrite-nde-files-from-version-33-to-version-40","title":"Upgrading your application to read/write .NDE files from version 3.3 to version 4.0","text":"<p>We recommend the following procedure to upgrade your application reading and/or writing .NDE version 3.3 files to be able to read and/or write .NDE version 4.0 files:</p> <ul> <li> Update the routine in charge of reading/writing the HDF root attributes for the new metadata JSON Properties dataset located under the new /Properties path following the upgrade guide.</li> <li> Update the routine in charge of reading/writing the HDF datasets currently located under /Domain/DataGroups  to the new /Public/Groups path following the upgrade guide.</li> <li> Update the routine in charge of reading/writing the JSON Setup dataset currently located under /Domain/Setup  to the new /Public/Setup path following the upgrade guide. </li> <li> Update any routine in charge of reading/writing data located under /Applications  to the new /Private path. </li> </ul>"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-hdf-structure/","title":"HDF structure upgrade guide","text":""},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-hdf-structure/#terminology","title":"Terminology","text":"<p>Note the correspondance between terms used in version 3.3 and in new terms used in version 4.0. </p> Version 3.3 Version 4.0 DataGroupId GroupId DatasetId DatasetId DatasetType DataClass"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-hdf-structure/#convert-datasettypes-to-dataclasses","title":"Convert DatasetTypes to DataClasses","text":"<p>The following correspondance needs to be made between previous DatasetTypes and new DataClasses:</p> nde  DatasetType nde  DataClass Amplitude AScanAmplitude Status AScanStatus FiringSource FiringSource Value (for TFM Images) TfmValue"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-hdf-structure/#update-datasets-paths","title":"Update datasets paths","text":"<p>It results in the following correspondance table for each dataset path. Note that TFM datasets were previously stored under a dedicated sub-path which is now removed for standardization. </p> Type nde  Previous datasets path nde  New datasets path PA /DataGroups + /[DataGroupId] + /Datasets + /[DatasetId] + /[DatasetType] /Groups + /[GroupId] + /Datasets + /[DatasetId-DataClass] TFM /DataGroups + /[DataGroupId] + /Datasets + /[DatasetId] + /TFM + /[DatasetType] /Groups + /[GroupId] + /Datasets + /[DatasetId-DataClass] <p>The following examples are provided for each supported DatasetType/DataClass for better understanding: </p> nde  Previous dataset path nde  New dataset path /DataGroups/0/Datasets/0/Amplitude /Groups/0/Datasets/0-AScanAmplitude /DataGroups/0/Datasets/0/Status /Groups/0/Datasets/1-AScanStatus /DataGroups/0/Datasets/1/FiringSource /Groups/0/Datasets/2-FiringSource /DataGroups/1/Datasets/0/TFM/Value /Groups/1/Datasets/0-TfmValue /DataGroups/1/Datasets/0/TFM/Status /Groups/1/Datasets/1-TfmStatus /DataGroups/1/Datasets/0/TFM/FiringSource /Groups/1/Datasets/2-FiringSource"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-json-setup/","title":"JSON Setup upgrade guide","text":"<p>A greater number of changes have been made to the JSON Setup dataset, especially within the groups object. Hence, we will go through modifications impacting each one of the higher level objects in the JSON file hierarchy which are represented below. Note that only the name of the dataEncodings object was updated to dataMappings at this level:</p> 4.03.3 <pre><code>{\n\"$schema\": \"...\",\n\"version\": \"...\",\n\"scenario\": \"...\",\n\"groups\": [],\n\"acquisitionUnits\": [],\n\"motionDevices\": [],\n\"dataMappings\": [],\n\"specimens\": [],\n\"probes\": [],\n\"wedges\": [],\n}\n</code></pre> <pre><code>{\n\"$schema\": \"...\",\n\"version\": \"...\",\n\"scenario\": \"...\",\n\"groups\": [],\n\"acquisitionUnits\": [],\n\"motionDevices\": [],\n\"dataEncodings\": [],\n\"specimens\": [],\n\"probes\": [],\n\"wedges\": [],\n}\n</code></pre>"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-json-setup/#schema","title":"$schema","text":"<p>This key needs to be updated to the last version of the JSON schema which is version 4.0.0</p> 4.03.3 <pre><code>{\n\"$schema\": \"./NDE-FileFormat-Schema-4.0.0.json\",\n}\n</code></pre> <pre><code>{\n\"$schema\": \"./NDE-FileFormat-Schema-3.3.0.json\",\n}\n</code></pre>"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-json-setup/#version","title":"version","text":"<p>This key needs to be updated to the last version of the .NDE standard which is 4.0.0</p> 4.03.3 <pre><code>{\n\"version\": \"4.0.0\",\n}\n</code></pre> <pre><code>{\n\"version\": \"3.3.0\",\n}\n</code></pre>"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-json-setup/#scenario","title":"scenario","text":"<p>No modifications were made to this object so far. The official release of .NDE 4.0 will confirm whether this object can be duplicated safely from 3.3. to 4.0. </p>"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-json-setup/#groups","title":"groups","text":"<p>The overal groups structure needs to be upgraded with the following modifications that will be detailed below:</p> Property Version 4.0 Version 3.3 Comment id [number] Unchanged name [string] Unchanged usage [string] Unchanged dataset [object] Now defined in the datasets array ut [object] Replaced by the ultrasonicConventional  processes array item paut [object] Replaced by the ultrasonicPhasedArray  processes array item fmc [object] Replaced by the ultrasonicMatrixCapture and totaFocusingMethod  processes array items datasets [array] - New datasets array array processes [array] - New processes array array <p> = property conserved |   = new property |   = property removed and replaced</p>"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-json-setup/#converting-dataset-object-properties-to-datasets-array","title":"Converting dataset object properties to datasets array","text":"<p>Converting previous dataset objects to new datasets array items require some important modifications. Please refer to the following tables for correlations between previous properties and new ones. </p> <p>Previous dataset object in version 3.3:</p> Property JSON Depth Comment ascan [object] 0  Divided into a AScanAmplitude and AScanStatus dataset ascan{velocity} [number] 1  Moved to the ultrasonicPhasedArray process ascan{skewAngle} [number] 1  Removed as already found in the paut object ascan{refractedAngle} [number] 1  Removed as already found in the paut object ascan{amplitude} [object] 1  Replaced by a AScanAmplitude dataset ascan{status} [object] 1  Replaced by a AScanStatus dataset firingSource [object] 0  Replaced by a FiringSource dataset storageMode [string] 0  Moved inside each datasets item definition dataSampling [object] 2  Merged with the dataValue object dataValue [object] 2  Moved with its childs inside each datasets item definition path [string] 2  Moved with its childs inside each datasets item definition dimensions  [object] 2  Moved with its childs inside each datasets item definition overwriteCriteria [string] 0  Removed as not necessary <p>New datasets array in version 4.0: </p> Property JSON Depth Comment id [number] 0  Needs to be unique within a group dataTransformations [array] 0  References the process chains in charge of processing the dataset dataTransformations[{processId}] [number] 1  The processId of the last process in the chain dataTransformations[{groupId}] [number] 1  The groupId of the last process in the chain (not required if in the same group) dataClass [string] 0 storageMode [string] 0 Same as storageMode in version 3.3 dataValue [object] 0 Same as dataValue in version 3.3 path [string] 0 Same as path in version 3.3 dimensions [object] 0 Same as dimensions object in version 3.3"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-json-setup/#ascanamplitude-datasets","title":"AScanAmplitude datasets","text":"<p>Let's see how a version 3.3 ascan{amplitude}(1) dataset can be converted to a AScanAmplitude datasets item in version 4.0:</p> <ol> <li>This notation is used to define and object{and one of its child} inside within the JSON hierarchy. </li> </ol> 4.03.3 <pre><code>\"datasets\": [\n    {\n    \"id\": 0,\n    \"dataTransformations\":[\n      {\n        \"processId\": 0\n      }\n    ],\n    \"dataClass\": \"AScanAmplitude\",\n    \"storageMode\": \"Paintbrush\",\n    \"dataValue\": {\n        \"min\": 0, // (1)!\n        \"max\": 32767, // (2)!\n        \"unitMin\": 0.0, // (3)!\n        \"unitMax\": 200.0, // (4)!\n        \"unit\": \"Percent\"\n    },\n    \"path\": \"/Public/Groups/0/Datasets/0-AScanAmplitude\",\n    \"dimensions\": [\n        {\n        \"axis\": \"UCoordinate\",\n        \"offset\": 0.0,\n        \"quantity\": 351,\n        \"resolution\": 0.001\n        },\n        {\n        \"axis\": \"VCoordinate\",\n        \"offset\": -0.07455,\n        \"quantity\": 114,\n        \"resolution\": 0.001\n        },\n        {\n        \"axis\": \"Ultrasound\",\n        \"offset\": 0.0,\n        \"quantity\": 568,\n        \"resolution\": 2E-08\n        }\n    ],\n    }\n]\n</code></pre> <ol> <li>Corresponds to the min value previously stored in the dataSampling objects</li> <li>Corresponds to the max value previously stored in the dataSampling objects</li> <li>Corresponds to the previous min value of the dataValue object</li> <li>Corresponds to the previous max value of the dataValue object</li> </ol> <pre><code>\"dataset\": {\n    \"ascan\": {\n      \"velocity\": 2700.0,\n      \"skewAngle\": 0.0,\n      \"refractedAngle\": 0.0,\n      \"amplitude\": {\n        \"dataSampling\": {\n          \"min\": 0,\n          \"max\": 32767\n        },\n        \"dataValue\": {\n          \"min\": 0,\n          \"max\": 200,\n          \"unit\": \"Percent\"\n        },\n        \"path\": \"/Domain/DataGroups/0/Datasets/0/Amplitude\",\n        \"dimensions\": [\n            {\n            \"axis\": \"UCoordinate\",\n            \"offset\": 0.0,\n            \"quantity\": 351,\n            \"resolution\": 0.001\n            },\n            {\n            \"axis\": \"VCoordinate\",\n            \"offset\": -0.07455,\n            \"quantity\": 114,\n            \"resolution\": 0.001\n            },\n            {\n            \"axis\": \"Ultrasound\",\n            \"offset\": 0.0,\n            \"quantity\": 568,\n            \"resolution\": 2E-08\n            }\n        ]\n      }\n    },\n    \"overwriteCriteria\": \"Last\",\n    \"storageMode\": \"Paintbrush\"\n}\n</code></pre>"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-json-setup/#ascanstatus-datasets","title":"AScanStatus datasets","text":"<p>Note</p> <p>This type of dataset is specific to the files saved with an Evident instrument and may be different with other vendors.</p> <p>Let's see how a version 3.3 ascan{status} dataset can be converted to a AScanStatus datasets item in version 4.0:</p> 4.03.3 <pre><code>\"datasets\": [\n    {\n    \"id\": 1,\n    \"dataTransformations\":[\n      {\n        \"processId\": 0\n      }\n    ],\n    \"dataClass\": \"AScanStatus\",\n    \"storageMode\": \"Paintbrush\",\n    \"dataValue\": {\n        \"hasData\": 1,\n        \"saturated\": 2,\n        \"noSynchro\": 4,\n        \"unit\": \"Bitfield\"\n    },\n    \"path\": \"/Public/Groups/0/Datasets/1-AScanStatus\",\n    \"dimensions\": [\n        {\n        \"axis\": \"UCoordinate\",\n        \"offset\": 0.2,\n        \"quantity\": 301,\n        \"resolution\": 0.001\n        },\n        {\n        \"axis\": \"VCoordinate\",\n        \"offset\": 0.0,\n        \"quantity\": 155,\n        \"resolution\": 0.001\n        }\n    ],\n    }\n]\n</code></pre> <pre><code>\"dataset\": {\n    \"ascan\": {\n        \"velocity\": 2700.0,\n        \"skewAngle\": 0.0,\n        \"refractedAngle\": 0.0,\n        \"status\": {\n        \"dataValue\": {\n            \"hasData\": 1,\n            \"saturated\": 2,\n            \"noSynchro\": 4,\n            \"unit\": \"Bitfield\"\n        },\n        \"path\": \"/Domain/DataGroups/0/Datasets/0/Status\",\n        \"dimensions\": [\n            {\n            \"axis\": \"UCoordinate\",\n            \"offset\": 0.2,\n            \"quantity\": 301,\n            \"resolution\": 0.001\n            },\n            {\n            \"axis\": \"VCoordinate\",\n            \"offset\": 0.0,\n            \"quantity\": 155,\n            \"resolution\": 0.001\n            }\n        ]\n        }\n    },\n    \"overwriteCriteria\": \"Last\",\n    \"storageMode\": \"Paintbrush\"\n}\n</code></pre>"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-json-setup/#firingsource-datasets","title":"FiringSource datasets","text":"<p>Note</p> <p>This type of dataset is specific to the files saved with an Evident instrument and may be different with other vendors. </p> <p>Let's see how a version 3.3 firingSource dataset can be converted to a FiringSource datasets item in version 4.0:</p> 4.03.3 <pre><code>\"datasets\": [\n    {\n    \"id\": 2,\n    \"dataTransformations\":[\n      {\n        \"processId\": 0\n      }\n    ],\n    \"dataClass\": \"FiringSource\",\n    \"storageMode\": \"Paintbrush\",\n    \"dataValue\": {\n        \"min\": 0,\n        \"max\": 64,\n        \"unit\": \"BeamId\"\n    },\n    \"path\": \"/Public/Groups/0/Datasets/2-FiringSource\",\n    \"dimensions\": [\n        {\n        \"axis\": \"UCoordinate\",\n        \"offset\": 0.2,\n        \"quantity\": 301,\n        \"resolution\": 0.001\n        },\n        {\n        \"axis\": \"VCoordinate\",\n        \"offset\": 0.0,\n        \"quantity\": 155,\n        \"resolution\": 0.001\n        }\n    ],\n    }\n]\n</code></pre> <pre><code>\"dataset\": {\n    \"firingSource\": {\n        \"path\": \"/Domain/DataGroups/0/Datasets/1/FiringSource\",\n        \"dataValue\": {\n            \"min\": 0,\n            \"max\": 64,\n            \"unit\": \"BeamId\"\n        },\n        \"dimensions\": [\n            {\n            \"axis\": \"UCoordinate\",\n            \"offset\": 0.2,\n            \"quantity\": 301,\n            \"resolution\": 0.001\n            },\n            {\n            \"axis\": \"VCoordinate\",\n            \"offset\": 0.0,\n            \"quantity\": 155,\n            \"resolution\": 0.001\n            }\n        ]\n    },\n    \"overwriteCriteria\": \"Last\",\n    \"storageMode\": \"Paintbrush\"\n}\n</code></pre>"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-json-setup/#converting-ut-paut-fmc-objects-to-processes-array-items","title":"Converting ut, paut, fmc objects to processes array items","text":"<p>Each new processes array item has the same basic structure: </p> Property Comment id* [integer] The unique process id in the JSON structure implementation [string] The process implementation type, can be <code>Software</code> or <code>Hardware</code> inputs [object] An inputs array describing the different inputs of the process outputs [object] An outputs array describing the different outputs of the process dataMappingId [number] Previously found inside paut, ut or tfmDescription object, refers to the corresponding dataMapping object Id One of the following sub-object: <ul><li>ultrasonicConventional</li><li>ultrasonicPhasedArray</li><li>ultrasonicMatrixCapture</li><li>totalFocusingMethod</li><li>tfmBoxGates</li><li>thickness</li><li>gain</li></ul> <p>Converting previous ut, paut, fmc and tfmDescriptions objects to new processes array items require some slight modifications. Please refer to the following tables for correspondance between previous properties and new ones. </p>"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-json-setup/#ultrasonicphasedarray-process","title":"ultrasonicPhasedArray process","text":"<p>Most of the previous paut object properties remain unchanged in the new ultrasonicPhasedArray object now found inside the processes array. </p> Property nde  ultrasonicPhasedArray{} nde  paut{} Comment dataEncodingId [number] Moved to datasets array item as dataMappingId pulseEcho [object] waveMode [string] velocity [number] focusing [object] beams [array] pulse [object] gates [array] rectification [string] digitizingFrequency [number] ascanSynchroMode [string] ascanCompressionFactor [number] gain [number] wedgeDelay [number] ultrasoundMode [string] highAmplitude [number] Removed as it was a redundant with the dataset dataValue object content referenceAmplitude [number] referenceGain [number] digitalBandPassFilter [object] smoothingFilter [number] averagingFactor [number] softwareProcess [object] Moved to a dedicated ultrasonicThickness processes array item <p>Additionally, please note that some irrelevant parameters associated with the instrument configuration were removed: </p> <ul> <li>from the gates array: produceCscanData, peakDetection and timeSelection</li> <li>from the tcg object (inside the beams array): enabled</li> </ul> <p>Let's see how a version 3.3 paut object can be converted to a ultrasonicPhasedArray processes array item in version 4.0:</p> 4.03.3 <pre><code>\"processes\": [\n  {\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"id\": 0,\n        \"datasetId\": 0,\n        \"dataClass\": \"AScanAmplitude\"\n      },\n      {\n        \"id\": 1,\n        \"datasetId\": 1,\n        \"dataClass\": \"AScanStatus\"\n      }\n    ],\n    \"id\": 0, // (1)!\n    \"dataMappingId\": 0,\n    \"implementation\": \"Hardware\",\n    \"ultrasonicPhasedArray\": { // (2)!\n      \"pulseEcho\": {},\n      \"waveMode\": \"TransversalVertical\",\n      \"velocity\": 3100.0,\n      \"focusing\": {},\n      \"beams\": [],\n      \"pulse\": {},\n      \"gates\": [],\n      \"rectification\": \"Full\",\n      \"digitizingFrequency\": 100000000.0,\n      \"ascanSynchroMode\": \"Pulse\",\n      \"ascanCompressionFactor\": 6,\n      \"gain\": 33.1,\n      \"wedgeDelay\": 0.0,\n      \"ultrasoundMode\": \"TrueDepth\",\n      \"referenceAmplitude\": 80.0,\n      \"referenceGain\": 33.1,\n      \"digitalBandPassFilter\": {},\n      \"averagingFactor\": 1,\n      \"calibrationStates\": []\n    }\n  },\n  {\n    \"inputs\": [\n      {\n        \"processId\": 0\n      }\n    ],\n    \"outputs\": [],\n    \"id\": 1,\n    \"dataMappingId\": 0,\n    \"implementation\": \"Software\",\n    \"thickness\": { // (3)!\n      \"min\": 0.0065000000000000006,\n      \"max\": 0.0273,\n      \"gates\": [\n        {\n          \"id\": 1,\n          \"gateDetection\": \"MaximumPeak\"\n        }\n      ]\n    }\n  }\n]\n</code></pre> <ol> <li>As per convention, a process with an Id = 0 defines the group. This group is hence a \"Phased Array\" group.  </li> <li>This object is almost identical to the previous paut object</li> <li>This process replaces the previous softwareProcess inside the paut object</li> </ol> <pre><code>\"paut\": {\n    \"dataEncodingId\": 0,\n    \"pulseEcho\": {},\n    \"waveMode\": \"TransversalVertical\",\n    \"velocity\": 3100.0,\n    \"focusing\": {},\n    \"beams\": [],\n    \"pulse\": {},\n    \"gates\": [],\n    \"rectification\": \"Full\",\n    \"digitizingFrequency\": 100000000.0,\n    \"ascanSynchroMode\": \"Pulse\",\n    \"ascanCompressionFactor\": 6,\n    \"gain\": 33.1,\n    \"wedgeDelay\": 0.0,\n    \"ultrasoundMode\": \"TrueDepth\",\n    \"highAmplitude\": 200.0,\n    \"referenceAmplitude\": 80.0,\n    \"referenceGain\": 33.1,\n    \"digitalBandPassFilter\": {},\n    \"averagingFactor\": 1,\n    \"calibrationStates\": [],\n    \"softwareProcess\": {\n      \"thickness\": {\n        \"min\": 0.0065000000000000006,\n        \"max\": 0.0273,\n        \"gates\": [\n          {\n            \"id\": 1,\n            \"timeSelection\": \"Peak\"\n          }\n        ]\n      }\n    }\n}\n</code></pre>"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-json-setup/#ultrasonicconventional-process","title":"ultrasonicConventional process","text":"<p>Most of the previous ut object properties remain unchanged in the new ultrasonicConventional object now found inside the processes array.</p> Property nde  ultrasonicConventional{} nde  ut{} Comment dataEncodingId [number] Moved to datasets array item as dataMappingId pulseEcho [object] or pitchCatch [object] or tofd [object] waveMode [string] velocity [number] refractedAngle [number] Moved inside the beams array wedgeDelay [number] ascanStart [number] Moved inside the beams array ascanLength [number] Moved inside the beams array pulse [object] gates [array] rectification [string] digitizingFrequency [number] ascanSynchroMode [string] ascanCompressionFactor [number] gain [number] ultrasoundMode [string] referenceAmplitude [number] referenceGain [number] digitalBandPassFilter [object] smoothingFilter [number] averagingFactor [number] softwareProcess [object] Moved to a dedicated thickness processes array item recurrence [number] Moved inside the beams array tcg [object] Moved inside the beams array calibrationStates [array] beams [array] New array for uniformity with the ultrasonicPhasedArray process <p>Additionally, please note that some irrelevant parameters associated with the instrument configuration were removed: </p> <ul> <li>from the gates array: produceCscanData, peakDetection and timeSelection</li> <li>from the tcg object: enabled</li> </ul> <p>Let's see how a version 3.3 ut object can be converted to a ultrasonicConventional processes array item in version 4.0:</p> 4.03.3 <pre><code>\"processes\": [\n  {\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"id\": 0,\n        \"datasetId\": 0,\n        \"dataClass\": \"AScanAmplitude\"\n      },\n      {\n        \"id\": 1,\n        \"datasetId\": 1,\n        \"dataClass\": \"AScanStatus\"\n      }\n    ],\n    \"id\": 0, // (1)!\n    \"dataMappingId\": 0,\n    \"implementation\": \"Hardware\",\n    \"ultrasonicConventional\": { // (2)!\n      \"pulseEcho\": {\n        \"probeId\": 0\n      },\n      \"waveMode\": \"TransversalVertical\",\n      \"velocity\": 3100.0,\n      \"wedgeDelay\": 6.4799999999999989E-06,\n      \"digitizingFrequency\": 100000000.0,\n      \"pulse\": {},\n      \"gates\": [],\n      \"rectification\": \"Full\",\n      \"ascanCompressionFactor\": 6,\n      \"gain\": 50.0,\n      \"ultrasoundMode\": \"TrueDepth\",\n      \"referenceAmplitude\": 80.0,\n      \"referenceGain\": 0.0,\n      \"digitalBandPassFilter\": {},\n      \"smoothingFilter\": 5000000.0,\n      \"averagingFactor\": 1,\n      \"beams\": [\n        {\n          \"id\": 0,\n          \"refractedAngle\": 60.0,\n          \"ascanStart\": 0.0,\n          \"ascanLength\": 3.408E-05\n        }\n      ]\n    }\n  },\n  {\n    \"inputs\": [\n      {\n        \"processId\": 0\n      }\n    ],\n    \"outputs\": [],\n    \"id\": 1,\n    \"dataMappingId\": 0,\n    \"implementation\": \"Software\",\n    \"thickness\": { // (3)!\n      \"min\": 0.00375,\n      \"max\": 0.01575,\n      \"gates\": [\n        {\n          \"id\": 1,\n          \"gateDetection\": \"MaximumPeak\"\n        }\n      ]\n    }\n  }\n]\n</code></pre> <ol> <li>As per convention, a process with an Id = 0 defines the group. This group is hence a \"Ultrasonic Conventional\" group.  </li> <li>This object is almost identical to the previous ut object</li> <li>This process replaces the previous softwareProcess inside the ut object</li> </ol> <pre><code>\"ut\": {\n  \"dataEncodingId\": 0,\n  \"pulseEcho\": {\n    \"probeId\": 0\n  },\n  \"waveMode\": \"TransversalVertical\",\n  \"velocity\": 3100.0,\n  \"refractedAngle\": 60.0,\n  \"wedgeDelay\": 6.4799999999999989E-06,\n  \"ascanStart\": 0.0,\n  \"digitizingFrequency\": 100000000.0,\n  \"ascanLength\": 3.408E-05,\n  \"pulse\": {},\n  \"gates\": [],\n  \"rectification\": \"Full\",\n  \"ascanCompressionFactor\": 6,\n  \"gain\": 50.0,\n  \"ultrasoundMode\": \"TrueDepth\",\n  \"highAmplitude\": 200.0,\n  \"referenceAmplitude\": 80.0,\n  \"referenceGain\": 0.0,\n  \"digitalBandPassFilter\": {},\n  \"smoothingFilter\": 5000000.0,\n  \"averagingFactor\": 1,\n  \"softwareProcess\": {\n    \"thickness\": {\n      \"min\": 0.00375,\n      \"max\": 0.01575,\n      \"gates\": [\n        {\n          \"id\": 1,\n          \"timeSelection\": \"Peak\"\n        }\n      ]\n    }\n  }\n}\n</code></pre>"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-json-setup/#ultrasonicmatrixcapture-and-totalfocusingmethod-processes","title":"ultrasonicMatrixCapture and totalFocusingMethod processes","text":"<p>Previously, a TFM was described by a fmc object in which a tfmDescriptions was nested. These are now two different processes in two different groups that are interconnected. </p> <p>Converting previous fmc objects to new ultrasonicMatrixCapture array items require some important modifications. Please refer to the following tables for correspondance between previous properties and new ones. </p> <p>Previous fmc object in version 3.3:</p> Property JSON Depth Comment dataEncoding [integer] 0  Moved one layer above in the general structure of the process probeId [number] 0  Moved inside each beams[{pulsers[]}] and beams[{pulsers[]}] array items pulse [object] 0  Moved inside the waveforms object pulserFrequency [number] 0  Moved inside the ultrasonicMatrixCapture object digitizingFrequency [number] 0  Moved inside the ultrasonicMatrixCapture object pulsers [object] 0  Moved inside the ultrasonicMatrixCapture{beams[]} array receivers [object] 0  Moved inside the ultrasonicMatrixCapture{beams[]} array tfmDescriptions [object] 0  Replaced by the totalFocusingMethod process <p>New ultrasonicMatrixCapture object in version 4.0: </p> Property JSON Depth Comment acquisitionPattern [string] 0  Indicate which type of acquisition pattern is used, such as <code>FMC</code>, <code>PWI</code> or <code>Sparse</code> digitizingFrequency [number] 0 Same as digitizingFrequency in version 3.3 pulserFrequency [number] 0 Same as pulserFrequency in version 3.3 digitalBandPassFilter [number] 0 Same as digitalBandPassFilter found in tfmDescriptions array in version 3.3 waveforms [array] 0  Describe any type of waveform that could be used for firing a transducer element waveforms[{pulse}] [object] 1 Same as pulse in version 3.3 beams [array] 0  List all the different beams used for acquisitions, in a similar structure as ultrasonicPhasedArray <p>Let's see how a version 3.3 fmc object can be converted to ultrasonicMatrixCapture and fullMatrixCapture processes in version 4.0:</p> 4.03.3 <pre><code>\"groups\": [\n{\n  \"id\": 0,\n  \"processes\": [\n    {\n      \"inputs\": [],\n      \"outputs\": [],\n      \"id\": 0,\n      \"dataMappingId\": 0,\n      \"implementation\": \"Hardware\",\n      \"ultrasonicMatrixCapture\": {\n        \"acquisitionPattern\": \"FMC\",\n        \"digitalBandPassFilter\": {},\n        \"digitizingFrequency\": 80000000.0,\n        \"pulserFrequency\": 5000000.0,\n        \"waveforms\": [\n          {\n            \"id\": 0,\n            \"pulse\": {\n              \"width\": 1.0000000000000001E-07,\n              \"voltage\": 40.0,\n              \"polarity\": \"Bipolar\"\n            }\n          }\n        ],\n        \"beams\": [\n          {\n            \"id\": 0,\n            \"pulsers\": [\n              {\n                \"id\": 0,\n                \"probeId\": 0, // (1)!\n                \"elementId\": 0, \n                \"waveformId\": 0 // (2)!\n              }\n            ],\n            \"receivers\": [\n              {\n                \"id\": 0,\n                \"probeId\": 0,\n                \"elementId\": 0,\n                \"ascanStart\": 0.0, // (3)!\n                \"ascanLength\": 0.00020480000000000002 // (4)!\n              },\n              {\n                \"id\": 1,\n                \"probeId\": 0,\n                \"elementId\": 1,\n                \"ascanStart\": 0.0,\n                \"ascanLength\": 0.00020480000000000002\n              }\n              {...}\n            ]\n          }\n        ]\n      }\n    }\n  ]\n},\n{\n  \"id\": 1,\n  \"processes\": [\n    {\n      \"inputs\": [\n        {\n          \"processId\": 0,\n          \"groupId\": 0\n        }\n      ],\n      \"outputs\": [\n        {\n          \"id\": 0,\n          \"datasetId\": 0,\n          \"dataClass\": \"TfmValue\"\n        }\n      ],\n      \"id\": 0,\n      \"dataMappingId\": 0,\n      \"implementation\": \"Hardware\",\n      \"totalFocusingMethod\": {} // (5)!\n    }\n  ]\n}\n]\n</code></pre> <ol> <li>The probeId was added to each pulsers and/or receivers array items to cover more advanced cases.</li> <li>The waveformId was added to each pulsers array items to cover more advanced cases.</li> <li>The ascanStart was added to each receivers array items to cover more advanced cases.</li> <li>The ascanLength was added to each receivers array items to cover more advanced cases.</li> <li>The totalFocusingMethod parameters are now described in a dedicated process (see below)</li> </ol> <pre><code>\"groups\": [\n{\n  \"id\": 0,\n  \"fmc\": {\n    \"dataEncodingId\": 0,\n    \"probeId\": 0,\n    \"pulse\": {\n      \"width\": 1.0000000000000001E-07,\n      \"voltage\": 40.0,\n      \"polarity\": \"Bipolar\"\n    },\n    \"pulserFrequency\": 5000000.0,\n    \"digitizingFrequency\": 80000000.0,\n    \"pulsers\": [\n      {\n        \"id\": 0,\n        \"elementId\": 0\n      },\n      {...}\n    ],\n    \"receivers\": [\n      {\n        \"id\": 0,\n        \"elementId\": 0\n      },\n      {\n        \"id\": 1,\n        \"elementId\": 1\n      },\n      {...}\n      ],\n    \"tfmDescriptions\": []\n  }\n}\n]\n</code></pre> <p>Most of the previous tfmDescriptions object properties remain unchanged in the new totalFocusingMethod object now found inside the processes array.</p> Property nde  totalFocusingMethod{} nde  tfmDescriptions{} Comment id [integer] Removed as it was not necessary name [string] Removed as it can be specified directly in the group name signalSource [string] gain [number] referenceAmplitude [number] referenceGain [number] rectangularGrid [object] fmcPulserIds [array] fmcReceiverIds [array] pathName [string] waveSet [object] digitalBandPassFilter [object] Moved to the ultrasonicMatrixCapture processes array item columns [array] softwareProcess [object] Moved to a dedicated tfmBoxGates processes array item <p>Let's see how a version 3.3 tfmDescriptions object can be converted to a totalFocusingMethod processes array item in version 4.0:</p> 4.03.3 <pre><code>\"totalFocusingMethod\": {\n    \"signalSource\": \"Analytic\",\n    \"gain\": 22.0,\n    \"referenceAmplitude\": 80.0,\n    \"referenceGain\": 0.0,\n    \"rectangularGrid\": {},\n    \"fmcPulserIds\": [],\n    \"fmcReceiverIds\": [],\n    \"pathName\": \"L-L\",\n    \"waveSet\": {}\n}\n</code></pre> <pre><code>\"tfmDescriptions\": [\n  {\n    \"id\": 0,\n    \"name\": \"GR-1\",\n    \"signalSource\": \"Analytic\",\n    \"gain\": 22.0,\n    \"referenceAmplitude\": 80.0,\n    \"referenceGain\": 0.0,\n    \"rectangularGrid\": {},\n    \"fmcPulserIds\": [],\n    \"fmcReceiverIds\": [],\n    \"pathName\": \"L-L\",\n    \"waveSet\": {},\n    \"digitalBandPassFilter\": {},\n    \"softwareProcess\": {\n      \"boxGates\": []\n    }\n  }\n]\n</code></pre>"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-json-setup/#datamappings","title":"dataMappings","text":"<p>The dataEncodings object is renamed dataMappings to avoid confusion with other types of encoding.</p> <p>The following properties need to be moved up one level in the JSON structure: specimenId and surfaceId.</p> <p>The terms <code>ScanLength</code>, <code>ScanWidth</code>, <code>ScanAlong</code> and <code>ScanAround</code>  used for the uCoordinatedOrientation parameter were renamed <code>Length</code>, <code>Width</code>, <code>Along</code> and <code>Around</code> respectively to remove the notion of Scan axis from this parameter. </p> <p>Let's see how a version 3.3 dataEncodings object can be converted to a dataMappings object in version 4.0:</p> 4.03.3 <pre><code>\"dataMappings\": [\n{\n  \"id\": 0,\n  \"specimenId\": 0,\n  \"surfaceId\": 0,\n  \"discreteGrid\": {\n    \"scanPattern\": \"OneLineScan\",\n    \"uCoordinateOrientation\": \"Length\",\n    \"dimensions\": [\n        {\n        \"axis\": \"UCoordinate\",\n        \"name\": \"Scan\",\n        \"offset\": 0.0,\n        \"quantity\": 301,\n        \"resolution\": 0.001\n        }\n    ]}\n}]\n</code></pre> <pre><code>\"dataEncodings\": [\n{\n  \"id\": 0,\n  \"discreteGrid\": {\n    \"specimenId\": 0,\n    \"surfaceId\": 0,\n    \"scanPattern\": \"OneLineScan\",\n    \"uCoordinateOrientation\": \"ScanLength\",\n    \"dimensions\": [\n        {\n        \"axis\": \"UCoordinate\",\n        \"name\": \"Scan\",\n        \"offset\": 0.0,\n        \"quantity\": 301,\n        \"resolution\": 0.001\n        }\n    ]}\n}]\n</code></pre>"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-json-setup/#probes","title":"probes","text":"<p>No modifications were made to this object so far. The official release of .NDE 4.0 will confirm whether this object can be duplicated safely from 3.3. to 4.0. </p>"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-json-setup/#wedges","title":"wedges","text":"<p>No modifications were made to this object so far. The official release of .NDE 4.0 will confirm whether this object can be duplicated safely from 3.3. to 4.0. </p>"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-json-setup/#specimens","title":"specimens","text":"<p>No modifications were made to this object so far. The official release of .NDE 4.0 will confirm whether this object can be duplicated safely from 3.3. to 4.0. </p>"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-json-setup/#acquisitionunits","title":"acquisitionUnits","text":"<p>No modifications were made to this object so far. The official release of .NDE 4.0 will confirm whether this object can be duplicated safely from 3.3. to 4.0. </p>"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-json-setup/#motiondevices","title":"motionDevices","text":"<p>Note that the unit of the stepResolution parameter was converted from step/mm to step/m in version 4.0 to be consistent with the rest of the units used in the file. </p> 4.03.3 <pre><code>\"motionDevices\": [\n{\n  \"id\": 0,\n  \"name\": \"Glider\",\n  \"encoder\": {\n    \"mode\": \"Quadrature\",\n    \"stepResolution\": 13000.0,\n    \"preset\": 0.0,\n    \"acquisitionDirection\": \"Bidirectional\"\n  }\n},\n{\n  \"id\": 1,\n  \"name\": \"Glider\",\n  \"encoder\": {\n    \"mode\": \"Quadrature\",\n    \"stepResolution\": 13000.0,\n    \"preset\": 0.0,\n    \"acquisitionDirection\": \"Bidirectional\"\n  }\n}\n]\n</code></pre> <pre><code>\"motionDevices\": [\n{\n  \"id\": 0,\n  \"name\": \"Glider\",\n  \"encoder\": {\n    \"mode\": \"Quadrature\",\n    \"stepResolution\": 13.0,\n    \"preset\": 0.0,\n    \"acquisitionDirection\": \"Bidirectional\"\n  }\n},\n{\n  \"id\": 1,\n  \"name\": \"Glider\",\n  \"encoder\": {\n    \"mode\": \"Quadrature\",\n    \"stepResolution\": 13.0,\n    \"preset\": 0.0,\n    \"acquisitionDirection\": \"Bidirectional\"\n  }\n}\n]\n</code></pre>"},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-metadata/","title":"Metadata structure upgrade guide","text":""},{"location":"versioning/version-4.0/transitioning-3.3-4.0/upgrade-metadata/#convert-hdf5-root-attributes-to-the-new-json-properties-structure","title":"Convert HDF5 root attributes to the new JSON Properties structure","text":"<p>The following correspondancy can be made between old HDF5 attributes and the new Properties JSON dataset. Note that the methods array lists was added to specify the NDT methods covered in the file (as described by ASNT) and should be set to \"UT\" for all files in version 3.3. and earlier. </p> nde  HDF5 Attributes nde  Properties dataset Original Application Name - HDF5 Attribute at / createdByAppName - in Properties JSON under file object Original Application Version - HDF5 Attribute at / createdByAppVersion - in Properties JSON under file object Original Company Name - HDF5 Attribute at / createdByAppCompany - in Properties JSON under file object Date created - HDF5 Attribute at / creationDate - in Properties JSON under file object Original Format Version - HDF5 Attribute at / creationFormatVersion - in Properties JSON under file object Application Name - HDF5 Attribute at / modifiedByAppName - in Properties JSON under file object Application Version - HDF5 Attribute at / modifiedByAppVersion - in Properties JSON under file object Company Name - HDF5 Attribute at / modifiedByAppCompany - in Properties JSON under file object Date modified - HDF5 Attribute at / modificationDate - in Properties JSON under file object Format Version - HDF5 Attribute at / formatVersion - in Properties JSON under file object Notice - HDF5 Attribute at / notice - in Properties JSON under file object N/A methods - in Properties JSON, methods array <p>Here is an example of a Properties dataset located at the root of the HDF5 structure. </p> <pre><code>{\n   \"file\":{\n      \"createdByAppName\": \"MXU\",\n      \"createdByAppVersion\": \"5.18.1.0\",   \n      \"createdByAppCompany\": \"Evident\",   \n      \"creationDate\": \"2024-03-12T20:28:30+01:00\",\n      \"creationFormatVersion\": \"4.0.0-Dev\",    \n      \"modifiedByAppName\": \"MXU\",\n      \"modifiedByAppVersion\": \"5.18.1.0\",   \n      \"modifiedByAppCompany\": \"Evident\",   \n      \"modificationDate\": \"2024-03-12T20:32:30+01:00\",\n      \"formatVersion\": \"4.0.0-Dev\",    \n      \"notice\": \"Pre-release Version\",\n   },\n   \"methods\":[\"UT\"]\n}\n</code></pre>"}]}